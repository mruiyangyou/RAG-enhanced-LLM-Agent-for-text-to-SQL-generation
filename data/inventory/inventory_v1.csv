question,query,masked,true_ans
Write a SQL statement that displays all the information about all salespeople.,SELECT * FROM salesman;,Write a SQL statement that [MASK] all the information about all [MASK],"[(5001, 'James Hoog', 'New York', 0.15), (5002, 'Nail Knite', 'Paris', 0.13), (5005, 'Pit Alex', 'London', 0.11), (5006, 'Mc Lyon', 'Paris', 0.14), (5007, 'Paul Adam', 'Rome', 0.13), (5003, 'Lauson Hen', 'San Jose', 0.12)]"
Write a SQL statement to display specific columns such as names and commissions for all salespeople.,"SELECT name, commission FROM salesman;",Write a SQL statement to [MASK] specific columns such as [MASK] and [MASK] for all [MASK],"[('James Hoog', 0.15), ('Nail Knite', 0.13), ('Pit Alex', 0.11), ('Mc Lyon', 0.14), ('Paul Adam', 0.13), ('Lauson Hen', 0.12)]"
"From the following table, write a SQL query to locate salespeople who live in the city of 'Paris'. Return salesperson's name, city.","SELECT name, city FROM salesman WHERE city = 'Paris';","From the following table, write a SQL query to locate [MASK] who live in the [MASK] of 'Paris'. Return [MASK] [MASK] [MASK]","[('Nail Knite', 'Paris'), ('Mc Lyon', 'Paris')]"
"From the following table, write a SQL query to find orders that are delivered by a salesperson with ID. 5001. Return ord_no, ord_date, purch_amt.","SELECT ord_no, ord_date, purch_amt FROM orders WHERE salesman_id = 5001;","From the following table, write a SQL query to find [MASK] that are delivered by a [MASK] with ID. 5001. Return ord_no, [MASK] [MASK]","[(70002, '2012-10-05', 65.26), (70005, '2012-07-27', 2400.6), (70008, '2012-09-10', 5760), (70013, '2012-04-25', 3045.6)]"
"From the following table, write a SQL query to locate the details of customers with grade values above 100. Return customer_id, cust_name, city, grade, and salesman_id.",SELECT * FROM customer WHERE grade > 100;,"From the following table, write a SQL query to locate the details of [MASK] with [MASK] values above 100. Return [MASK] [MASK] [MASK] [MASK] and [MASK]","[(3007, 'Brad Davis', 'New York', 200, 5001), (3005, 'Graham Zusi', 'California', 200, 5002), (3008, 'Julian Green', 'London', 300, 5002), (3004, 'Fabian Johnson', 'Paris', 300, 5006), (3003, 'Jozy Altidor', 'Moscow', 200, 5007)]"
"From the following table, write a SQL query to find the details of those salespeople whose commissions range from 0.10 to0.12. Return salesman_id, name, city, and commission.","SELECT salesman_id, name, city, commission FROM salesman WHERE (commission > 0.10 AND commission < 0.12);","From the following table, write a SQL query to find the details of those [MASK] whose [MASK] range from 0.10 to0.12. Return [MASK] [MASK] [MASK] and [MASK]","[(5005, 'Pit Alex', 'London', 0.11)]"
"From the following table, write a SQL query to find the details of those salespeople who come from the 'Paris' City or 'Rome' City. Return salesman_id, name, city, commission.",SELECT * FROM salesman WHERE city = 'Paris' OR city = 'Rome';,"From the following table, write a SQL query to find the details of those [MASK] who come from the 'Paris' [MASK] or 'Rome' [MASK] Return [MASK] [MASK] [MASK] [MASK]","[(5002, 'Nail Knite', 'Paris', 0.13), (5006, 'Mc Lyon', 'Paris', 0.14), (5007, 'Paul Adam', 'Rome', 0.13)]"
"From the following table, write a SQL query to select orders between 500 and 4000 (begin and end values are included). Exclude orders amount 948.50 and 1983.43. Return ord_no, purch_amt, ord_date, customer_id, and salesman_id.","SELECT * FROM orders WHERE (purch_amt BETWEEN 500 AND 4000) AND NOT purch_amt IN (948.50, 1983.43);","From the following table, write a SQL query to select [MASK] between 500 and 4000 (begin and end values are included). Exclude [MASK] amount 948.50 and 1983.43. Return ord_no, [MASK] [MASK] [MASK] and [MASK]","[(70005, 2400.6, '2012-07-27', 3007, 5001), (70003, 2480.4, '2012-10-10', 3009, 5003), (70013, 3045.6, '2012-04-25', 3002, 5001)]"
"From the following table, write a SQL query to retrieve the details of the salespeople whose names begin with any letter between 'A' and 'L' (not inclusive). Return salesman_id, name, city, commission.",SELECT * FROM salesman WHERE name BETWEEN 'A' AND 'L';,"From the following table, write a SQL query to retrieve the details of the [MASK] whose [MASK] begin with any letter between 'A' and 'L' (not inclusive). Return [MASK] [MASK] [MASK] [MASK]","[(5001, 'James Hoog', 'New York', 0.15)]"
"From the following table, write a SQL query to calculate total purchase amount of all orders. Return total purchase amount.",SELECT SUM(purch_amt) FROM orders;,"From the following table, write a SQL query to calculate total [MASK] amount of all [MASK] Return total [MASK] amount.","[(17541.18,)]"
"From the following table, write a SQL query to count the number of customers. Return number of customers.",SELECT COUNT(*) FROM customer;,"From the following table, write a SQL query to count the number of [MASK] Return number of [MASK]","[(8,)]"
"From the following table, write a SQL query to find the maximum purchase amount.",SELECT MAX(purch_amt) FROM orders;,"From the following table, write a SQL query to find the maximum [MASK] amount.","[(5760,)]"
"From the following table, write a SQL query to find the highest purchase amount ordered by each customer. Return customer ID, maximum purchase amount.","SELECT customer_id, MAX(purch_amt) FROM orders GROUP BY customer_id;","From the following table, write a SQL query to find the highest [MASK] amount [MASK] by each [MASK] Return [MASK] ID, maximum [MASK] amount.","[(3001, 270.65), (3002, 5760), (3003, 75.29), (3004, 1983.43), (3005, 948.5), (3007, 2400.6), (3008, 250.45), (3009, 2480.4)]"
"From the following table, write a SQL query to determine the highest purchase amount made by each salesperson on '2012-08-17'. Return salesperson ID, purchase amount","SELECT salesman_id, MAX(purch_amt) FROM orders WHERE ord_date = '2012-08-17' GROUP BY salesman_id;","From the following table, write a SQL query to determine the highest [MASK] amount made by each [MASK] on '2012-08-17'. Return [MASK] ID, [MASK] amount","[(5003, 110.5), (5007, 75.29)]"
"From the following table, write a SQL query that calculates the maximum purchase amount generated by each salesperson for each order date. Sort the result-set by salesperson id and order date in ascending order. Return salesperson id, order date and maximum purchase amount.","SELECT salesman_id, ord_date, MAX(purch_amt) FROM orders GROUP BY salesman_id, ord_date ORDER BY salesman_id, ord_date;","From the following table, write a SQL query that calculates the maximum [MASK] amount generated by each [MASK] for each [MASK] [MASK] Sort the result-set by [MASK] [MASK] and [MASK] [MASK] in ascending [MASK] Return [MASK] id, [MASK] [MASK] and maximum [MASK] amount.","[(5001, '2012-04-25', 3045.6), (5001, '2012-07-27', 2400.6), (5001, '2012-09-10', 5760), (5001, '2012-10-05', 65.26), (5002, '2012-06-27', 250.45), (5002, '2012-09-10', 948.5), (5002, '2012-10-05', 150.5), (5003, '2012-08-17', 110.5), (5003, '2012-10-10', 2480.4), (5005, '2012-09-10', 270.65), (5006, '2012-10-10', 1983.43), (5007, '2012-08-17', 75.29)]"
"From the following table, write a SQL query that counts the unique orders and the highest purchase amount for each customer. Sort the result-set in descending order on 2nd field. Return customer ID, number of distinct orders and highest purchase amount by each customer.","SELECT customer_id, COUNT(DISTINCT ord_no), MAX(purch_amt) FROM orders GROUP BY customer_id ORDER BY 2 DESC;","From the following table, write a SQL query that counts the unique [MASK] and the highest [MASK] amount for each [MASK] Sort the result-set in descending [MASK] on 2nd field. Return [MASK] ID, number of distinct [MASK] and highest [MASK] amount by each [MASK]","[(3002, 3, 5760), (3009, 2, 2480.4), (3005, 2, 948.5), (3008, 1, 250.45), (3007, 1, 2400.6), (3004, 1, 1983.43), (3003, 1, 75.29), (3001, 1, 270.65)]"
"From the following tables, write a SQL query to find the salespeople and customers who live in the same city. Return customer name, salesperson name and salesperson city.","SELECT customer.cust_name, salesman.name, salesman.city FROM salesman, customer WHERE salesman.city = customer.city;","From the following tables, write a SQL query to find the [MASK] and [MASK] who live in the same [MASK] Return [MASK] [MASK] [MASK] [MASK] and [MASK] [MASK]","[('Brad Davis', 'James Hoog', 'New York'), ('Nick Rimando', 'James Hoog', 'New York'), ('Fabian Johnson', 'Nail Knite', 'Paris'), ('Brad Guzan', 'Pit Alex', 'London'), ('Julian Green', 'Pit Alex', 'London'), ('Fabian Johnson', 'Mc Lyon', 'Paris')]"
"From the following tables, write a SQL query to find all orders executed by the salesperson and ordered by the customer whose grade is greater than or equal to 200. Compute purch_amt*commission as “Commission”. Return customer name, commission as “Commission%” and Commission.","SELECT ord_no, cust_name, commission AS ""Commission%"", purch_amt * commission AS ""Commission"" FROM salesman, orders, customer WHERE orders.customer_id = customer.customer_id AND orders.salesman_id = salesman.salesman_id AND customer.grade >= 200;","From the following tables, write a SQL query to find all [MASK] executed by the [MASK] and [MASK] by the [MASK] whose [MASK] is greater than or equal to 200. Compute [MASK] as [MASK] Return [MASK] [MASK] [MASK] as [MASK] and [MASK]","[(70001, 'Graham Zusi', 0.13, 19.565), (70007, 'Graham Zusi', 0.13, 123.305), (70005, 'Brad Davis', 0.15, 360.09), (70010, 'Fabian Johnson', 0.14, 277.6802), (70012, 'Julian Green', 0.13, 32.5585), (70011, 'Jozy Altidor', 0.13, 9.787700000000001)]"
"From the following table, write a SQL query to find those customers who placed orders on October 5, 2012. Return customer_id, cust_name, city, grade, salesman_id, ord_no, purch_amt, ord_date, customer_id and salesman_id.","SELECT * FROM customer a, orders b WHERE a.customer_id = b.customer_id AND b.ord_date = '2012-10-05';","From the following table, write a SQL query to find those [MASK] who placed [MASK] on October 5, 2012. Return [MASK] [MASK] [MASK] [MASK] [MASK] ord_no, [MASK] [MASK] [MASK] and [MASK]","[(3005, 'Graham Zusi', 'California', 200, 5002, 70001, 150.5, '2012-10-05'), (3002, 'Nick Rimando', 'New York', 100, 5001, 70002, 65.26, '2012-10-05')]"
"Write a SQL statement to make a report with customer name, city, order number, order date, and order amount in ascending order according to the order date to determine whether any of the existing customers have placed an order or not.","SELECT a.cust_name, a.city, b.ord_no, b.ord_date, b.purch_amt AS ""Order Amount"" FROM customer a LEFT OUTER JOIN orders b ON a.customer_id = b.customer_id ORDER BY b.ord_date;","Write a SQL statement to make a report with [MASK] [MASK] [MASK] [MASK] number, [MASK] [MASK] and [MASK] amount in ascending [MASK] according to the [MASK] [MASK] to determine whether any of the existing [MASK] have placed an [MASK] or not.","[('Nick Rimando', 'New York', 70013, '2012-04-25', 3045.6), ('Julian Green', 'London', 70012, '2012-06-27', 250.45), ('Brad Davis', 'New York', 70005, '2012-07-27', 2400.6), ('Geoff Cameron', 'Berlin', 70004, '2012-08-17', 110.5), ('Jozy Altidor', 'Moscow', 70011, '2012-08-17', 75.29), ('Nick Rimando', 'New York', 70008, '2012-09-10', 5760), ('Graham Zusi', 'California', 70007, '2012-09-10', 948.5), ('Brad Guzan', 'London', 70009, '2012-09-10', 270.65), ('Nick Rimando', 'New York', 70002, '2012-10-05', 65.26), ('Graham Zusi', 'California', 70001, '2012-10-05', 150.5), ('Fabian Johnson', 'Paris', 70010, '2012-10-10', 1983.43), ('Geoff Cameron', 'Berlin', 70003, '2012-10-10', 2480.4)]"
