,Unnamed: 0,question,masked_question,masked_question_toks,query,schema_toks,tables,columns,sql_keywords,join_involved,keywords_pred,accuracy_on_target,accuracy_on_prediction
5044,5044,What is the total number of enrollment of schools that do not have any goalie player?,What is the total number of [MASK] of schools that do not have any [MASK] [MASK],"['What', 'is', 'the', 'total', 'number', 'of', '[MASK]', 'of', 'schools', 'that', 'do', 'not', 'have', 'any', '[MASK]', '[MASK]']","SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  ""goalie"")","['tryout', 'college', 'pPos', 'enr', 'cName', 'goalie']","[('tryout', ''), ('college', '')]","['pPos', 'enr', 'cName', 'goalie']","where,in,sum,not,select,from",False,"['where', 'in', 'count', 'not']",0.75,0.75
6497,6497,Find the number of scientists involved for the projects that require more than 300 hours.,Find the number of scientists involved for the [MASK] that require more than 300 [MASK],"['Find', 'the', 'number', 'of', 'scientists', 'involved', 'for', 'the', '[MASK]', 'that', 'require', 'more', 'than', '300', '[MASK]']","SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name","['assignedto', 'projects', 'hours', 'code', 'project', 'name']","[('assignedto', 'T2'), ('projects', 'T1')]","['hours', 'code', 'project', 'name']","as,group,join,count,where,select,from",True,"['as', 'group', 'join', 'count', 'where']",1.0,1.0
2218,2218,What are the names of all the Japanese constructors that have earned more than 5 points?,What are the [MASK] of all the [MASK] [MASK] that have earned more than 5 [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', '[MASK]', 'that', 'have', 'earned', 'more', 'than', '5', '[MASK]']","SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5","['constructorstandings', 'constructors', 'points', 'name', 'nationality', 'constructorid', 'Japanese']","[('constructorstandings', 'T2'), ('constructors', 'T1')]","['points', 'name', 'nationality', 'constructorid', 'Japanese']","as,join,from,and,select,where",True,"['group', 'count', 'having']",0.0,0.0
355,355,Show the id and name of the aircraft with the maximum distance.,Show the [MASK] and [MASK] of the [MASK] with the maximum [MASK],"['Show', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'maximum', '[MASK]']","SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1","['Aircraft', 'aid', 'distance', 'name']","[('Aircraft', '')]","['aid', 'distance', 'name']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
5786,5786,"What is the description of the product named ""Chocolate""?",What is the [MASK] of the [MASK] [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT product_description FROM products WHERE product_name  =  ""Chocolate""","['products', 'Chocolate', 'product_description', 'product_name']","[('products', '')]","['Chocolate', 'product_description', 'product_name']","select,from,where",False,['where'],1.0,1.0
1319,1319,"Show the dates of performances with attending members whose roles are ""Violin"".",Show the [MASK] of [MASK] with [MASK] [MASK] whose [MASK] are [MASK],"['Show', 'the', '[MASK]', 'of', '[MASK]', 'with', '[MASK]', '[MASK]', 'whose', '[MASK]', 'are', '[MASK]']","SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID WHERE T2.Role  =  ""Violin""","['member', 'member_attendance', 'performance', 'Violin', 'Role', 'Date', 'Member_ID', 'Performance_ID']","[('member', 'T2'), ('member_attendance', 'T1'), ('performance', 'T3')]","['Violin', 'Role', 'Date', 'Member_ID', 'Performance_ID']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
1979,1979,List the names of phones in ascending order of price.,List the [MASK] of [MASK] in ascending order of [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'in', 'ascending', 'order', 'of', '[MASK]']",SELECT Name FROM phone ORDER BY Price ASC,"['phone', 'Name', 'Price']","[('phone', '')]","['Name', 'Price']","select,asc,order,from",False,"['asc', 'order']",1.0,1.0
447,447,Show all allergies with type food.,Show all [MASK] with [MASK] [MASK],"['Show', 'all', '[MASK]', 'with', '[MASK]', '[MASK]']","SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  ""food""","['Allergy_type', 'food', 'allergytype', 'allergy']","[('Allergy_type', '')]","['food', 'allergytype', 'allergy']","distinct,select,from,where",False,[],,
2007,2007,Show all main industry and total market value in each industry.,Show all [MASK] [MASK] and total [MASK] [MASK] in each [MASK],"['Show', 'all', '[MASK]', '[MASK]', 'and', 'total', '[MASK]', '[MASK]', 'in', 'each', '[MASK]']","SELECT main_industry ,  sum(market_value) FROM company GROUP BY main_industry","['company', 'market_value', 'main_industry']","[('company', '')]","['market_value', 'main_industry']","select,sum,from,group",False,"['count', 'group']",0.5,0.5
3707,3707,Which cities have 2 to 4 parks?,Which [MASK] have 2 to 4 [MASK],"['Which', '[MASK]', 'have', '2', 'to', '4', '[MASK]']",SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;,"['park', 'city']","[('park', '')]",['city'],"group,count,and,having,between,select,from",False,"['group', 'count', 'having']",0.6,1.0
814,814,Find the full names of employees living in the city of Calgary.,Find the full [MASK] of [MASK] living in the [MASK] of [MASK],"['Find', 'the', 'full', '[MASK]', 'of', '[MASK]', 'living', 'in', 'the', '[MASK]', 'of', '[MASK]']","SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  ""Calgary""","['EMPLOYEE', 'LastName', 'FirstName', 'Calgary', 'City']","[('EMPLOYEE', '')]","['LastName', 'FirstName', 'Calgary', 'City']","select,from,where",False,"['as', 'join', 'where', 'distinct']",1.0,0.25
2684,2684,Show the host names for parties with number of hosts greater than 20.,Show the [MASK] [MASK] for [MASK] with [MASK] [MASK] [MASK] greater than 20.,"['Show', 'the', '[MASK]', '[MASK]', 'for', '[MASK]', 'with', '[MASK]', '[MASK]', '[MASK]', 'greater', 'than', '20.']",SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20,"['HOST', 'party_host', 'party', 'Name', 'Host_ID', 'Number_of_hosts', 'Party_ID']","[('HOST', 'T2'), ('party_host', 'T1'), ('party', 'T3')]","['Name', 'Host_ID', 'Number_of_hosts', 'Party_ID']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
4152,4152,"Show the studios that have not produced films with director ""Walter Hill"".",Show the [MASK] that have not produced [MASK] with [MASK] [MASK] [MASK],"['Show', 'the', '[MASK]', 'that', 'have', 'not', 'produced', '[MASK]', 'with', '[MASK]', '[MASK]', '[MASK]']","SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  ""Walter Hill""","['film', 'Walter Hill', 'Director', 'Studio']","[('film', '')]","['Walter Hill', 'Director', 'Studio']","select,except,from,where",False,['where'],0.5,1.0
2963,2963,Return the name of the category to which the film 'HUNGER ROOF' belongs.,Return the [MASK] of the [MASK] to which the [MASK] 'HUNGER ROOF' belongs.,"['Return', 'the', '[MASK]', 'of', 'the', '[MASK]', 'to', 'which', 'the', '[MASK]', ""'HUNGER"", ""ROOF'"", 'belongs.']",SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF',"['film_category', 'category', 'film', 'category_id', 'film_id', 'title', 'name']","[('film_category', 'T2'), ('category', 'T1'), ('film', 'T3')]","['category_id', 'film_id', 'title', 'name']","as,join,from,select,where",True,"['join', 'as']",0.6666666666666666,1.0
4951,4951,How many different players trained for more than 1000 hours?,How many different [MASK] trained for more than 1000 [MASK],"['How', 'many', 'different', '[MASK]', 'trained', 'for', 'more', 'than', '1000', '[MASK]']",SELECT count(*) FROM Player WHERE HS  >  1000,"['Player', 'HS']","[('Player', '')]",['HS'],"select,count,from,where",False,"['count', 'where']",1.0,1.0
931,931,"Retrieve the open and close dates of all the policies associated with the customer whose name contains ""Diana""",Retrieve the [MASK] and [MASK] [MASK] of all the [MASK] associated with the [MASK] whose [MASK] contains [MASK],"['Retrieve', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'all', 'the', '[MASK]', 'associated', 'with', 'the', '[MASK]', 'whose', '[MASK]', 'contains', '[MASK]']","SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE ""%Diana%""","['customers_policies', 'customers', '%Diana%', 'customer_name', 'customer_id', 'date_opened', 'date_closed']","[('customers_policies', 't2'), ('customers', 't1')]","['%Diana%', 'customer_name', 'customer_id', 'date_opened', 'date_closed']","like,as,join,from,select,where",True,"['as', 'join', 'where']",0.75,1.0
7276,7276,Which shops' number products is above the average? Give me the shop names.,Which [MASK] [MASK] [MASK] is above the average? Give me the [MASK] [MASK],"['Which', '[MASK]', '[MASK]', '[MASK]', 'is', 'above', 'the', 'average?', 'Give', 'me', 'the', '[MASK]', '[MASK]']",SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),"['shop', 'number_products', 'name']","[('shop', '')]","['number_products', 'name']","select,avg,from,where",False,"['avg', 'where']",1.0,1.0
7545,7545,What are all the course names of the courses which ever have students enrolled in?,What are all the [MASK] [MASK] of the [MASK] which ever have [MASK] [MASK] in?,"['What', 'are', 'all', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'which', 'ever', 'have', '[MASK]', '[MASK]', 'in?']",SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id,"['Student_Enrolment_Courses', 'Courses', 'course_id', 'course_name']","[('Student_Enrolment_Courses', 'T2'), ('Courses', 'T1')]","['course_id', 'course_name']","distinct,as,join,select,from",True,"['as', 'join', 'where']",0.6666666666666666,0.6666666666666666
6903,6903,"Find the dates of orders which belong to the customer named ""Jeramie"".",Find the [MASK] of [MASK] which belong to the [MASK] [MASK] [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', 'which', 'belong', 'to', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = ""Jeramie""","['orders', 'customers', 'customer_id', 'date_order_placed', 'Jeramie', 'customer_name']","[('orders', 'T2'), ('customers', 'T1')]","['customer_id', 'date_order_placed', 'Jeramie', 'customer_name']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
5574,5574,"Find the number of the products that have their color described as ""red"" and have a characteristic named ""slow"".","Find the number of the [MASK] that have their [MASK] [MASK] as ""red"" and have a [MASK] [MASK] [MASK]","['Find', 'the', 'number', 'of', 'the', '[MASK]', 'that', 'have', 'their', '[MASK]', '[MASK]', 'as', '""red""', 'and', 'have', 'a', '[MASK]', '[MASK]', '[MASK]']","SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  ""red"" AND t3.characteristic_name  =  ""slow""","['CHARACTERISTICS', 'products', 'product_characteristics', 'ref_colors', 'characteristic_name', 'red', 'slow', 'characteristic_id', 'color_code', 'product_id', 'color_description']","[('CHARACTERISTICS', 't3'), ('products', 't1'), ('product_characteristics', 't2'), ('ref_colors', 't4')]","['characteristic_name', 'red', 'slow', 'characteristic_id', 'color_code', 'product_id', 'color_description']","as,join,count,and,where,select,from",True,"['as', 'join', 'where', 'count']",0.8,1.0
7532,7532,What is the department description for the one whose name has the word computer?,What is the [MASK] [MASK] for the one whose [MASK] has the word computer?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'for', 'the', 'one', 'whose', '[MASK]', 'has', 'the', 'word', 'computer?']",SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',"['Departments', 'department_name', 'department_description']","[('Departments', '')]","['department_name', 'department_description']","select,like,from,where",False,"['like', 'where']",1.0,1.0
3990,3990,Find the names of patients who are not using the medication of Procrastin-X.,Find the [MASK] of [MASK] who are not using the [MASK] of Procrastin-X.,"['Find', 'the', '[MASK]', 'of', '[MASK]', 'who', 'are', 'not', 'using', 'the', '[MASK]', 'of', 'Procrastin-X.']",SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X',"['Medication', 'Prescribes', 'patient', 'patient', 'Medication', 'name', 'Code', 'Patient', 'SSN']","[('Medication', 'T3'), ('Prescribes', 'T2'), ('patient', ''), ('patient', 'T1')]","['Medication', 'name', 'Code', 'Patient', 'SSN']","as,except,join,where,select,from",True,"['where', 'as', 'in', 'join', 'count', 'not']",0.75,0.5
2079,2079,find the event names that have more than 2 records.,find the [MASK] [MASK] that have more than 2 records.,"['find', 'the', '[MASK]', '[MASK]', 'that', 'have', 'more', 'than', '2', 'records.']",SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2,"['party_events', 'event_name']","[('party_events', '')]",['event_name'],"group,count,having,select,from",False,"['group', 'count', 'having', 'as', 'join']",1.0,0.6
1602,1602,What is the invoice number and invoice date corresponding to the invoice with the greatest number of transactions?,What is the [MASK] [MASK] and [MASK] [MASK] corresponding to the [MASK] with the greatest [MASK] of [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'corresponding', 'to', 'the', '[MASK]', 'with', 'the', 'greatest', '[MASK]', 'of', '[MASK]']","SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1","['Financial_transactions', 'Invoices', 'invoice_number', 'invoice_date']","[('Financial_transactions', 'T1'), ('Invoices', 'T2')]","['invoice_number', 'invoice_date']","as,group,join,limit,count,order,select,desc,from",True,"['limit', 'order', 'desc']",0.42857142857142855,1.0
2169,2169,"What is the id, forname and surname of the driver who had the first position in terms of laptime at least twice?","What is the id, [MASK] and [MASK] of the [MASK] who had the first [MASK] in terms of [MASK] at least twice?","['What', 'is', 'the', 'id,', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'who', 'had', 'the', 'first', '[MASK]', 'in', 'terms', 'of', '[MASK]', 'at', 'least', 'twice?']","SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2","['laptimes', 'drivers', 'POSITION', 'driverid', 'forename', 'surname']","[('laptimes', 'T2'), ('drivers', 'T1')]","['POSITION', 'driverid', 'forename', 'surname']","as,group,join,from,count,having,select,where",True,"['as', 'group', 'join', 'count', 'having']",0.8333333333333334,1.0
742,742,"What are the different transaction types, and how many transactions of each have taken place?",What are the different [MASK] [MASK] and how many [MASK] of each have taken place?,"['What', 'are', 'the', 'different', '[MASK]', '[MASK]', 'and', 'how', 'many', '[MASK]', 'of', 'each', 'have', 'taken', 'place?']","SELECT transaction_type ,  count(*) FROM Financial_transactions GROUP BY transaction_type","['Financial_transactions', 'transaction_type']","[('Financial_transactions', '')]",['transaction_type'],"select,count,from,group",False,"['group', 'count']",1.0,1.0
6801,6801,Find the ids of the students who participate in Canoeing and Kayaking.,Find the [MASK] of the [MASK] who [MASK] [MASK] Canoeing and Kayaking.,"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', '[MASK]', '[MASK]', 'Canoeing', 'and', 'Kayaking.']",SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking',"['participates_in', 'activity', 'actid', 'activity_name', 'stuid']","[('participates_in', 'T1'), ('activity', 'T2')]","['actid', 'activity_name', 'stuid']","intersect,as,join,from,select,where",True,"['intersect', 'as', 'join', 'where']",1.0,1.0
2885,2885,"Which papers were written by authors from the institution ""Google""?",Which [MASK] were written by [MASK] from the [MASK] [MASK],"['Which', '[MASK]', 'were', 'written', 'by', '[MASK]', 'from', 'the', '[MASK]', '[MASK]']","SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  ""Google""","['papers', 'inst', 'authorship', 'paperid', 'title', 'Google', 'name', 'instid']","[('papers', 't1'), ('inst', 't3'), ('authorship', 't2')]","['paperid', 'title', 'Google', 'name', 'instid']","distinct,as,join,where,select,from",True,"['as', 'join', 'where']",0.75,1.0
809,809,List the names of all music genres.,List the [MASK] of all music [MASK],"['List', 'the', '[MASK]', 'of', 'all', 'music', '[MASK]']",SELECT Name FROM GENRE,"['GENRE', 'Name']","[('GENRE', '')]",['Name'],"select,from",False,[],,
594,594,What is the full name of the employee who has the most customers?,What is the full [MASK] of the [MASK] who has the most [MASK],"['What', 'is', 'the', 'full', '[MASK]', 'of', 'the', '[MASK]', 'who', 'has', 'the', 'most', '[MASK]']","SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1","['employees', 'customers', 'support_rep_id', 'first_name', 'last_name', 'id']","[('employees', 'T1'), ('customers', 'T2')]","['support_rep_id', 'first_name', 'last_name', 'id']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
1509,1509,"Find all the policy type codes associated with the customer ""Dayana Robel""",Find all the [MASK] [MASK] [MASK] associated with the [MASK] [MASK] [MASK],"['Find', 'all', 'the', '[MASK]', '[MASK]', '[MASK]', 'associated', 'with', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  ""Dayana Robel""","['customers', 'policies', 'customer_id', 'Dayana Robel', 'policy_type_code', 'customer_details']","[('customers', 't2'), ('policies', 't1')]","['customer_id', 'Dayana Robel', 'policy_type_code', 'customer_details']","as,join,from,select,where",True,"['as', 'join', 'and', 'where']",1.0,0.75
4973,4973,Who are the players that have names containing the letter a?,Who are the [MASK] that have [MASK] containing the letter a?,"['Who', 'are', 'the', '[MASK]', 'that', 'have', '[MASK]', 'containing', 'the', 'letter', 'a?']",SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%',"['Player', 'pName']","[('Player', '')]",['pName'],"distinct,like,where,select,from",False,"['like', 'where', 'as', 'join', 'count']",0.6666666666666666,0.4
380,380,What is the id and salary of the employee named Mark Young?,What is the [MASK] and [MASK] of the [MASK] [MASK] Mark Young?,"['What', 'is', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'Mark', 'Young?']","SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'","['Employee', 'salary', 'name', 'eid']","[('Employee', '')]","['salary', 'name', 'eid']","select,from,where",False,"['where', 'as', 'join']",1.0,0.3333333333333333
5208,5208,"How many songs have used the instrument ""drums""?",How many songs have used the [MASK] [MASK],"['How', 'many', 'songs', 'have', 'used', 'the', '[MASK]', '[MASK]']","SELECT count(*) FROM instruments WHERE instrument  =  ""drums""","['instruments', 'instrument', 'drums']","[('instruments', '')]","['instrument', 'drums']","select,count,from,where",False,"['count', 'where']",1.0,1.0
1883,1883,What are the times of elimination for any instances in which the elimination was done by Punk or Orton?,What are the [MASK] of [MASK] for any instances in which the [MASK] was done [MASK] [MASK] or [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'for', 'any', 'instances', 'in', 'which', 'the', '[MASK]', 'was', 'done', '[MASK]', '[MASK]', 'or', '[MASK]']","SELECT TIME FROM elimination WHERE Eliminated_By  =  ""Punk"" OR Eliminated_By  =  ""Orton""","['elimination', 'Orton', 'Eliminated_By', 'Punk', 'TIME']","[('elimination', '')]","['Orton', 'Eliminated_By', 'Punk', 'TIME']","or,select,from,where",False,"['as', 'join', 'or', 'where']",1.0,0.5
3685,3685,In which year did the least people enter hall of fame?,In which [MASK] did the least people enter [MASK] [MASK] [MASK],"['In', 'which', '[MASK]', 'did', 'the', 'least', 'people', 'enter', '[MASK]', '[MASK]', '[MASK]']",SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;,"['hall_of_fame', 'yearid']","[('hall_of_fame', '')]",['yearid'],"asc,group,limit,count,order,select,from",False,"['group', 'limit', 'count', 'order']",0.8,1.0
2533,2533,Count the number of countries.,[MASK] the number of [MASK],"['[MASK]', 'the', 'number', 'of', '[MASK]']",SELECT count(*) FROM county_public_safety,['county_public_safety'],"[('county_public_safety', '')]",[],"select,count,from",False,['count'],1.0,1.0
1826,1826,How many main stream browsers whose market share is at least 5 exist?,How many main stream [MASK] whose [MASK] [MASK] is at least 5 exist?,"['How', 'many', 'main', 'stream', '[MASK]', 'whose', '[MASK]', '[MASK]', 'is', 'at', 'least', '5', 'exist?']",SELECT count(*) FROM browser WHERE market_share  >=  5,"['browser', 'market_share']","[('browser', '')]",['market_share'],"select,count,from,where",False,"['as', 'group', 'join', 'count', 'having']",0.5,0.2
4924,4924,Find the city with the most number of stores.,Find the [MASK] with the most number of [MASK],"['Find', 'the', '[MASK]', 'with', 'the', 'most', 'number', 'of', '[MASK]']",SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1,"['store_district', 'district', 'store', 'district_id', 'store_id', 'headquartered_city']","[('store_district', 't2'), ('district', 't3'), ('store', 't1')]","['district_id', 'store_id', 'headquartered_city']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc']",0.7142857142857143,1.0
1219,1219,"What are dates of birth of all the guests whose gender is ""Male""?",What are [MASK] [MASK] [MASK] [MASK] all the [MASK] whose [MASK] is [MASK],"['What', 'are', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'all', 'the', '[MASK]', 'whose', '[MASK]', 'is', '[MASK]']","SELECT date_of_birth FROM Guests WHERE gender_code  =  ""Male""","['Guests', 'gender_code', 'date_of_birth', 'Male']","[('Guests', '')]","['gender_code', 'date_of_birth', 'Male']","select,from,where",False,[],,
5084,5084,Show the locations shared by shops with open year later than 2012 and shops with open year before 2008.,Show the [MASK] shared by [MASK] with [MASK] [MASK] later than 2012 and [MASK] with [MASK] [MASK] before 2008.,"['Show', 'the', '[MASK]', 'shared', 'by', '[MASK]', 'with', '[MASK]', '[MASK]', 'later', 'than', '2012', 'and', '[MASK]', 'with', '[MASK]', '[MASK]', 'before', '2008.']",SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008,"['shop', 'LOCATION', 'Open_Year']","[('shop', '')]","['LOCATION', 'Open_Year']","intersect,select,from,where",False,"['intersect', 'where']",1.0,1.0
306,306,"Find the attribute data type for the attribute named ""Green"".",Find the [MASK] [MASK] [MASK] for the [MASK] [MASK] [MASK],"['Find', 'the', '[MASK]', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  ""Green""","['Attribute_Definitions', 'attribute_data_type', 'attribute_name', 'Green']","[('Attribute_Definitions', '')]","['attribute_data_type', 'attribute_name', 'Green']","select,from,where",False,"['as', 'join', 'where']",1.0,0.3333333333333333
7145,7145,how many cars were produced in 1980?,how many [MASK] were produced in 1980?,"['how', 'many', '[MASK]', 'were', 'produced', 'in', '1980?']",SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,"['CARS_DATA', 'YEAR']","[('CARS_DATA', '')]",['YEAR'],"select,count,from,where",False,"['count', 'where']",1.0,1.0
2103,2103,What is the shipping agent code of shipping agent UPS?,What is the [MASK] [MASK] [MASK] of [MASK] [MASK] UPS?,"['What', 'is', 'the', '[MASK]', '[MASK]', '[MASK]', 'of', '[MASK]', '[MASK]', 'UPS?']","SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = ""UPS"";","['Ref_Shipping_Agents', 'UPS', 'shipping_agent_code', 'shipping_agent_name']","[('Ref_Shipping_Agents', '')]","['UPS', 'shipping_agent_code', 'shipping_agent_name']","select,from,where",False,"['where', 'as', 'join']",1.0,0.3333333333333333
4602,4602,"What are the names of the chairs of festivals, sorted in ascending order of the year held?",What are the [MASK] of the [MASK] of [MASK] sorted in ascending order of the [MASK] held?,"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'of', '[MASK]', 'sorted', 'in', 'ascending', 'order', 'of', 'the', '[MASK]', 'held?']",SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC,"['festival_detail', 'YEAR', 'Chair_Name']","[('festival_detail', '')]","['YEAR', 'Chair_Name']","select,asc,order,from",False,"['asc', 'order']",1.0,1.0
4576,4576,Which buildings do not have any company office? Give me the building names.,Which [MASK] do not have any company [MASK] Give me the [MASK] [MASK],"['Which', '[MASK]', 'do', 'not', 'have', 'any', 'company', '[MASK]', 'Give', 'me', 'the', '[MASK]', '[MASK]']",SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations),"['buildings', 'Office_locations', 'building_id', 'id', 'name']","[('buildings', ''), ('Office_locations', '')]","['building_id', 'id', 'name']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
4704,4704,"What are the names of courses that give either 3 credits, or 1 credit and 4 hours?",What are the [MASK] of [MASK] that give either 3 [MASK] or 1 [MASK] and 4 [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'that', 'give', 'either', '3', '[MASK]', 'or', '1', '[MASK]', 'and', '4', '[MASK]']",SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4,"['COURSE', 'Credits', 'CName', 'Hours']","[('COURSE', '')]","['Credits', 'CName', 'Hours']","union,and,where,select,from",False,"['intersect', 'as', 'join', 'where']",0.3333333333333333,0.25
5506,5506,"For each election cycle, report the number of voting records.",For each [MASK] [MASK] report the number of [MASK] [MASK],"['For', 'each', '[MASK]', '[MASK]', 'report', 'the', 'number', 'of', '[MASK]', '[MASK]']","SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle","['VOTING_RECORD', 'Election_Cycle']","[('VOTING_RECORD', '')]",['Election_Cycle'],"select,count,from,group",False,"['group', 'count']",1.0,1.0
1281,1281,"What are the ids, scores, and dates of the games which caused at least two injury accidents?","What are the ids, [MASK] and [MASK] of the [MASK] which caused at least two [MASK] [MASK]","['What', 'are', 'the', 'ids,', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'which', 'caused', 'at', 'least', 'two', '[MASK]', '[MASK]']","SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2","['game', 'injury_accident', 'score', 'date', 'game_id', 'id']","[('game', 'T1'), ('injury_accident', 'T2')]","['score', 'date', 'game_id', 'id']","as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'count', 'having']",1.0,1.0
1239,1239,What are the facility codes of the apartments with more than four bedrooms?,What are the [MASK] [MASK] of the [MASK] with more than four [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'with', 'more', 'than', 'four', '[MASK]']",SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4,"['Apartments', 'Apartment_Facilities', 'bedroom_count', 'apt_id', 'facility_code']","[('Apartments', 'T2'), ('Apartment_Facilities', 'T1')]","['bedroom_count', 'apt_id', 'facility_code']","as,join,from,select,where",True,"['as', 'group', 'join', 'count', 'having']",0.6666666666666666,0.4
7510,7510,How many courses are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM Courses,['Courses'],"[('Courses', '')]",[],"select,count,from",False,['count'],1.0,1.0
7779,7779,Return the country codes for countries that do not speak English.,Return the [MASK] [MASK] for [MASK] that do not speak [MASK],"['Return', 'the', '[MASK]', '[MASK]', 'for', '[MASK]', 'that', 'do', 'not', 'speak', '[MASK]']","SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""","['countrylanguage', 'English', 'LANGUAGE', 'CountryCode']","[('countrylanguage', '')]","['English', 'LANGUAGE', 'CountryCode']","select,except,from,where",False,"['except', 'where']",1.0,1.0
4420,4420,What is the average age for each gender?,What is the average [MASK] for each [MASK],"['What', 'is', 'the', 'average', '[MASK]', 'for', 'each', '[MASK]']","SELECT avg(age) ,  gender FROM Person GROUP BY gender","['Person', 'age', 'gender']","[('Person', '')]","['age', 'gender']","group,select,from,avg",False,"['as', 'group', 'join', 'avg']",1.0,0.5
4555,4555,How many different industries are the companies in?,How many different [MASK] are the [MASK] in?,"['How', 'many', 'different', '[MASK]', 'are', 'the', '[MASK]', 'in?']",SELECT count(DISTINCT Industry) FROM Companies,"['Companies', 'Industry']","[('Companies', '')]",['Industry'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
2351,2351,What campus has the most faculties in 2003?,What [MASK] has the most [MASK] in 2003?,"['What', '[MASK]', 'has', 'the', 'most', '[MASK]', 'in', '2003?']",SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1,"['campuses', 'faculty', 'faculty', 'campus', 'year', 'id']","[('campuses', 'T1'), ('faculty', 'T2')]","['faculty', 'campus', 'year', 'id']","as,join,limit,from,order,select,desc,where",True,"['as', 'join', 'limit', 'order', 'desc', 'where']",1.0,1.0
6837,6837,Find the name and city of the airport which is the source for the most number of flight routes.,Find the [MASK] and [MASK] of the [MASK] which is the source for the most number of flight [MASK],"['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'which', 'is', 'the', 'source', 'for', 'the', 'most', 'number', 'of', 'flight', '[MASK]']","SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1","['airports', 'routes', 'city', 'apid', 'src_apid', 'name']","[('airports', 'T1'), ('routes', 'T2')]","['city', 'apid', 'src_apid', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
4132,4132,Show the distinct director of films with market estimation in the year of 1995.,Show the distinct [MASK] of [MASK] with [MASK] [MASK] in the [MASK] of 1995.,"['Show', 'the', 'distinct', '[MASK]', 'of', '[MASK]', 'with', '[MASK]', '[MASK]', 'in', 'the', '[MASK]', 'of', '1995.']",SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995,"['film', 'film_market_estimation', 'Film_ID', 'Director', 'Year']","[('film', 'T1'), ('film_market_estimation', 'T2')]","['Film_ID', 'Director', 'Year']","distinct,as,join,where,select,from",True,"['where', 'distinct']",0.5,1.0
4954,4954,What is the average training hours of all players?,What is the average training hours of all [MASK],"['What', 'is', 'the', 'average', 'training', 'hours', 'of', 'all', '[MASK]']",SELECT avg(HS) FROM Player,"['Player', 'HS']","[('Player', '')]",['HS'],"select,from,avg",False,['where'],0.0,0.0
1795,1795,What are the balances of checking accounts belonging to people with savings balances greater than the average savings balance?,What are the [MASK] of [MASK] [MASK] belonging to people with [MASK] [MASK] greater than the average [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', 'belonging', 'to', 'people', 'with', '[MASK]', '[MASK]', 'greater', 'than', 'the', 'average', '[MASK]', '[MASK]']",SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings)),"['checking', 'savings', 'accounts', 'savings', 'custid', 'balance', 'name']","[('checking', 'T2'), ('savings', ''), ('accounts', 'T1'), ('savings', 'T2')]","['custid', 'balance', 'name']","as,in,join,from,avg,select,where",True,"['avg', 'where']",0.4,1.0
1798,1798,Find the name of account that has the lowest total checking and saving balance.,Find the [MASK] of [MASK] that has the lowest total [MASK] and [MASK] [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', 'that', 'has', 'the', 'lowest', 'total', '[MASK]', 'and', '[MASK]', '[MASK]']",SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1,"['checking', 'savings', 'accounts', 'custid', 'balance', 'name']","[('checking', 'T2'), ('savings', 'T3'), ('accounts', 'T1')]","['custid', 'balance', 'name']","as,join,limit,order,select,from",True,"['limit', 'order', 'as', 'join']",1.0,1.0
453,453,Show all allergy types and the number of allergies in each type.,Show all [MASK] [MASK] and the number of [MASK] in each [MASK],"['Show', 'all', '[MASK]', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'in', 'each', '[MASK]']","SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype","['Allergy_type', 'allergytype']","[('Allergy_type', '')]",['allergytype'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
1616,1616,"What are the different product names, and what is the sum of quantity ordered for each product?",What are the different [MASK] [MASK] and what is the sum of [MASK] [MASK] for each [MASK],"['What', 'are', 'the', 'different', '[MASK]', '[MASK]', 'and', 'what', 'is', 'the', 'sum', 'of', '[MASK]', '[MASK]', 'for', 'each', '[MASK]']","SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name","['Order_items', 'Products', 'product_quantity', 'product_id', 'product_name']","[('Order_items', 'T1'), ('Products', 'T2')]","['product_quantity', 'product_id', 'product_name']","as,group,join,sum,select,from",True,"['as', 'group', 'join', 'sum']",1.0,1.0
6775,6775,How many activities does Mark Giuliano participate in?,How many activities does [MASK] [MASK] [MASK] in?,"['How', 'many', 'activities', 'does', '[MASK]', '[MASK]', '[MASK]', 'in?']","SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  ""Mark"" AND T1.lname  =  ""Giuliano""","['Faculty_participates_in', 'Faculty', 'facID', 'Mark', 'lname', 'Giuliano', 'fname']","[('Faculty_participates_in', 'T2'), ('Faculty', 'T1')]","['facID', 'Mark', 'lname', 'Giuliano', 'fname']","as,join,count,and,where,select,from",True,"['count', 'where']",0.4,1.0
7110,7110,What is the number of car models that are produced by each maker and what is the id and full name of each maker?,What is the number of [MASK] [MASK] that are produced by each [MASK] and what is the [MASK] and [MASK] [MASK] of each [MASK],"['What', 'is', 'the', 'number', 'of', '[MASK]', '[MASK]', 'that', 'are', 'produced', 'by', 'each', '[MASK]', 'and', 'what', 'is', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'each', '[MASK]']","SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;","['CAR_MAKERS', 'MODEL_LIST', 'Maker', 'FullName', 'Id', 'id']","[('CAR_MAKERS', 'T2'), ('MODEL_LIST', 'T1')]","['Maker', 'FullName', 'Id', 'id']","as,group,join,count,select,from",True,"['group', 'count']",0.5,1.0
6224,6224,How many captains with younger than 50 are in each rank?,How many [MASK] with younger than 50 are in each [MASK],"['How', 'many', '[MASK]', 'with', 'younger', 'than', '50', 'are', 'in', 'each', '[MASK]']","SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank","['captain', 'rank', 'age']","[('captain', '')]","['rank', 'age']","group,count,where,select,from",False,"['group', 'count', 'where']",1.0,1.0
2973,2973,Return the titles of any movies with an R rating.,Return the [MASK] of any movies with an R [MASK],"['Return', 'the', '[MASK]', 'of', 'any', 'movies', 'with', 'an', 'R', '[MASK]']",SELECT title FROM film WHERE rating  =  'R',"['film', 'rating', 'title']","[('film', '')]","['rating', 'title']","select,from,where",False,['where'],1.0,1.0
4681,4681,Which building does the instructor who teaches the most number of courses live in?,Which [MASK] does the [MASK] who teaches the most number of [MASK] live in?,"['Which', '[MASK]', 'does', 'the', '[MASK]', 'who', 'teaches', 'the', 'most', 'number', 'of', '[MASK]', 'live', 'in?']",SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1,"['FACULTY', 'COURSE', 'Instructor', 'FacID', 'Building']","[('FACULTY', 'T2'), ('COURSE', 'T1')]","['Instructor', 'FacID', 'Building']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
1706,1706,Find the name of the user who gives the most reviews.,Find the [MASK] of the [MASK] who gives the most [MASK],"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'gives', 'the', 'most', '[MASK]']",SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id ORDER BY count(*) DESC LIMIT 1,"['useracct', 'review', 'u_id', 'name']","[('useracct', 'T1'), ('review', 'T2')]","['u_id', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
7059,7059,Find the first name of students who have both cat and dog pets .,Find the first [MASK] of [MASK] who have both cat and dog [MASK] .,"['Find', 'the', 'first', '[MASK]', 'of', '[MASK]', 'who', 'have', 'both', 'cat', 'and', 'dog', '[MASK]', '.']",select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog',"['pets', 'student', 'has_pet', 'fname', 'pettype', 'petid', 'stuid']","[('pets', 't3'), ('student', 't1'), ('has_pet', 't2')]","['fname', 'pettype', 'petid', 'stuid']","intersect,as,join,from,select,where",True,"['as', 'in', 'join', 'where']",0.75,0.75
4175,4175,"When was the document named ""Marry CV"" stored? Give me the date.","When was the [MASK] [MASK] [MASK] CV"" [MASK] Give me the [MASK]","['When', 'was', 'the', '[MASK]', '[MASK]', '[MASK]', 'CV""', '[MASK]', 'Give', 'me', 'the', '[MASK]']","SELECT date_stored FROM All_documents WHERE Document_name  =  ""Marry CV""","['All_documents', 'Document_name', 'date_stored', 'Marry CV']","[('All_documents', '')]","['Document_name', 'date_stored', 'Marry CV']","select,from,where",False,['where'],1.0,1.0
65,65,What are the ids of all students who have attended at least one course?,What are the [MASK] of all [MASK] who have [MASK] at least one [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]', 'who', 'have', '[MASK]', 'at', 'least', 'one', '[MASK]']",SELECT student_id FROM student_course_attendance,"['student_course_attendance', 'student_id']","[('student_course_attendance', '')]",['student_id'],"select,from",False,"['distinct', 'as', 'join']",,
2750,2750,How many distinct governors are there?,How many distinct [MASK] are there?,"['How', 'many', 'distinct', '[MASK]', 'are', 'there?']",SELECT count(DISTINCT Governor) FROM party,"['party', 'Governor']","[('party', '')]",['Governor'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
6565,6565,What is the color of the grape whose wine products has the highest average price?,What is the [MASK] of the [MASK] whose [MASK] products has the highest average [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'whose', '[MASK]', 'products', 'has', 'the', 'highest', 'average', '[MASK]']",SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1,"['GRAPES', 'WINE', 'Price', 'Grape', 'Color']","[('GRAPES', 'T1'), ('WINE', 'T2')]","['Price', 'Grape', 'Color']","as,group,join,limit,order,avg,select,desc,from",True,"['group', 'limit', 'order', 'avg', 'desc']",0.7142857142857143,1.0
3619,3619,Find the top 3 artists who have the largest number of songs works whose language is Bangla.,Find the top 3 [MASK] who have the largest number of [MASK] works whose [MASK] is [MASK],"['Find', 'the', 'top', '3', '[MASK]', 'who', 'have', 'the', 'largest', 'number', 'of', '[MASK]', 'works', 'whose', '[MASK]', 'is', '[MASK]']","SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""bangla"" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3","['song', 'artist', 'bangla', 'languages', 'artist_name']","[('song', 'T2'), ('artist', 'T1')]","['bangla', 'languages', 'artist_name']","as,group,join,limit,from,count,order,select,desc,where",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",0.875,1.0
5139,5139,Find the product names whose average product price is below 1000000.,Find the [MASK] [MASK] whose average [MASK] [MASK] is below 1000000.,"['Find', 'the', '[MASK]', '[MASK]', 'whose', 'average', '[MASK]', '[MASK]', 'is', 'below', '1000000.']",SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000,"['PRODUCTS', 'Product_Name', 'Product_Price']","[('PRODUCTS', '')]","['Product_Name', 'Product_Price']","group,having,avg,select,from",False,"['group', 'having', 'avg']",1.0,1.0
3938,3938,How many different types of rooms are there?,How many different [MASK] of [MASK] are there?,"['How', 'many', 'different', '[MASK]', 'of', '[MASK]', 'are', 'there?']",SELECT count(DISTINCT roomtype) FROM room,"['room', 'roomtype']","[('room', '')]",['roomtype'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
7895,7895,What are the ids of high school students who do not have friends?,What are the [MASK] of [MASK] [MASK] [MASK] who do not have [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', '[MASK]', 'who', 'do', 'not', 'have', '[MASK]']",SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,"['Highschooler', 'Friend', 'student_id', 'id']","[('Highschooler', ''), ('Friend', '')]","['student_id', 'id']","select,except,from",False,"['where', 'in', 'not']",0.0,0.0
2106,2106,How many employees do we have?,How many [MASK] do we have?,"['How', 'many', '[MASK]', 'do', 'we', 'have?']",SELECT count(*) FROM Employees;,['Employees'],"[('Employees', '')]",[],"select,count,from",False,['count'],1.0,1.0
2042,2042,"What are the different region names, ordered by labels?",What are the different [MASK] [MASK] ordered by [MASK],"['What', 'are', 'the', 'different', '[MASK]', '[MASK]', 'ordered', 'by', '[MASK]']",SELECT DISTINCT region_name FROM region ORDER BY Label,"['region', 'Label', 'region_name']","[('region', '')]","['Label', 'region_name']","distinct,select,order,from",False,['order'],0.5,1.0
7583,7583,Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .,Find the [MASK] [MASK] of the [MASK] who [MASK] live in the [MASK] Haiti or have the [MASK] phone [MASK] 09700166582 .,"['Find', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'who', '[MASK]', 'live', 'in', 'the', '[MASK]', 'Haiti', 'or', 'have', 'the', '[MASK]', 'phone', '[MASK]', '09700166582', '.']",select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',"['addresses', 'students', 'country', 'cell_mobile_number', 'permanent_address_id', 'address_id', 'first_name']","[('addresses', 't2'), ('students', 't1')]","['country', 'cell_mobile_number', 'permanent_address_id', 'address_id', 'first_name']","as,join,from,or,select,where",True,"['as', 'join', 'where']",0.75,1.0
450,450,What is allergy type of a cat allergy?,What is [MASK] [MASK] of a [MASK] [MASK],"['What', 'is', '[MASK]', '[MASK]', 'of', 'a', '[MASK]', '[MASK]']","SELECT allergytype FROM Allergy_type WHERE allergy  =  ""Cat""","['Allergy_type', 'Cat', 'allergytype', 'allergy']","[('Allergy_type', '')]","['Cat', 'allergytype', 'allergy']","select,from,where",False,['where'],1.0,1.0
2613,2613,What is the name of the room that can accommodate the most people?,What is the [MASK] of the [MASK] that can accommodate the most people?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'can', 'accommodate', 'the', 'most', 'people?']",SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;,"['Rooms', 'roomName', 'maxOccupancy']","[('Rooms', '')]","['roomName', 'maxOccupancy']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
7870,7870,Show the names of all high schoolers in grade 10.,Show the [MASK] of all [MASK] [MASK] in [MASK] 10.,"['Show', 'the', '[MASK]', 'of', 'all', '[MASK]', '[MASK]', 'in', '[MASK]', '10.']",SELECT name FROM Highschooler WHERE grade  =  10,"['Highschooler', 'grade', 'name']","[('Highschooler', '')]","['grade', 'name']","select,from,where",False,[],,
868,868,Find the average millisecond length of Latin and Pop tracks.,Find the average [MASK] length of [MASK] and Pop [MASK],"['Find', 'the', 'average', '[MASK]', 'length', 'of', '[MASK]', 'and', 'Pop', '[MASK]']","SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Latin"" OR T1.Name  =  ""Pop""","['GENRE', 'TRACK', 'Name', 'GenreId', 'Latin', 'Milliseconds', 'Pop']","[('GENRE', 'T1'), ('TRACK', 'T2')]","['Name', 'GenreId', 'Latin', 'Milliseconds', 'Pop']","where,as,join,avg,or,select,from",True,['avg'],0.2,1.0
5426,5426,List the branch name and city without any registered members.,List the [MASK] [MASK] and [MASK] without any [MASK] [MASK],"['List', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'without', 'any', '[MASK]', '[MASK]']","SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)","['membership_register_branch', 'branch', 'city', 'branch_id', 'name']","[('membership_register_branch', ''), ('branch', '')]","['city', 'branch_id', 'name']","where,in,not,select,from",False,"['where', 'as', 'join']",0.3333333333333333,0.3333333333333333
254,254,Show names of actors in descending order of the year their musical is awarded.,Show [MASK] of [MASK] in descending order of the [MASK] their [MASK] is awarded.,"['Show', '[MASK]', 'of', '[MASK]', 'in', 'descending', 'order', 'of', 'the', '[MASK]', 'their', '[MASK]', 'is', 'awarded.']",SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC,"['actor', 'musical', 'Name', 'Musical_ID', 'Year']","[('actor', 'T1'), ('musical', 'T2')]","['Name', 'Musical_ID', 'Year']","as,join,order,select,desc,from",True,"['as', 'join', 'order', 'desc']",1.0,1.0
2275,2275,"What are the names of entrepreneurs whose investor is not ""Rachel Elnaugh""?",What are the [MASK] of [MASK] whose [MASK] is not [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', 'is', 'not', '[MASK]', '[MASK]']","SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != ""Rachel Elnaugh""","['people', 'entrepreneur', 'Name', 'Investor', 'People_ID', 'Rachel Elnaugh']","[('people', 'T2'), ('entrepreneur', 'T1')]","['Name', 'Investor', 'People_ID', 'Rachel Elnaugh']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
6570,6570,What are the distinct wineries which produce wines costing between 50 and 100?,What are the distinct [MASK] which produce [MASK] costing between 50 and 100?,"['What', 'are', 'the', 'distinct', '[MASK]', 'which', 'produce', '[MASK]', 'costing', 'between', '50', 'and', '100?']",SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100,"['WINE', 'Price', 'Winery']","[('WINE', '')]","['Price', 'Winery']","distinct,and,between,where,select,from",False,"['distinct', 'where']",0.5,1.0
3089,3089,How many distinct incident type codes are there?,How many distinct [MASK] [MASK] [MASK] are there?,"['How', 'many', 'distinct', '[MASK]', '[MASK]', '[MASK]', 'are', 'there?']",SELECT count(DISTINCT incident_type_code) FROM Behavior_Incident,"['Behavior_Incident', 'incident_type_code']","[('Behavior_Incident', '')]",['incident_type_code'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
3916,3916,What is the name of the patient who made the most recent appointment?,What is the [MASK] of the [MASK] who made the most recent [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'made', 'the', 'most', 'recent', '[MASK]']",SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1,"['patient', 'appointment', 'patient', 'ssn', 'start', 'name']","[('patient', 'T1'), ('appointment', 'T2')]","['patient', 'ssn', 'start', 'name']","as,join,limit,order,select,desc,from",True,"['as', 'join', 'limit', 'order', 'desc']",1.0,1.0
6148,6148,Return the average age across all artists.,Return the average [MASK] across all [MASK],"['Return', 'the', 'average', '[MASK]', 'across', 'all', '[MASK]']",SELECT avg(Age) FROM artist,"['artist', 'Age']","[('artist', '')]",['Age'],"select,from,avg",False,['avg'],1.0,1.0
6108,6108,Find the name of the customer who made the order of the largest amount of goods.,Find the [MASK] of the [MASK] who made the [MASK] of the largest amount of goods.,"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'made', 'the', '[MASK]', 'of', 'the', 'largest', 'amount', 'of', 'goods.']",SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items),"['order_items', 'order_items', 'customers', 'customer_orders', 'customer_id', 'order_quantity', 'order_id', 'customer_name']","[('order_items', 't3'), ('order_items', ''), ('customers', 't1'), ('customer_orders', 't2')]","['customer_id', 'order_quantity', 'order_id', 'customer_name']","as,join,from,select,where,max",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",0.5,0.2857142857142857
2497,2497,What are the movie titles with the highest average rating and what are those ratings?,What are the [MASK] [MASK] with the highest average [MASK] and what are those [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'with', 'the', 'highest', 'average', '[MASK]', 'and', 'what', 'are', 'those', '[MASK]']","SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1","['Rating', 'Movie', 'stars', 'mID', 'title']","[('Rating', 'T1'), ('Movie', 'T2')]","['stars', 'mID', 'title']","as,group,join,limit,order,avg,select,desc,from",True,"['as', 'join', 'limit', 'order', 'avg', 'desc', 'group']",1.0,1.0
6122,6122,"What are the customer name and date of the orders whose status is ""Delivered"".",What are the [MASK] [MASK] and [MASK] of the [MASK] whose [MASK] is [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'whose', '[MASK]', 'is', '[MASK]']","SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  ""Delivered""","['customers', 'customer_orders', 'order_status', 'customer_name', 'Delivered', 'customer_id', 'order_date']","[('customers', 't1'), ('customer_orders', 't2')]","['order_status', 'customer_name', 'Delivered', 'customer_id', 'order_date']","as,join,from,select,where",True,"['where', 'as', 'join']",1.0,1.0
3202,3202,How many credits does the department offer?,How many [MASK] does the [MASK] offer?,"['How', 'many', '[MASK]', 'does', 'the', '[MASK]', 'offer?']","SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code","['course', 'dept_code', 'crs_credit']","[('course', '')]","['dept_code', 'crs_credit']","select,sum,from,group",False,"['count', 'distinct']",0.0,0.0
99,99,What are the id of students who registered courses or attended courses?,What are the [MASK] of [MASK] who [MASK] [MASK] or [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'who', '[MASK]', '[MASK]', 'or', '[MASK]', '[MASK]']",SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance,"['student_course_registrations', 'student_course_attendance', 'student_id']","[('student_course_registrations', ''), ('student_course_attendance', '')]",['student_id'],"select,from,union",False,"['as', 'join', 'where']",0.0,0.0
3421,3421,what is the phone number of employees whose salary is in the range of 8000 and 12000?,what is the [MASK] [MASK] of [MASK] whose [MASK] is in the range of 8000 and 12000?,"['what', 'is', 'the', '[MASK]', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', 'is', 'in', 'the', 'range', 'of', '8000', 'and', '12000?']",SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000,"['employees', 'salary', 'phone_number']","[('employees', '')]","['salary', 'phone_number']","and,between,where,select,from",False,"['and', 'between', 'where']",1.0,1.0
6507,6507,Find the name of scientists who are not assigned to any project.,Find the [MASK] of [MASK] who are not [MASK] to any project.,"['Find', 'the', '[MASK]', 'of', '[MASK]', 'who', 'are', 'not', '[MASK]', 'to', 'any', 'project.']",SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo),"['AssignedTo', 'scientists', 'Name', 'ssn', 'scientist']","[('AssignedTo', ''), ('scientists', '')]","['Name', 'ssn', 'scientist']","where,in,not,select,from",False,[],,
2053,2053,Return the minister who left office at the latest time.,Return the [MASK] who [MASK] [MASK] at the latest time.,"['Return', 'the', '[MASK]', 'who', '[MASK]', '[MASK]', 'at', 'the', 'latest', 'time.']",SELECT minister FROM party ORDER BY left_office DESC LIMIT 1,"['party', 'left_office', 'minister']","[('party', '')]","['left_office', 'minister']","limit,order,select,desc,from",False,"['max', 'where']",0.0,0.0
4309,4309,"Count the number of clubs for which the student named ""Eric Tai"" is a member.","Count the [MASK] [MASK] [MASK] for which the [MASK] [MASK] [MASK] Tai"" is a [MASK]","['Count', 'the', '[MASK]', '[MASK]', '[MASK]', 'for', 'which', 'the', '[MASK]', '[MASK]', '[MASK]', 'Tai""', 'is', 'a', '[MASK]']","SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Eric"" AND t3.lname  =  ""Tai""","['student', 'member_of_club', 'club', 'Tai', 'Eric', 'clubname', 'lname', 'fname', 'clubid', 'stuid']","[('student', 't3'), ('member_of_club', 't2'), ('club', 't1')]","['Tai', 'Eric', 'clubname', 'lname', 'fname', 'clubid', 'stuid']","distinct,as,join,count,and,where,select,from",True,"['as', 'join', 'count', 'where']",0.6666666666666666,1.0
2084,2084,List the names of pilots in ascending order of rank.,List the [MASK] of [MASK] in ascending order of [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'in', 'ascending', 'order', 'of', '[MASK]']",SELECT Pilot_name FROM pilot ORDER BY Rank ASC,"['pilot', 'Pilot_name', 'Rank']","[('pilot', '')]","['Pilot_name', 'Rank']","select,asc,order,from",False,"['asc', 'order']",1.0,1.0
6240,6240,Find the captain rank that has no captain in Third-rate ship of the line class.,Find the [MASK] [MASK] that has no [MASK] in Third-rate ship of the line [MASK],"['Find', 'the', '[MASK]', '[MASK]', 'that', 'has', 'no', '[MASK]', 'in', 'Third-rate', 'ship', 'of', 'the', 'line', '[MASK]']",SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line',"['captain', 'rank', 'CLASS']","[('captain', '')]","['rank', 'CLASS']","select,except,from,where",False,"['except', 'where']",1.0,1.0
7447,7447,List the names of all winners who played in both 2013 and 2016.,List the [MASK] of all [MASK] who [MASK] in both 2013 and 2016.,"['List', 'the', '[MASK]', 'of', 'all', '[MASK]', 'who', '[MASK]', 'in', 'both', '2013', 'and', '2016.']",SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,"['matches', 'winner_name', 'YEAR']","[('matches', '')]","['winner_name', 'YEAR']","intersect,select,from,where",False,"['count', 'where', 'or']",0.5,0.3333333333333333
2401,2401,What is the id of the candidate with the lowest oppose rate?,What is the [MASK] of the [MASK] with the lowest [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'lowest', '[MASK]', '[MASK]']",SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1,"['candidate', 'oppose_rate', 'Candidate_ID']","[('candidate', '')]","['oppose_rate', 'Candidate_ID']","select,limit,order,from",False,"['as', 'join', 'limit', 'order']",1.0,0.5
7623,7623,"What is the TV Channel of TV series with Episode ""A Love of a Lifetime""? List the TV Channel's series name.","What is the TV [MASK] of TV [MASK] with [MASK] ""A [MASK] of a [MASK] List the TV [MASK] [MASK] [MASK]","['What', 'is', 'the', 'TV', '[MASK]', 'of', 'TV', '[MASK]', 'with', '[MASK]', '""A', '[MASK]', 'of', 'a', '[MASK]', 'List', 'the', 'TV', '[MASK]', '[MASK]', '[MASK]']","SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";","['TV_Channel', 'TV_series', 'series_name', 'id', 'Channel', 'Episode', 'A Love of a Lifetime']","[('TV_Channel', 'T1'), ('TV_series', 'T2')]","['series_name', 'id', 'Channel', 'Episode', 'A Love of a Lifetime']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
5254,5254,"Which vocal type has the band mate with first name ""Solveig"" played the most?",Which [MASK] [MASK] has the [MASK] [MASK] with [MASK] [MASK] [MASK] [MASK] the most?,"['Which', '[MASK]', '[MASK]', 'has', 'the', '[MASK]', '[MASK]', 'with', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'the', 'most?']","SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  ""Solveig"" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1","['vocals', 'band', 'Solveig', 'bandmate', 'firstname', 'id', 'TYPE']","[('vocals', 'T1'), ('band', 'T2')]","['Solveig', 'bandmate', 'firstname', 'id', 'TYPE']","as,group,join,limit,from,count,order,select,desc,where",True,"['group', 'limit', 'count', 'order', 'desc']",0.625,1.0
2597,2597,"For each bed type, find the average base price of different bed type.",For each bed [MASK] find the average [MASK] [MASK] of different bed [MASK],"['For', 'each', 'bed', '[MASK]', 'find', 'the', 'average', '[MASK]', '[MASK]', 'of', 'different', 'bed', '[MASK]']","SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;","['Rooms', 'basePrice', 'bedType']","[('Rooms', '')]","['basePrice', 'bedType']","group,select,from,avg",False,"['group', 'avg']",1.0,1.0
5982,5982,Count the number of video games with Massively multiplayer online game type .,Count the number of [MASK] [MASK] with [MASK] [MASK] [MASK] [MASK] [MASK] .,"['Count', 'the', 'number', 'of', '[MASK]', '[MASK]', 'with', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '.']","SELECT count(*) FROM Video_games WHERE gtype  =  ""Massively multiplayer online game""","['Video_games', 'Massively multiplayer online game', 'gtype']","[('Video_games', '')]","['Massively multiplayer online game', 'gtype']","select,count,from,where",False,"['count', 'as', 'join', 'where']",1.0,0.5
1303,1303,List all of the player ids with a height of at least 180cm and an overall rating higher than 85.,List all of the [MASK] [MASK] with a [MASK] of at least 180cm and an [MASK] [MASK] higher than 85.,"['List', 'all', 'of', 'the', '[MASK]', '[MASK]', 'with', 'a', '[MASK]', 'of', 'at', 'least', '180cm', 'and', 'an', '[MASK]', '[MASK]', 'higher', 'than', '85.']",SELECT player_api_id FROM Player WHERE height  >=  180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating  >  85,"['Player_Attributes', 'Player', 'height', 'overall_rating', 'player_api_id']","[('Player_Attributes', ''), ('Player', '')]","['height', 'overall_rating', 'player_api_id']","intersect,select,from,where",False,"['and', 'where']",0.5,0.5
1931,1931,Show all the locations where some cinemas were opened in both year 2010 and year 2011.,Show all the [MASK] where some [MASK] were [MASK] in both [MASK] 2010 and [MASK] 2011.,"['Show', 'all', 'the', '[MASK]', 'where', 'some', '[MASK]', 'were', '[MASK]', 'in', 'both', '[MASK]', '2010', 'and', '[MASK]', '2011.']",SELECT LOCATION FROM cinema WHERE openning_year  =  2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year  =  2011,"['cinema', 'LOCATION', 'openning_year']","[('cinema', '')]","['LOCATION', 'openning_year']","intersect,select,from,where",False,['where'],0.5,1.0
4336,4336,What are the response received dates for the documents described as 'Regular' or granted with more than 100?,What are the [MASK] [MASK] [MASK] for the [MASK] [MASK] as 'Regular' or [MASK] with more than 100?,"['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', '[MASK]', 'as', ""'Regular'"", 'or', '[MASK]', 'with', 'more', 'than', '100?']",SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100,"['Documents', 'Document_Types', 'Grants', 'document_type_code', 'response_received_date', 'document_description', 'grant_amount', 'grant_id']","[('Documents', 'T1'), ('Document_Types', 'T2'), ('Grants', 'T3')]","['document_type_code', 'response_received_date', 'document_description', 'grant_amount', 'grant_id']","as,join,from,or,select,where",True,['where'],0.25,1.0
6071,6071,What are the details of all products?,What are the [MASK] of all [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]']",SELECT DISTINCT product_details FROM products,"['products', 'product_details']","[('products', '')]",['product_details'],"distinct,select,from",False,[],,
5494,5494,Find the distinct first names of all the students who have vice president votes and whose city code is not PIT.,Find the distinct first [MASK] of all the [MASK] who have [MASK] [MASK] [MASK] and whose [MASK] [MASK] is not PIT.,"['Find', 'the', 'distinct', 'first', '[MASK]', 'of', 'all', 'the', '[MASK]', 'who', 'have', '[MASK]', '[MASK]', '[MASK]', 'and', 'whose', '[MASK]', '[MASK]', 'is', 'not', 'PIT.']","SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  ""PIT""","['VOTING_RECORD', 'STUDENT', 'STUDENT', 'city_code', 'StuID', 'Fname', 'VICE_PRESIDENT_Vote', 'PIT']","[('VOTING_RECORD', 'T2'), ('STUDENT', ''), ('STUDENT', 'T1')]","['city_code', 'StuID', 'Fname', 'VICE_PRESIDENT_Vote', 'PIT']","distinct,as,except,join,where,select,from",True,"['distinct', 'as', 'join', 'where']",0.8,1.0
1922,1922,"For each building, show the name of the building and the number of institutions in it.",For each [MASK] show the [MASK] of the [MASK] and the number of [MASK] in it.,"['For', 'each', '[MASK]', 'show', 'the', '[MASK]', 'of', 'the', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'in', 'it.']","SELECT T1.name ,  count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id GROUP BY T1.building_id","['institution', 'building', 'building_id', 'name']","[('institution', 'T2'), ('building', 'T1')]","['building_id', 'name']","as,group,join,count,select,from",True,"['group', 'count']",0.5,1.0
2895,2895,"Find papers whose second author has last name ""Turon"" and is affiliated with an institution in the country ""USA"".","Find [MASK] whose second [MASK] has last [MASK] [MASK] and is affiliated with an [MASK] in the [MASK] ""USA"".","['Find', '[MASK]', 'whose', 'second', '[MASK]', 'has', 'last', '[MASK]', '[MASK]', 'and', 'is', 'affiliated', 'with', 'an', '[MASK]', 'in', 'the', '[MASK]', '""USA"".']","SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  ""USA"" AND t2.authorder  =  2 AND t1.lname  =  ""Turon""","['papers', 'authors', 'inst', 'authorship', 'paperid', 'title', 'country', 'authid', 'Turon', 'instid', 'lname', 'authorder', 'USA']","[('papers', 't3'), ('authors', 't1'), ('inst', 't4'), ('authorship', 't2')]","['paperid', 'title', 'country', 'authid', 'Turon', 'instid', 'lname', 'authorder', 'USA']","as,join,from,and,select,where",True,"['as', 'join', 'and', 'where']",1.0,1.0
7086,7086,What is the average age for all students who do not own any pets ?,What is the average [MASK] for all [MASK] who do not own any [MASK] ?,"['What', 'is', 'the', 'average', '[MASK]', 'for', 'all', '[MASK]', 'who', 'do', 'not', 'own', 'any', '[MASK]', '?']",select avg(age) from student where stuid not in (select stuid from has_pet),"['has_pet', 'student', 'age', 'stuid']","[('has_pet', ''), ('student', '')]","['age', 'stuid']","in,avg,from,not,select,where",False,['avg'],0.25,1.0
7514,7514,What is the zip code for Port Chelsea?,What is the [MASK] [MASK] for Port Chelsea?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'for', 'Port', 'Chelsea?']",SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',"['Addresses', 'city', 'zip_postcode']","[('Addresses', '')]","['city', 'zip_postcode']","select,from,where",False,['where'],1.0,1.0
5003,5003,What are the names and hours spent practicing of every student who received a yes at tryouts?,What are the [MASK] and hours spent practicing of every [MASK] who received a yes at [MASK],"['What', 'are', 'the', '[MASK]', 'and', 'hours', 'spent', 'practicing', 'of', 'every', '[MASK]', 'who', 'received', 'a', 'yes', 'at', '[MASK]']","SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'","['tryout', 'player', 'pID', 'pName', 'decision', 'HS']","[('tryout', 'T2'), ('player', 'T1')]","['pID', 'pName', 'decision', 'HS']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
7744,7744,How many countries speak both English and Dutch?,How many [MASK] speak both [MASK] and [MASK],"['How', 'many', '[MASK]', 'speak', 'both', '[MASK]', 'and', '[MASK]']","SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")","['country', 'countrylanguage', 'CountryCode', 'Name', 'English', 'Dutch', 'Code', 'Language']","[('country', 'T1'), ('countrylanguage', 'T2')]","['CountryCode', 'Name', 'English', 'Dutch', 'Code', 'Language']","intersect,as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",0.8,1.0
6438,6438,Give the details of the project with the document name 'King Book'.,Give the [MASK] of the [MASK] with the [MASK] [MASK] [MASK] [MASK],"['Give', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  ""King Book""","['Documents', 'Projects', 'project_details', 'King Book', 'document_name', 'project_id']","[('Documents', 'T2'), ('Projects', 'T1')]","['project_details', 'King Book', 'document_name', 'project_id']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
5066,5066,List the name of the shop with the latest open year.,List the [MASK] of the [MASK] with the latest [MASK] [MASK],"['List', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'latest', '[MASK]', '[MASK]']",SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1,"['shop', 'Open_Year', 'Shop_Name']","[('shop', '')]","['Open_Year', 'Shop_Name']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
3356,3356,What are the names and players of all the clubs?,What are the [MASK] and [MASK] of all the [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', 'all', 'the', '[MASK]']","SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID","['player', 'club', 'Player_id', 'Club_ID', 'name']","[('player', 'T2'), ('club', 'T1')]","['Player_id', 'Club_ID', 'name']","select,join,from,as",True,[],,
3295,3295,What is the average gpa of the students enrolled in the course with code ACCT-211?,What is the average [MASK] of the [MASK] [MASK] in the [MASK] with [MASK] ACCT-211?,"['What', 'is', 'the', 'average', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'in', 'the', '[MASK]', 'with', '[MASK]', 'ACCT-211?']",SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211',"['enroll', 'student', 'CLASS', 'stu_gpa', 'class_code', 'stu_num', 'crs_code']","[('enroll', 'T1'), ('student', 'T2'), ('CLASS', 'T3')]","['stu_gpa', 'class_code', 'stu_num', 'crs_code']","where,as,join,avg,select,from",True,"['as', 'join', 'count', 'where']",0.75,0.75
5585,5585,Give the unit of measure for the product with the name 'cumin'.,Give the [MASK] [MASK] [MASK] for the [MASK] with the [MASK] [MASK],"['Give', 'the', '[MASK]', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', 'with', 'the', '[MASK]', '[MASK]']","SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  ""cumin""","['ref_product_categories', 'products', 'unit_of_measure', 'product_name', 'product_category_code', 'cumin']","[('ref_product_categories', 't2'), ('products', 't1')]","['unit_of_measure', 'product_name', 'product_category_code', 'cumin']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
393,393,What is the average price for flights from Los Angeles to Honolulu.,What is the average [MASK] for [MASK] from Los [MASK] to [MASK],"['What', 'is', 'the', 'average', '[MASK]', 'for', '[MASK]', 'from', 'Los', '[MASK]', 'to', '[MASK]']","SELECT avg(price) FROM Flight WHERE origin  =  ""Los Angeles"" AND destination  =  ""Honolulu""","['Flight', 'destination', 'Los Angeles', 'origin', 'Honolulu', 'price']","[('Flight', '')]","['destination', 'Los Angeles', 'origin', 'Honolulu', 'price']","from,and,avg,select,where",False,"['avg', 'where']",0.6666666666666666,1.0
6602,6602,Show the names and total passengers for all train stations not in London.,Show the [MASK] and [MASK] [MASK] for all train [MASK] not in London.,"['Show', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'all', 'train', '[MASK]', 'not', 'in', 'London.']","SELECT name ,  total_passengers FROM station WHERE LOCATION != 'London'","['station', 'LOCATION', 'total_passengers', 'name']","[('station', '')]","['LOCATION', 'total_passengers', 'name']","select,from,where",False,['group'],0.0,0.0
4496,4496,Show the names of members that have a rank in round higher than 3.,Show the [MASK] of [MASK] that have a [MASK] [MASK] [MASK] higher than 3.,"['Show', 'the', '[MASK]', 'of', '[MASK]', 'that', 'have', 'a', '[MASK]', '[MASK]', '[MASK]', 'higher', 'than', '3.']",SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID WHERE T2.Rank_in_Round  >  3,"['member', 'round', 'Name', 'Member_ID', 'Rank_in_Round']","[('member', 'T1'), ('round', 'T2')]","['Name', 'Member_ID', 'Rank_in_Round']","as,join,from,select,where",True,"['as', 'group', 'join', 'count', 'having']",0.6666666666666666,0.4
705,705,How many cards does customer Art Turcotte have?,How many [MASK] does [MASK] Art [MASK] have?,"['How', 'many', '[MASK]', 'does', '[MASK]', 'Art', '[MASK]', 'have?']","SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Art"" AND T2.customer_last_name  =  ""Turcotte""","['Customers', 'Customers_cards', 'customer_last_name', 'Art', 'Turcotte', 'customer_first_name', 'customer_id']","[('Customers', 'T2'), ('Customers_cards', 'T1')]","['customer_last_name', 'Art', 'Turcotte', 'customer_first_name', 'customer_id']","as,join,count,and,where,select,from",True,"['as', 'join', 'count', 'where']",0.8,1.0
7195,7195,How many airlines are from USA?,How many [MASK] are from USA?,"['How', 'many', '[MASK]', 'are', 'from', 'USA?']","SELECT count(*) FROM AIRLINES WHERE Country  =  ""USA""","['AIRLINES', 'Country', 'USA']","[('AIRLINES', '')]","['Country', 'USA']","select,count,from,where",False,"['count', 'where']",1.0,1.0
3643,3643,"What are the manager's first name, last name and id who won the most manager award?",What are the [MASK] [MASK] [MASK] [MASK] [MASK] and [MASK] who won the most [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'who', 'won', 'the', 'most', '[MASK]', '[MASK]']","SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;","['manager_award', 'player', 'player_id', 'name_first', 'name_last']","[('manager_award', 'T2'), ('player', 'T1')]","['player_id', 'name_first', 'name_last']","as,group,join,limit,count,order,select,desc,from",True,"['limit', 'order', 'desc']",0.42857142857142855,1.0
4695,4695,What are the first names and last names of the students that minor in the department with DNO 140.,What are the first [MASK] and last [MASK] of the [MASK] that [MASK] [MASK] the [MASK] with DNO 140.,"['What', 'are', 'the', 'first', '[MASK]', 'and', 'last', '[MASK]', 'of', 'the', '[MASK]', 'that', '[MASK]', '[MASK]', 'the', '[MASK]', 'with', 'DNO', '140.']","SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140","['STUDENT', 'MINOR_IN', 'DNO', 'StuID', 'Fname', 'Lname']","[('STUDENT', 'T2'), ('MINOR_IN', 'T1')]","['DNO', 'StuID', 'Fname', 'Lname']","as,join,from,select,where",True,"['as', 'join', 'and', 'where']",1.0,0.75
1536,1536,What are the names of the customers and staff members?,What are the names of the [MASK] and [MASK] members?,"['What', 'are', 'the', 'names', 'of', 'the', '[MASK]', 'and', '[MASK]', 'members?']",SELECT customer_details FROM customers UNION SELECT staff_details FROM staff,"['staff', 'customers', 'staff_details', 'customer_details']","[('staff', ''), ('customers', '')]","['staff_details', 'customer_details']","select,from,union",False,[],,
2664,2664,What are the themes and locations of parties?,What are the [MASK] and [MASK] of [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', '[MASK]']","SELECT Party_Theme ,  LOCATION FROM party","['party', 'Party_Theme', 'LOCATION']","[('party', '')]","['Party_Theme', 'LOCATION']","select,from",False,[],,
615,615,List the name of all playlist.,[MASK] the [MASK] of all [MASK],"['[MASK]', 'the', '[MASK]', 'of', 'all', '[MASK]']",SELECT name FROM playlists;,"['playlists', 'name']","[('playlists', '')]",['name'],"select,from",False,"['as', 'join']",,
4465,4465,What are the different names of friends who are younger than the average age for a friend?,What are the different [MASK] of [MASK] who are younger than the average [MASK] for a [MASK],"['What', 'are', 'the', 'different', '[MASK]', 'of', '[MASK]', 'who', 'are', 'younger', 'than', 'the', 'average', '[MASK]', 'for', 'a', '[MASK]']",SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person),"['Person', 'PersonFriend', 'person', 'friend', 'age', 'name']","[('Person', 'T1'), ('PersonFriend', 'T2'), ('person', '')]","['friend', 'age', 'name']","distinct,as,avg,join,where,select,from",True,"['avg', 'where']",0.4,1.0
679,679,Show the customer id and number of accounts with most accounts.,Show the [MASK] [MASK] and number of [MASK] with most [MASK],"['Show', 'the', '[MASK]', '[MASK]', 'and', 'number', 'of', '[MASK]', 'with', 'most', '[MASK]']","SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1","['Accounts', 'customer_id']","[('Accounts', '')]",['customer_id'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc', 'as', 'join']",1.0,0.7142857142857143
4877,4877,What are the teams that have the 5 oldest players?,What are the [MASK] that have the 5 oldest [MASK],"['What', 'are', 'the', '[MASK]', 'that', 'have', 'the', '5', 'oldest', '[MASK]']",SELECT Team FROM player ORDER BY Age DESC LIMIT 5,"['player', 'Age', 'Team']","[('player', '')]","['Age', 'Team']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
7548,7548,What is the name of the course with the most students enrolled?,What is the [MASK] of the [MASK] with the most [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'most', '[MASK]', '[MASK]']",SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,"['Student_Enrolment_Courses', 'Courses', 'course_id', 'course_name']","[('Student_Enrolment_Courses', 'T2'), ('Courses', 'T1')]","['course_id', 'course_name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
3095,3095,How many distinct students have been in detention?,How many distinct [MASK] have been [MASK] [MASK],"['How', 'many', 'distinct', '[MASK]', 'have', 'been', '[MASK]', '[MASK]']",SELECT count(DISTINCT student_id) FROM Students_in_Detention,"['Students_in_Detention', 'student_id']","[('Students_in_Detention', '')]",['student_id'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
7174,7174,What are the names of the countries with no car makers?,What are the [MASK] of the [MASK] with no [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'no', '[MASK]', '[MASK]']",SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,"['CAR_MAKERS', 'countries', 'countries', 'CountryName', 'countryId', 'Country']","[('CAR_MAKERS', 'T2'), ('countries', ''), ('countries', 'T1')]","['CountryName', 'countryId', 'Country']","as,except,join,select,from",True,"['where', 'in', 'not']",0.0,0.0
2247,2247,Please show the team that has the most number of technicians.,Please show the [MASK] that has the most number of [MASK],"['Please', 'show', 'the', '[MASK]', 'that', 'has', 'the', 'most', 'number', 'of', '[MASK]']",SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1,"['technician', 'Team']","[('technician', '')]",['Team'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
5425,5425,What are the names of the members that have never registered at any branch?,What are the [MASK] of the [MASK] that have never [MASK] at any [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'have', 'never', '[MASK]', 'at', 'any', '[MASK]']",SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch),"['member', 'membership_register_branch', 'member_id', 'name']","[('member', ''), ('membership_register_branch', '')]","['member_id', 'name']","where,in,not,select,from",False,"['except', 'where']",0.3333333333333333,0.5
6635,6635,When did the staff member Janessa Sawayn leave the company?,When did the [MASK] member [MASK] [MASK] leave the company?,"['When', 'did', 'the', '[MASK]', 'member', '[MASK]', '[MASK]', 'leave', 'the', 'company?']","SELECT date_left_staff FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";","['Staff', 'Janessa', 'last_name', 'date_left_staff', 'Sawayn', 'first_name']","[('Staff', '')]","['Janessa', 'last_name', 'date_left_staff', 'Sawayn', 'first_name']","select,and,from,where",False,"['and', 'where']",1.0,1.0
5212,5212,"How many instruments does the song ""Le Pop"" use?","How many [MASK] does the [MASK] ""Le Pop"" use?","['How', 'many', '[MASK]', 'does', 'the', '[MASK]', '""Le', 'Pop""', 'use?']","SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Le Pop""","['songs', 'instruments', 'songid', 'instrument', 'title', 'Le Pop']","[('songs', 'T2'), ('instruments', 'T1')]","['songid', 'instrument', 'title', 'Le Pop']","distinct,as,join,count,where,select,from",True,"['as', 'join', 'where']",0.6,1.0
5740,5740,Find the number of students who is older than 20 in each dorm.,Find the number of [MASK] who is older than 20 [MASK] each [MASK],"['Find', 'the', 'number', 'of', '[MASK]', 'who', 'is', 'older', 'than', '20', '[MASK]', 'each', '[MASK]']","SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name","['student', 'dorm', 'lives_in', 'dormid', 'dorm_name', 'age', 'stuid']","[('student', 'T1'), ('dorm', 'T3'), ('lives_in', 'T2')]","['dormid', 'dorm_name', 'age', 'stuid']","as,group,join,count,where,select,from",True,"['where', 'as', 'join', 'count']",0.8,1.0
4563,4563,Show the names of the buildings that have more than one company offices.,Show the [MASK] of the [MASK] that have more than one [MASK] [MASK],"['Show', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'have', 'more', 'than', 'one', '[MASK]', '[MASK]']",SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1,"['Companies', 'Office_locations', 'buildings', 'company_id', 'building_id', 'id', 'name']","[('Companies', 'T3'), ('Office_locations', 'T1'), ('buildings', 'T2')]","['company_id', 'building_id', 'id', 'name']","as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'count', 'having']",1.0,1.0
2703,2703,What is the average and maximum damage in millions for storms that had a max speed over 1000?,What is the average and maximum [MASK] in [MASK] for [MASK] that had a [MASK] [MASK] over 1000?,"['What', 'is', 'the', 'average', 'and', 'maximum', '[MASK]', 'in', '[MASK]', 'for', '[MASK]', 'that', 'had', 'a', '[MASK]', '[MASK]', 'over', '1000?']","SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000","['storm', 'damage_millions_USD', 'max_speed']","[('storm', '')]","['damage_millions_USD', 'max_speed']","from,avg,select,where,max",False,"['max', 'avg']",0.6666666666666666,1.0
2951,2951,"What are the title, id, and description of the movie with the greatest number of actors?","What are the [MASK] id, and [MASK] of the movie with the greatest number of [MASK]","['What', 'are', 'the', '[MASK]', 'id,', 'and', '[MASK]', 'of', 'the', 'movie', 'with', 'the', 'greatest', 'number', 'of', '[MASK]']","SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1","['film_actor', 'film', 'description', 'film_id', 'title']","[('film_actor', 'T1'), ('film', 'T2')]","['description', 'film_id', 'title']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
8004,8004,What are the birth year and citizenship of singers?,What are the [MASK] [MASK] and [MASK] of [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', '[MASK]']","SELECT Birth_Year ,  Citizenship FROM singer","['singer', 'Citizenship', 'Birth_Year']","[('singer', '')]","['Citizenship', 'Birth_Year']","select,from",False,[],,
2002,2002,"What is the minimum, maximum, and average market value for every company?","What is the minimum, maximum, and average [MASK] [MASK] for every [MASK]","['What', 'is', 'the', 'minimum,', 'maximum,', 'and', 'average', '[MASK]', '[MASK]', 'for', 'every', '[MASK]']","SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company","['company', 'market_value']","[('company', '')]",['market_value'],"min,avg,select,from,max",False,"['min', 'avg', 'max']",1.0,1.0
1401,1401,What is the lowest salary in departments with average salary greater than the overall average.,What is the lowest [MASK] in [MASK] with average [MASK] greater than the overall average.,"['What', 'is', 'the', 'lowest', '[MASK]', 'in', '[MASK]', 'with', 'average', '[MASK]', 'greater', 'than', 'the', 'overall', 'average.']","SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)","['instructor', 'salary', 'dept_name']","[('instructor', '')]","['salary', 'dept_name']","min,group,having,avg,select,from",False,"['group', 'limit', 'order', 'avg', 'as', 'join']",0.5,0.3333333333333333
5977,5977,Show all video games with type Collectible card game.,Show all [MASK] [MASK] with [MASK] [MASK] [MASK] [MASK],"['Show', 'all', '[MASK]', '[MASK]', 'with', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT gname FROM Video_games WHERE gtype  =  ""Collectible card game""","['Video_games', 'Collectible card game', 'gname', 'gtype']","[('Video_games', '')]","['Collectible card game', 'gname', 'gtype']","select,from,where",False,[],,
7863,7863,Count the number of high schoolers.,Count the number of [MASK] [MASK],"['Count', 'the', 'number', 'of', '[MASK]', '[MASK]']",SELECT count(*) FROM Highschooler,['Highschooler'],"[('Highschooler', '')]",[],"select,count,from",False,['count'],1.0,1.0
5933,5933,What are the names of the tourist attractions and the dates when the tourists named Vincent or Vivian visited there?,What are the [MASK] of the [MASK] [MASK] and the [MASK] when the [MASK] [MASK] [MASK] or [MASK] [MASK] there?,"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'and', 'the', '[MASK]', 'when', 'the', '[MASK]', '[MASK]', '[MASK]', 'or', '[MASK]', '[MASK]', 'there?']","SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  ""Vincent"" OR T2.Tourist_Details  =  ""Vivian""","['Tourist_Attractions', 'VISITORS', 'VISITS', 'Vivian', 'Visit_Date', 'Name', 'Vincent', 'Tourist_ID', 'Tourist_Details', 'Tourist_Attraction_ID']","[('Tourist_Attractions', 'T1'), ('VISITORS', 'T2'), ('VISITS', 'T3')]","['Vivian', 'Visit_Date', 'Name', 'Vincent', 'Tourist_ID', 'Tourist_Details', 'Tourist_Attraction_ID']","as,join,and,where,or,select,from",True,"['as', 'join', 'where']",0.6,1.0
4418,4418,How many people whose age is greater 30 and job is engineer?,How many people whose [MASK] is greater 30 and [MASK] is engineer?,"['How', 'many', 'people', 'whose', '[MASK]', 'is', 'greater', '30', 'and', '[MASK]', 'is', 'engineer?']",SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer',"['Person', 'job', 'age']","[('Person', '')]","['job', 'age']","count,and,where,select,from",False,"['count', 'where']",0.6666666666666666,1.0
2451,2451,What is the maximum and mininum number of stars a rating can receive?,What is the maximum and mininum number of [MASK] a [MASK] can receive?,"['What', 'is', 'the', 'maximum', 'and', 'mininum', 'number', 'of', '[MASK]', 'a', '[MASK]', 'can', 'receive?']","SELECT max(stars) ,  min(stars) FROM Rating","['Rating', 'stars']","[('Rating', '')]",['stars'],"select,min,from,max",False,"['min', 'max']",1.0,1.0
5973,5973,Show all video game types.,Show all [MASK] [MASK] [MASK],"['Show', 'all', '[MASK]', '[MASK]', '[MASK]']",SELECT DISTINCT gtype FROM Video_games,"['Video_games', 'gtype']","[('Video_games', '')]",['gtype'],"distinct,select,from",False,['distinct'],1.0,1.0
225,225,Show publishers that have more than one publication.,Show [MASK] that have more than one [MASK],"['Show', '[MASK]', 'that', 'have', 'more', 'than', 'one', '[MASK]']",SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*)  >  1,"['publication', 'Publisher']","[('publication', '')]",['Publisher'],"group,count,having,select,from",False,"['as', 'group', 'join', 'count', 'having']",1.0,0.6
534,534,How many students are over 18 and do not have allergy to food type or animal type?,How many [MASK] are over 18 and do not have [MASK] to [MASK] [MASK] or [MASK] [MASK],"['How', 'many', '[MASK]', 'are', 'over', '18', 'and', 'do', 'not', 'have', '[MASK]', 'to', '[MASK]', '[MASK]', 'or', '[MASK]', '[MASK]']","SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""food"" OR T2.allergytype  =  ""animal"")","['Student', 'Has_allergy', 'Allergy_Type', 'Allergy', 'StuID', 'animal', 'allergytype', 'food', 'age']","[('Student', ''), ('Has_allergy', 'T1'), ('Allergy_Type', 'T2')]","['Allergy', 'StuID', 'animal', 'allergytype', 'food', 'age']","as,not,in,join,count,and,where,or,select,from",True,"['where', 'in', 'count', 'not']",0.5,1.0
2831,2831,Which Advisor has most of students? List advisor and the number of students.,Which [MASK] has most of [MASK] List [MASK] and the number of [MASK],"['Which', '[MASK]', 'has', 'most', 'of', '[MASK]', 'List', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]']","SELECT Advisor ,  count(*) FROM Student GROUP BY Advisor ORDER BY count(Advisor) DESC LIMIT 1;","['Student', 'Advisor']","[('Student', '')]",['Advisor'],"group,limit,count,order,select,desc,from",False,"['limit', 'order', 'desc', 'group', 'join', 'count']",1.0,0.8333333333333334
3248,3248,How many employees are there all together?,How many [MASK] are there all together?,"['How', 'many', '[MASK]', 'are', 'there', 'all', 'together?']",SELECT count(*) FROM employee,['employee'],"[('employee', '')]",[],"select,count,from",False,['count'],1.0,1.0
4709,4709,What are the ids of the top three products that were purchased in the largest amount?,What are the [MASK] of the top three [MASK] that were [MASK] in the largest [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', 'top', 'three', '[MASK]', 'that', 'were', '[MASK]', 'in', 'the', 'largest', '[MASK]']",SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3,"['product_suppliers', 'product_id', 'total_amount_purchased']","[('product_suppliers', '')]","['product_id', 'total_amount_purchased']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
1641,1641,Show the name and age for all male people who don't have a wedding.,Show the [MASK] and [MASK] for all [MASK] [MASK] who don't have a [MASK],"['Show', 'the', '[MASK]', 'and', '[MASK]', 'for', 'all', '[MASK]', '[MASK]', 'who', ""don't"", 'have', 'a', '[MASK]']","SELECT name ,  age FROM people WHERE is_male  =  'T' AND people_id NOT IN (SELECT male_id FROM wedding)","['people', 'wedding', 'is_male', 'name', 'people_id', 'male_id', 'age']","[('people', ''), ('wedding', '')]","['is_male', 'name', 'people_id', 'male_id', 'age']","where,in,and,not,select,from",False,['except'],0.0,0.0
2132,2132,find all dependent names who have a spouse relation with some employee.,find all [MASK] [MASK] who have a spouse [MASK] with some [MASK],"['find', 'all', '[MASK]', '[MASK]', 'who', 'have', 'a', 'spouse', '[MASK]', 'with', 'some', '[MASK]']",SELECT Dependent_name FROM dependent WHERE relationship  =  'Spouse',"['dependent', 'relationship', 'Dependent_name']","[('dependent', '')]","['relationship', 'Dependent_name']","select,from,where",False,"['distinct', 'as', 'join']",0.0,0.0
2808,2808,Show the different nationalities and the number of journalists of each nationality.,Show the different [MASK] and the number of [MASK] of each [MASK],"['Show', 'the', 'different', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'of', 'each', '[MASK]']","SELECT Nationality ,  COUNT(*) FROM journalist GROUP BY Nationality","['journalist', 'Nationality']","[('journalist', '')]",['Nationality'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
1073,1073,"For each player, what are their name, season, and country that they belong to?",For each [MASK] what are their [MASK] [MASK] and [MASK] that they belong to?,"['For', 'each', '[MASK]', 'what', 'are', 'their', '[MASK]', '[MASK]', 'and', '[MASK]', 'that', 'they', 'belong', 'to?']","SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country","['country', 'match_season', 'Country_name', 'Country_id', 'Season', 'Country', 'Player']","[('country', 'T1'), ('match_season', 'T2')]","['Country_name', 'Country_id', 'Season', 'Country', 'Player']","select,join,from,as",True,"['join', 'as']",1.0,1.0
1412,1412,Find the semester and year which has the least number of student taking any class.,Find the [MASK] and [MASK] which has the least number of [MASK] taking any [MASK],"['Find', 'the', '[MASK]', 'and', '[MASK]', 'which', 'has', 'the', 'least', 'number', 'of', '[MASK]', 'taking', 'any', '[MASK]']","SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1","['takes', 'semester', 'YEAR']","[('takes', '')]","['semester', 'YEAR']","group,limit,count,order,select,from",False,"['as', 'group', 'join', 'limit', 'count', 'order']",1.0,0.6666666666666666
5723,5723,What is the average and oldest age for each gender of student?,What is the average and oldest [MASK] for each gender of [MASK],"['What', 'is', 'the', 'average', 'and', 'oldest', '[MASK]', 'for', 'each', 'gender', 'of', '[MASK]']","SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex","['student', 'sex', 'age']","[('student', '')]","['sex', 'age']","group,avg,select,from,max",False,"['where', 'group', 'count', 'avg']",0.6666666666666666,0.5
2865,2865,"Find the titles of all the papers written by ""Jeremy Gibbons""",Find the [MASK] of all the [MASK] written by [MASK] [MASK],"['Find', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', 'written', 'by', '[MASK]', '[MASK]']","SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  ""Jeremy"" AND t1.lname  =  ""Gibbons""","['papers', 'authors', 'authorship', 'Jeremy', 'paperid', 'title', 'Gibbons', 'authid', 'lname', 'fname']","[('papers', 't3'), ('authors', 't1'), ('authorship', 't2')]","['Jeremy', 'paperid', 'title', 'Gibbons', 'authid', 'lname', 'fname']","as,join,from,and,select,where",True,"['as', 'join', 'where']",0.75,1.0
5573,5573,What are the different product names for products that have the 'warm' characteristic:?,What are the different [MASK] [MASK] for [MASK] that have the [MASK] [MASK],"['What', 'are', 'the', 'different', '[MASK]', '[MASK]', 'for', '[MASK]', 'that', 'have', 'the', '[MASK]', '[MASK]']","SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  ""warm""","['CHARACTERISTICS', 'products', 'product_characteristics', 'characteristic_name', 'warm', 'characteristic_id', 'product_id', 'product_name']","[('CHARACTERISTICS', 't3'), ('products', 't1'), ('product_characteristics', 't2')]","['characteristic_name', 'warm', 'characteristic_id', 'product_id', 'product_name']","distinct,as,join,where,select,from",True,['distinct'],0.25,1.0
7754,7754,What are the countries where either English or Dutch is the official language ?,What are the [MASK] where either [MASK] or [MASK] is the [MASK] [MASK] ?,"['What', 'are', 'the', '[MASK]', 'where', 'either', '[MASK]', 'or', '[MASK]', 'is', 'the', '[MASK]', '[MASK]', '?']","select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""english"" and isofficial  =  ""t"" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""dutch"" and isofficial  =  ""t""","['country', 'countrylanguage', 'language', 'english', 'countrycode', 'name', 'dutch', 't', 'code', 'isofficial']","[('country', 't1'), ('countrylanguage', 't2')]","['language', 'english', 'countrycode', 'name', 'dutch', 't', 'code', 'isofficial']","as,union,join,from,and,select,where",True,['where'],0.2,1.0
3064,3064,Find the name and account balance of the customers who have loans with a total amount of more than 5000.,Find the [MASK] and [MASK] balance of the [MASK] who have [MASK] with a total [MASK] of more than 5000.,"['Find', 'the', '[MASK]', 'and', '[MASK]', 'balance', 'of', 'the', '[MASK]', 'who', 'have', '[MASK]', 'with', 'a', 'total', '[MASK]', 'of', 'more', 'than', '5000.']","SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000","['customer', 'loan', 'cust_id', 'amount', 'cust_name', 'acc_type']","[('customer', 'T1'), ('loan', 'T2')]","['cust_id', 'amount', 'cust_name', 'acc_type']","as,group,join,sum,having,select,from",True,"['as', 'join', 'group', 'having']",0.8,1.0
5073,5073,What is the name of the shop that has the most different kinds of devices in stock?,What is the [MASK] of the [MASK] that has the most different kinds of devices in [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'has', 'the', 'most', 'different', 'kinds', 'of', 'devices', 'in', '[MASK]']",SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1,"['shop', 'stock', 'Shop_ID', 'Shop_Name']","[('shop', 'T2'), ('stock', 'T1')]","['Shop_ID', 'Shop_Name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'order', 'desc', 'count']",1.0,1.0
6484,6484,What is the name and hours for the project which has the most scientists assigned to it?,What is the [MASK] and [MASK] for the [MASK] which has the most scientists [MASK] to it?,"['What', 'is', 'the', '[MASK]', 'and', '[MASK]', 'for', 'the', '[MASK]', 'which', 'has', 'the', 'most', 'scientists', '[MASK]', 'to', 'it?']","SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1","['assignedto', 'projects', 'project', 'code', 'hours', 'name']","[('assignedto', 'T2'), ('projects', 'T1')]","['project', 'code', 'hours', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
1503,1503,Show the names of people that are on affirmative side of debates with number of audience bigger than 200.,Show the [MASK] [MASK] [MASK] that are on [MASK] side [MASK] [MASK] with number [MASK] [MASK] bigger than 200.,"['Show', 'the', '[MASK]', '[MASK]', '[MASK]', 'that', 'are', 'on', '[MASK]', 'side', '[MASK]', '[MASK]', 'with', 'number', '[MASK]', '[MASK]', 'bigger', 'than', '200.']",SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200,"['debate_people', 'people', 'debate', 'Name', 'Num_of_Audience', 'Debate_ID', 'People_ID', 'Affirmative']","[('debate_people', 'T1'), ('people', 'T3'), ('debate', 'T2')]","['Name', 'Num_of_Audience', 'Debate_ID', 'People_ID', 'Affirmative']","as,join,from,select,where",True,"['as', 'join', 'where', 'group', 'order', 'desc']",1.0,0.5
7123,7123,What are the countries having at least one car maker? List name and id.,What are the [MASK] having at least one [MASK] [MASK] List [MASK] and id.,"['What', 'are', 'the', '[MASK]', 'having', 'at', 'least', 'one', '[MASK]', '[MASK]', 'List', '[MASK]', 'and', 'id.']","SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","['CAR_MAKERS', 'COUNTRIES', 'CountryName', 'CountryId', 'Country']","[('CAR_MAKERS', 'T2'), ('COUNTRIES', 'T1')]","['CountryName', 'CountryId', 'Country']","as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'count']",0.8,1.0
3960,3960,List the physicians' employee ids together with their primary affiliation departments' ids.,List the [MASK] [MASK] [MASK] together [MASK] their [MASK] [MASK] [MASK] ids.,"['List', 'the', '[MASK]', '[MASK]', '[MASK]', 'together', '[MASK]', 'their', '[MASK]', '[MASK]', '[MASK]', 'ids.']","SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1","['affiliated_with', 'physician', 'primaryaffiliation', 'department']","[('affiliated_with', '')]","['physician', 'primaryaffiliation', 'department']","select,from,where",False,[],,
7366,7366,What are the paragraph texts for the document with the name 'Customer reviews'?,What are the [MASK] [MASK] for the [MASK] with the [MASK] [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', 'with', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""","['Paragraphs', 'Documents', 'Customer reviews', 'document_id', 'document_name', 'paragraph_text']","[('Paragraphs', 'T1'), ('Documents', 'T2')]","['Customer reviews', 'document_id', 'document_name', 'paragraph_text']","as,join,from,select,where",True,"['as', 'join', 'and', 'where']",1.0,0.75
213,213,How many books are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM book,['book'],"[('book', '')]",[],"select,count,from",False,['count'],1.0,1.0
1031,1031,"Find the Char cells, Pixels and Hardware colours for the screen of the phone whose hardware model name is ""LG-P760"".",Find the [MASK] [MASK] [MASK] and [MASK] [MASK] for the [MASK] of the [MASK] whose [MASK] [MASK] [MASK] is [MASK],"['Find', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', 'of', 'the', '[MASK]', 'whose', '[MASK]', '[MASK]', '[MASK]', 'is', '[MASK]']","SELECT T1.Char_cells ,  T1.Pixels ,  T1.Hardware_colours FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Hardware_Model_name = ""LG-P760"";","['phone', 'screen_mode', 'Char_cells', 'Hardware_Model_name', 'Graphics_mode', 'LG-P760', 'Hardware_colours', 'screen_mode', 'Pixels']","[('phone', 'T2'), ('screen_mode', 'T1')]","['Char_cells', 'Hardware_Model_name', 'Graphics_mode', 'LG-P760', 'Hardware_colours', 'screen_mode', 'Pixels']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
4898,4898,Show the denomination shared by more than one school.,Show the [MASK] shared by more than one [MASK],"['Show', 'the', '[MASK]', 'shared', 'by', 'more', 'than', 'one', '[MASK]']",SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1,"['school', 'Denomination']","[('school', '')]",['Denomination'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
3434,3434,What are the salaries and manager ids for employees who have managers?,What are the [MASK] and [MASK] [MASK] for [MASK] who have [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', '[MASK]', 'who', 'have', '[MASK]']","SELECT salary ,  manager_id FROM employees WHERE manager_id != ""null""","['employees', 'salary', 'null', 'manager_id']","[('employees', '')]","['salary', 'null', 'manager_id']","select,from,where",False,['where'],1.0,1.0
2145,2145,How many events had participants whose details had the substring 'Dr.',How many [MASK] had [MASK] whose [MASK] had the substring 'Dr.',"['How', 'many', '[MASK]', 'had', '[MASK]', 'whose', '[MASK]', 'had', 'the', 'substring', ""'Dr.'""]",SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%',"['participants', 'Participants_in_Events', 'participant_details', 'Participant_ID']","[('participants', 'T1'), ('Participants_in_Events', 'T2')]","['participant_details', 'Participant_ID']","like,as,join,count,where,select,from",True,"['count', 'where']",0.4,1.0
1516,1516,What are the total amount and average amount paid in claim headers?,What are the total [MASK] and average [MASK] paid in [MASK] [MASK],"['What', 'are', 'the', 'total', '[MASK]', 'and', 'average', '[MASK]', 'paid', 'in', '[MASK]', '[MASK]']","SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers","['claim_headers', 'amount_piad']","[('claim_headers', '')]",['amount_piad'],"select,sum,from,avg",False,"['sum', 'avg']",1.0,1.0
4655,4655,Find the rooms of faculties with rank professor who live in building NEB.,Find the [MASK] of [MASK] with [MASK] [MASK] who live in [MASK] NEB.,"['Find', 'the', '[MASK]', 'of', '[MASK]', 'with', '[MASK]', '[MASK]', 'who', 'live', 'in', '[MASK]', 'NEB.']","SELECT Room FROM FACULTY WHERE Rank  =  ""Professor"" AND Building  =  ""NEB""","['FACULTY', 'Professor', 'Rank', 'Building', 'NEB', 'Room']","[('FACULTY', '')]","['Professor', 'Rank', 'Building', 'NEB', 'Room']","select,and,from,where",False,"['and', 'where']",1.0,1.0
1637,1637,Show the country where people older than 30 and younger than 25 are from.,Show the [MASK] where [MASK] older than 30 and younger than 25 are from.,"['Show', 'the', '[MASK]', 'where', '[MASK]', 'older', 'than', '30', 'and', 'younger', 'than', '25', 'are', 'from.']",SELECT country FROM people WHERE age  <  25 INTERSECT SELECT country FROM people WHERE age  >  30,"['people', 'age', 'country']","[('people', '')]","['age', 'country']","intersect,select,from,where",False,"['intersect', 'where']",1.0,1.0
6746,6746,Find the faculty rank that has the least members.,Find the [MASK] [MASK] that has the least members.,"['Find', 'the', '[MASK]', '[MASK]', 'that', 'has', 'the', 'least', 'members.']",SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1,"['Faculty', 'rank']","[('Faculty', '')]",['rank'],"asc,group,limit,count,order,select,from",False,"['asc', 'as', 'group', 'join', 'limit', 'count', 'order']",1.0,0.7142857142857143
2044,2044,Count the number of different parties.,Count the number of different [MASK],"['Count', 'the', 'number', 'of', 'different', '[MASK]']",SELECT count(DISTINCT party_name) FROM party,"['party', 'party_name']","[('party', '')]",['party_name'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
5654,5654,Show all distinct cities in the address record.,Show all distinct [MASK] in the [MASK] record.,"['Show', 'all', 'distinct', '[MASK]', 'in', 'the', '[MASK]', 'record.']",SELECT DISTINCT city FROM addresses,"['addresses', 'city']","[('addresses', '')]",['city'],"distinct,select,from",False,['distinct'],1.0,1.0
4792,4792,What are the ids and names of customers with addressed that contain WY and who do not use a credit card for payment?,What are the [MASK] and [MASK] of [MASK] with [MASK] that contain WY and who do not use a [MASK] [MASK] for [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'with', '[MASK]', 'that', 'contain', 'WY', 'and', 'who', 'do', 'not', 'use', 'a', '[MASK]', '[MASK]', 'for', '[MASK]']","SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE ""%WY%"" AND payment_method_code != ""Credit Card""","['customers', 'customer_address', 'payment_method_code', 'customer_name', 'customer_id', 'Credit Card', '%WY%']","[('customers', '')]","['customer_address', 'payment_method_code', 'customer_name', 'customer_id', 'Credit Card', '%WY%']","like,and,where,select,from",False,"['where', 'in', 'not']",0.3333333333333333,0.3333333333333333
2654,2654,"List all information about customer master index, and sort them by details in descending order.",List all information about [MASK] [MASK] [MASK] and sort them by [MASK] in descending order.,"['List', 'all', 'information', 'about', '[MASK]', '[MASK]', '[MASK]', 'and', 'sort', 'them', 'by', '[MASK]', 'in', 'descending', 'order.']",SELECT * FROM customer_master_index ORDER BY cmi_details DESC,"['customer_master_index', 'cmi_details']","[('customer_master_index', '')]",['cmi_details'],"select,order,desc,from",False,['order'],0.5,1.0
3494,3494,Give the first name and job id for all employees in the Finance department.,Give the [MASK] [MASK] and [MASK] [MASK] for all [MASK] in the Finance [MASK],"['Give', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'all', '[MASK]', 'in', 'the', 'Finance', '[MASK]']","SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'","['departments', 'employees', 'department_name', 'department_id', 'first_name', 'job_id']","[('departments', 'T2'), ('employees', 'T1')]","['department_name', 'department_id', 'first_name', 'job_id']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
6065,6065,Which payment method is used by most customers?,Which [MASK] [MASK] is used by most [MASK],"['Which', '[MASK]', '[MASK]', 'is', 'used', 'by', 'most', '[MASK]']",SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1,"['customers', 'payment_method']","[('customers', '')]",['payment_method'],"group,limit,count,order,select,desc,from",False,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,0.7142857142857143
7409,7409,List the names of teachers who have not been arranged to teach courses.,List the [MASK] of [MASK] who have not been [MASK] to [MASK] [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'who', 'have', 'not', 'been', '[MASK]', 'to', '[MASK]', '[MASK]']",SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),"['teacher', 'course_arrange', 'Name', 'Teacher_id']","[('teacher', ''), ('course_arrange', '')]","['Name', 'Teacher_id']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
4332,4332,Which organisation type hires most research staff?,Which [MASK] [MASK] hires most [MASK] [MASK],"['Which', '[MASK]', '[MASK]', 'hires', 'most', '[MASK]', '[MASK]']",SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1,"['Research_Staff', 'Organisations', 'organisation_type', 'employer_organisation_id', 'organisation_id']","[('Research_Staff', 'T2'), ('Organisations', 'T1')]","['organisation_type', 'employer_organisation_id', 'organisation_id']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc']",0.7142857142857143,1.0
1527,1527,What is the name of the claim processing stage that most of the claims are on?,What is the [MASK] of the [MASK] [MASK] [MASK] that most of the [MASK] are on?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', '[MASK]', 'that', 'most', 'of', 'the', '[MASK]', 'are', 'on?']",SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1,"['claims_processing', 'claims_processing_stages', 'claim_status_name', 'claim_stage_id']","[('claims_processing', 't1'), ('claims_processing_stages', 't2')]","['claim_status_name', 'claim_stage_id']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
5034,5034,Find the names of states that have some college students playing in the mid position but not in the goalie position.,Find the [MASK] of [MASK] that have some [MASK] [MASK] [MASK] in the mid position but not in the goalie position.,"['Find', 'the', '[MASK]', 'of', '[MASK]', 'that', 'have', 'some', '[MASK]', '[MASK]', '[MASK]', 'in', 'the', 'mid', 'position', 'but', 'not', 'in', 'the', 'goalie', 'position.']",SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie',"['college', 'tryout', 'pPos', 'state', 'cName']","[('college', 'T1'), ('tryout', 'T2')]","['pPos', 'state', 'cName']","as,except,join,from,select,where",True,"['intersect', 'where']",0.25,0.5
1714,1714,Find the name of the target user with the lowest trust score.,Find the [MASK] of the [MASK] [MASK] with the lowest [MASK] score.,"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'with', 'the', 'lowest', '[MASK]', 'score.']",SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id ORDER BY trust LIMIT 1,"['useracct', 'trust', 'u_id', 'target_u_id', 'trust', 'name']","[('useracct', 'T1'), ('trust', 'T2')]","['u_id', 'target_u_id', 'trust', 'name']","as,join,limit,order,select,from",True,"['as', 'join', 'limit', 'order']",1.0,1.0
6841,6841,Which countries has the most number of airlines?,Which [MASK] has the most number of [MASK],"['Which', '[MASK]', 'has', 'the', 'most', 'number', 'of', '[MASK]']",SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1,"['airlines', 'country']","[('airlines', '')]",['country'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
7069,7069,Find the id and weight of all pets whose age is older than 1.,Find the [MASK] and [MASK] of all [MASK] whose [MASK] is older than 1.,"['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', 'all', '[MASK]', 'whose', '[MASK]', 'is', 'older', 'than', '1.']","SELECT petid ,  weight FROM pets WHERE pet_age  >  1","['pets', 'weight', 'pet_age', 'petid']","[('pets', '')]","['weight', 'pet_age', 'petid']","select,from,where",False,"['limit', 'order']",0.0,0.0
1707,1707,Find the name and id of the item with the highest average rating.,Find the name and [MASK] of the [MASK] with the highest average [MASK],"['Find', 'the', 'name', 'and', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'highest', 'average', '[MASK]']","SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) DESC LIMIT 1","['item', 'review', 'rating', 'i_id', 'title']","[('item', 'T1'), ('review', 'T2')]","['rating', 'i_id', 'title']","as,group,join,limit,order,avg,select,desc,from",True,"['as', 'group', 'join', 'limit', 'order', 'avg', 'desc']",1.0,1.0
6866,6866,What are the cities with exactly two airports?,What are the [MASK] with exactly two [MASK],"['What', 'are', 'the', '[MASK]', 'with', 'exactly', 'two', '[MASK]']",SELECT city FROM airports GROUP BY city HAVING count(*)  =  2,"['airports', 'city']","[('airports', '')]",['city'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
406,406,What are the destinations and number of flights to each one?,What are the [MASK] and number of [MASK] to each one?,"['What', 'are', 'the', '[MASK]', 'and', 'number', 'of', '[MASK]', 'to', 'each', 'one?']","SELECT destination ,  count(*) FROM Flight GROUP BY destination","['Flight', 'destination']","[('Flight', '')]",['destination'],"select,count,from,group",False,"['as', 'group', 'join', 'count']",1.0,0.5
6686,6686,What is zip code of customer with first name as Carole and last name as Bernhard?,What is [MASK] [MASK] of [MASK] with [MASK] [MASK] as [MASK] and [MASK] [MASK] as [MASK],"['What', 'is', '[MASK]', '[MASK]', 'of', '[MASK]', 'with', '[MASK]', '[MASK]', 'as', '[MASK]', 'and', '[MASK]', '[MASK]', 'as', '[MASK]']","SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = ""Carole"" AND T1.last_name = ""Bernhard""","['Customers', 'Addresses', 'address_id', 'zip_postcode', 'customer_address_id', 'last_name', 'Bernhard', 'Carole', 'first_name']","[('Customers', 'T1'), ('Addresses', 'T2')]","['address_id', 'zip_postcode', 'customer_address_id', 'last_name', 'Bernhard', 'Carole', 'first_name']","as,join,from,and,select,where",True,['where'],0.25,1.0
4275,4275,"Which members of ""Bootup Baltimore"" major in ""600""? Give me their first names and last names.","Which [MASK] [MASK] [MASK] [MASK] [MASK] in ""600""? Give me their first [MASK] and last [MASK]","['Which', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'in', '""600""?', 'Give', 'me', 'their', 'first', '[MASK]', 'and', 'last', '[MASK]']","SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.major  =  ""600""","['student', 'member_of_club', 'club', '600', 'Bootup Baltimore', 'clubname', 'lname', 'fname', 'clubid', 'major', 'stuid']","[('student', 't3'), ('member_of_club', 't2'), ('club', 't1')]","['600', 'Bootup Baltimore', 'clubname', 'lname', 'fname', 'clubid', 'major', 'stuid']","as,join,from,and,select,where",True,['where'],0.25,1.0
578,578,How many customers live in the city of Prague?,How many [MASK] live in the [MASK] of [MASK],"['How', 'many', '[MASK]', 'live', 'in', 'the', '[MASK]', 'of', '[MASK]']","SELECT count(*) FROM customers WHERE city = ""Prague"";","['customers', 'city', 'Prague']","[('customers', '')]","['city', 'Prague']","select,count,from,where",False,"['count', 'where']",1.0,1.0
5228,5228,How many songs have a lead vocal?,How many [MASK] have a [MASK] [MASK],"['How', 'many', '[MASK]', 'have', 'a', '[MASK]', '[MASK]']","SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  ""lead""","['songs', 'vocals', 'songid', 'lead', 'title', 'TYPE']","[('songs', 'T2'), ('vocals', 'T1')]","['songid', 'lead', 'title', 'TYPE']","distinct,as,join,count,where,select,from",True,"['count', 'where']",0.4,1.0
5853,5853,"Show the description of transaction type with code ""PUR"".","Show the [MASK] of [MASK] [MASK] with [MASK] ""PUR"".","['Show', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', 'with', '[MASK]', '""PUR"".']","SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code	  =  ""PUR""","['Ref_Transaction_Types', 'transaction_type_description', 'transaction_type_code', 'PUR']","[('Ref_Transaction_Types', '')]","['transaction_type_description', 'transaction_type_code', 'PUR']","select,from,where",False,['where'],1.0,1.0
4914,4914,Find all types of store and number of them.,Find all [MASK] of [MASK] and number of them.,"['Find', 'all', '[MASK]', 'of', '[MASK]', 'and', 'number', 'of', 'them.']","SELECT TYPE ,  count(*) FROM store GROUP BY TYPE","['store', 'TYPE']","[('store', '')]",['TYPE'],"select,count,from,group",False,"['as', 'join', 'count', 'group']",1.0,0.5
7140,7140,What is the maximum accelerate for all the different cylinders?,What is the maximum [MASK] for all the different [MASK],"['What', 'is', 'the', 'maximum', '[MASK]', 'for', 'all', 'the', 'different', '[MASK]']","SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;","['CARS_DATA', 'Accelerate', 'Cylinders']","[('CARS_DATA', '')]","['Accelerate', 'Cylinders']","group,select,from,max",False,"['group', 'max']",1.0,1.0
367,367,How many employees have salary between 100000 and 200000?,How many [MASK] have [MASK] between 100000 and 200000?,"['How', 'many', '[MASK]', 'have', '[MASK]', 'between', '100000', 'and', '200000?']",SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000,"['Employee', 'salary']","[('Employee', '')]",['salary'],"count,and,between,where,select,from",False,"['count', 'and', 'between', 'where']",1.0,1.0
6671,6671,How many customers are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM Customers;,['Customers'],"[('Customers', '')]",[],"select,count,from",False,['count'],1.0,1.0
6443,6443,What is the description for the budget type with code ORG?,What is the [MASK] for the [MASK] [MASK] with [MASK] ORG?,"['What', 'is', 'the', '[MASK]', 'for', 'the', '[MASK]', '[MASK]', 'with', '[MASK]', 'ORG?']","SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  ""ORG""","['Ref_budget_codes', 'budget_type_description', 'budget_type_code', 'ORG']","[('Ref_budget_codes', '')]","['budget_type_description', 'budget_type_code', 'ORG']","select,from,where",False,['where'],1.0,1.0
2992,2992,"Find all the films longer than 100 minutes, or rated PG, except those who cost more than 200 for replacement. List the titles.","Find all the [MASK] longer than 100 minutes, or rated PG, except those who [MASK] more than 200 for [MASK] List the [MASK]","['Find', 'all', 'the', '[MASK]', 'longer', 'than', '100', 'minutes,', 'or', 'rated', 'PG,', 'except', 'those', 'who', '[MASK]', 'more', 'than', '200', 'for', '[MASK]', 'List', 'the', '[MASK]']",SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200,"['film', 'replacement_cost', 'rating', 'LENGTH', 'title']","[('film', '')]","['replacement_cost', 'rating', 'LENGTH', 'title']","except,where,or,select,from",False,['where'],0.3333333333333333,1.0
536,536,What are the first name and major of the students who are able to consume soy?,What are the first [MASK] and [MASK] of the [MASK] who are able to consume soy?,"['What', 'are', 'the', 'first', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'who', 'are', 'able', 'to', 'consume', 'soy?']","SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  ""Soy"")","['Student', 'Has_allergy', 'Allergy', 'StuID', 'Soy', 'fname', 'major']","[('Student', ''), ('Has_allergy', '')]","['Allergy', 'StuID', 'Soy', 'fname', 'major']","where,in,not,select,from",False,['where'],0.3333333333333333,1.0
147,147,What is the zip code in which the average mean sea level pressure is the lowest?,What is the [MASK] [MASK] in which the average [MASK] [MASK] [MASK] [MASK] is the lowest?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'in', 'which', 'the', 'average', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'is', 'the', 'lowest?']",SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1,"['weather', 'mean_sea_level_pressure_inches', 'zip_code']","[('weather', '')]","['mean_sea_level_pressure_inches', 'zip_code']","group,limit,order,avg,select,from",False,"['group', 'limit', 'order', 'avg', 'as', 'join']",1.0,0.6666666666666666
4742,4742,Return the ids of the two department store chains with the most department stores.,Return the [MASK] of the two [MASK] [MASK] [MASK] with the most [MASK] [MASK],"['Return', 'the', '[MASK]', 'of', 'the', 'two', '[MASK]', '[MASK]', '[MASK]', 'with', 'the', 'most', '[MASK]', '[MASK]']",SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2,"['department_stores', 'dept_store_chain_id']","[('department_stores', '')]",['dept_store_chain_id'],"group,limit,count,order,select,desc,from",False,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,0.7142857142857143
3542,3542,What are the names of the artists who sang the shortest song?,What are the [MASK] of the [MASK] who sang the shortest [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'sang', 'the', 'shortest', '[MASK]']",SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1,"['files', 'song', 'f_id', 'duration', 'artist_name']","[('files', 'T2'), ('song', 'T1')]","['f_id', 'duration', 'artist_name']","as,join,limit,order,select,from",True,"['as', 'join', 'limit', 'order']",1.0,1.0
4839,4839,what is the name and age of the youngest winning pilot?,what is the [MASK] and [MASK] of the youngest [MASK] [MASK],"['what', 'is', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', 'youngest', '[MASK]', '[MASK]']","SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1","['pilot', 'MATCH', 'pilot_id', 'winning_pilot', 'age', 'name']","[('pilot', 't1'), ('MATCH', 't2')]","['pilot_id', 'winning_pilot', 'age', 'name']","as,join,limit,order,select,from",True,"['limit', 'order', 'asc']",0.5,0.6666666666666666
2000,2000,What are the names and headquarters of all companies ordered by descending market value?,What are the names and [MASK] of all [MASK] ordered by descending [MASK] [MASK],"['What', 'are', 'the', 'names', 'and', '[MASK]', 'of', 'all', '[MASK]', 'ordered', 'by', 'descending', '[MASK]', '[MASK]']","SELECT company ,  headquarters FROM company ORDER BY market_value DESC","['company', 'market_value', 'company', 'headquarters']","[('company', '')]","['market_value', 'company', 'headquarters']","select,order,desc,from",False,"['order', 'desc']",1.0,1.0
2426,2426,"find the highest support percentage, lowest consider rate and oppose rate of all candidates.","find the highest [MASK] percentage, lowest [MASK] [MASK] and [MASK] [MASK] of all [MASK]","['find', 'the', 'highest', '[MASK]', 'percentage,', 'lowest', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'all', '[MASK]']","SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate","['candidate', 'consider_rate', 'support_rate', 'oppose_rate']","[('candidate', '')]","['consider_rate', 'support_rate', 'oppose_rate']","select,min,from,max",False,"['limit', 'order', 'desc']",0.0,0.0
650,650,List the names of editors in ascending order of age.,List the [MASK] of [MASK] in ascending order of age.,"['List', 'the', '[MASK]', 'of', '[MASK]', 'in', 'ascending', 'order', 'of', 'age.']",SELECT Name FROM editor ORDER BY Age ASC,"['editor', 'Name', 'Age']","[('editor', '')]","['Name', 'Age']","select,asc,order,from",False,"['asc', 'order']",1.0,1.0
5744,5744,Find the average age of students who are living in the dorm with the largest capacity.,Find the average [MASK] of [MASK] who are living [MASK] the [MASK] with the largest [MASK],"['Find', 'the', 'average', '[MASK]', 'of', '[MASK]', 'who', 'are', 'living', '[MASK]', 'the', '[MASK]', 'with', 'the', 'largest', '[MASK]']",SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm),"['student', 'dorm', 'dorm', 'lives_in', 'dormid', 'age', 'student_capacity', 'stuid']","[('student', 'T1'), ('dorm', ''), ('dorm', 'T3'), ('lives_in', 'T2')]","['dormid', 'age', 'student_capacity', 'stuid']","where,as,join,avg,select,from,max",True,"['group', 'avg']",0.2,0.5
193,193,List all the distinct stations from which a trip of duration below 100 started.,List all the distinct [MASK] from which a [MASK] of [MASK] below 100 [MASK],"['List', 'all', 'the', 'distinct', '[MASK]', 'from', 'which', 'a', '[MASK]', 'of', '[MASK]', 'below', '100', '[MASK]']",SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100,"['trip', 'start_station_name', 'duration']","[('trip', '')]","['start_station_name', 'duration']","distinct,select,from,where",False,['distinct'],0.5,1.0
1943,1943,Show all the locations with at least two cinemas with capacity above 300.,Show all the [MASK] with at least two [MASK] with [MASK] above 300.,"['Show', 'all', 'the', '[MASK]', 'with', 'at', 'least', 'two', '[MASK]', 'with', '[MASK]', 'above', '300.']",SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2,"['cinema', 'LOCATION', 'capacity']","[('cinema', '')]","['LOCATION', 'capacity']","group,count,having,where,select,from",False,"['group', 'count', 'having', 'where']",1.0,1.0
938,938,What are the names and locations of all enzymes listed?,What are the [MASK] and [MASK] of all [MASK] listed?,"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', 'all', '[MASK]', 'listed?']","SELECT name ,  LOCATION FROM enzyme","['enzyme', 'LOCATION', 'name']","[('enzyme', '')]","['LOCATION', 'name']","select,from",False,[],,
166,166,How many trips did not end in San Francisco?,How many [MASK] did not [MASK] in San [MASK],"['How', 'many', '[MASK]', 'did', 'not', '[MASK]', 'in', 'San', '[MASK]']","SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city != ""San Francisco""","['station', 'trip', 'end_station_id', 'city', 'San Francisco', 'id']","[('station', 'T2'), ('trip', 'T1')]","['end_station_id', 'city', 'San Francisco', 'id']","as,join,count,where,select,from",True,"['where', 'in', 'count', 'not']",0.5,0.5
542,542,What are the names of the countries and average invoice size of the top countries by size?,What are the names of the [MASK] and average [MASK] size of the top [MASK] by size?,"['What', 'are', 'the', 'names', 'of', 'the', '[MASK]', 'and', 'average', '[MASK]', 'size', 'of', 'the', 'top', '[MASK]', 'by', 'size?']","SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;","['invoices', 'billing_country', 'total']","[('invoices', '')]","['billing_country', 'total']","group,limit,order,avg,select,desc,from",False,"['group', 'avg']",0.4,1.0
3587,3587,What is the language that was used most often in songs with resolution above 500?,What is the [MASK] that was used most often in [MASK] with [MASK] above 500?,"['What', 'is', 'the', '[MASK]', 'that', 'was', 'used', 'most', 'often', 'in', '[MASK]', 'with', '[MASK]', 'above', '500?']",SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1,"['song', 'resolution', 'languages', 'artist_name']","[('song', '')]","['resolution', 'languages', 'artist_name']","group,limit,count,order,where,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",0.8333333333333334,1.0
4744,4744,Return the id of the department with the fewest staff assignments.,Return the [MASK] of the [MASK] with the fewest [MASK] [MASK],"['Return', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'fewest', '[MASK]', '[MASK]']",SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1,"['staff_department_assignments', 'department_id']","[('staff_department_assignments', '')]",['department_id'],"group,limit,count,order,select,from",False,"['group', 'limit', 'count', 'order']",1.0,1.0
3803,3803,"Which course author teaches the ""advanced database"" course? Give me his or her login name.",Which [MASK] [MASK] teaches the [MASK] [MASK] [MASK] Give me his or her [MASK] [MASK],"['Which', '[MASK]', '[MASK]', 'teaches', 'the', '[MASK]', '[MASK]', '[MASK]', 'Give', 'me', 'his', 'or', 'her', '[MASK]', '[MASK]']","SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  ""advanced database""","['Course_Authors_and_Tutors', 'Courses', 'advanced database', 'login_name', 'author_id', 'course_name']","[('Course_Authors_and_Tutors', 'T1'), ('Courses', 'T2')]","['advanced database', 'login_name', 'author_id', 'course_name']","as,join,from,select,where",True,"['where', 'as', 'join']",1.0,1.0
5000,5000,Find the name of all students who were in the tryout sorted in alphabetic order.,Find the [MASK] of all [MASK] who were in the [MASK] sorted in alphabetic order.,"['Find', 'the', '[MASK]', 'of', 'all', '[MASK]', 'who', 'were', 'in', 'the', '[MASK]', 'sorted', 'in', 'alphabetic', 'order.']",SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName,"['tryout', 'player', 'pID', 'pName']","[('tryout', 'T2'), ('player', 'T1')]","['pID', 'pName']","as,join,order,select,from",True,['order'],0.3333333333333333,1.0
627,627,List title of albums have the number of tracks greater than 10.,List [MASK] of [MASK] have the number of [MASK] greater than 10.,"['List', '[MASK]', 'of', '[MASK]', 'have', 'the', 'number', 'of', '[MASK]', 'greater', 'than', '10.']",SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;,"['tracks', 'albums', 'album_id', 'title', 'id']","[('tracks', 'T2'), ('albums', 'T1')]","['album_id', 'title', 'id']","as,group,join,count,having,select,from",True,"['group', 'count', 'having']",0.6,1.0
6062,6062,"Which customers use ""Cash"" for payment method? Return the customer names.",Which [MASK] use [MASK] for [MASK] [MASK] Return the [MASK] [MASK],"['Which', '[MASK]', 'use', '[MASK]', 'for', '[MASK]', '[MASK]', 'Return', 'the', '[MASK]', '[MASK]']","SELECT customer_name FROM customers WHERE payment_method  =  ""Cash""","['customers', 'payment_method', 'Cash', 'customer_name']","[('customers', '')]","['payment_method', 'Cash', 'customer_name']","select,from,where",False,"['as', 'join', 'where']",1.0,0.3333333333333333
2591,2591,What are the names and decor of rooms with a king bed? Sort them by their price,What are the [MASK] and [MASK] of [MASK] with a king bed? Sort them by their [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'with', 'a', 'king', 'bed?', 'Sort', 'them', 'by', 'their', '[MASK]']","SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  'King' ORDER BY basePrice;","['Rooms', 'decor', 'roomName', 'basePrice', 'bedtype']","[('Rooms', '')]","['decor', 'roomName', 'basePrice', 'bedtype']","select,order,from,where",False,"['order', 'where']",1.0,1.0
6061,6061,"What are the names of customers who use payment method ""Cash""?",What are the [MASK] of [MASK] who use [MASK] [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'who', 'use', '[MASK]', '[MASK]', '[MASK]']","SELECT customer_name FROM customers WHERE payment_method  =  ""Cash""","['customers', 'payment_method', 'Cash', 'customer_name']","[('customers', '')]","['payment_method', 'Cash', 'customer_name']","select,from,where",False,"['as', 'join', 'where']",1.0,0.3333333333333333
6561,6561,List the names of all distinct wines ordered by price.,List the [MASK] of all distinct [MASK] ordered by [MASK],"['List', 'the', '[MASK]', 'of', 'all', 'distinct', '[MASK]', 'ordered', 'by', '[MASK]']",SELECT DISTINCT Name FROM WINE ORDER BY price,"['WINE', 'Name', 'price']","[('WINE', '')]","['Name', 'price']","distinct,select,order,from",False,"['distinct', 'order']",1.0,1.0
4535,4535,Find the average access count of documents with the least popular structure.,Find the average [MASK] [MASK] of [MASK] with the least popular [MASK],"['Find', 'the', 'average', '[MASK]', '[MASK]', 'of', '[MASK]', 'with', 'the', 'least', 'popular', '[MASK]']",SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1,"['documents', 'document_structure_code', 'access_count']","[('documents', '')]","['document_structure_code', 'access_count']","asc,group,limit,count,order,avg,select,from",False,"['avg', 'where']",0.16666666666666666,0.5
1101,1101,What are the names of all colleges that have two or more players?,What are the names of all [MASK] that have two or more [MASK],"['What', 'are', 'the', 'names', 'of', 'all', '[MASK]', 'that', 'have', 'two', 'or', 'more', '[MASK]']",SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2,"['match_season', 'College']","[('match_season', '')]",['College'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
7981,7981,Find the number of owners who do not own any dogs at this moment.,Find the number of [MASK] who do not own any [MASK] at this [MASK],"['Find', 'the', 'number', 'of', '[MASK]', 'who', 'do', 'not', 'own', 'any', '[MASK]', 'at', 'this', '[MASK]']",SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),"['Owners', 'Dogs', 'owner_id']","[('Owners', ''), ('Dogs', '')]",['owner_id'],"where,in,count,not,select,from",False,"['where', 'in', 'count', 'not']",1.0,1.0
6475,6475,Find the number of distinct projects.,Find the number of distinct [MASK],"['Find', 'the', 'number', 'of', 'distinct', '[MASK]']",SELECT count(DISTINCT name) FROM projects,"['projects', 'name']","[('projects', '')]",['name'],"distinct,select,count,from",False,"['count', 'distinct']",1.0,1.0
4399,4399,How many friends does Dan have?,How many [MASK] does Dan have?,"['How', 'many', '[MASK]', 'does', 'Dan', 'have?']",SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan',"['Person', 'PersonFriend', 'friend', 'name']","[('Person', 'T1'), ('PersonFriend', 'T2')]","['friend', 'name']","as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",1.0,1.0
585,585,How many customers does Steve Johnson support?,How many [MASK] does [MASK] [MASK] [MASK],"['How', 'many', '[MASK]', 'does', '[MASK]', '[MASK]', '[MASK]']","SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = ""Steve"" AND T1.last_name = ""Johnson"";","['employees', 'customers', 'last_name', 'Johnson', 'support_rep_id', 'Steve', 'id', 'first_name']","[('employees', 'T1'), ('customers', 'T2')]","['last_name', 'Johnson', 'support_rep_id', 'Steve', 'id', 'first_name']","as,join,count,and,where,select,from",True,"['as', 'join', 'count', 'where']",0.8,1.0
2765,2765,"Which county do the delegates on ""Appropriations"" committee belong to? Give me the county names.",Which [MASK] do the delegates on [MASK] [MASK] belong to? Give me the [MASK] [MASK],"['Which', '[MASK]', 'do', 'the', 'delegates', 'on', '[MASK]', '[MASK]', 'belong', 'to?', 'Give', 'me', 'the', '[MASK]', '[MASK]']","SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  ""Appropriations""","['election', 'county', 'County_name', 'County_id', 'Committee', 'District', 'Appropriations']","[('election', 'T2'), ('county', 'T1')]","['County_name', 'County_id', 'Committee', 'District', 'Appropriations']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
5376,5376,"For each product which has problems, what are the number of problems and the product id?",For each [MASK] which has [MASK] what are the number of [MASK] and the [MASK] id?,"['For', 'each', '[MASK]', 'which', 'has', '[MASK]', 'what', 'are', 'the', 'number', 'of', '[MASK]', 'and', 'the', '[MASK]', 'id?']","SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id","['product', 'problems', 'product_id']","[('product', 'T2'), ('problems', 'T1')]",['product_id'],"as,group,join,count,select,from",True,"['as', 'group', 'join', 'count']",1.0,1.0
371,371,What is average and maximum salary of all employees.,What is average and maximum [MASK] of all [MASK],"['What', 'is', 'average', 'and', 'maximum', '[MASK]', 'of', 'all', '[MASK]']","SELECT avg(salary) ,  max(salary) FROM Employee","['Employee', 'salary']","[('Employee', '')]",['salary'],"select,max,from,avg",False,"['max', 'avg']",1.0,1.0
5656,5656,Show names and phones of customers who do not have address information.,Show [MASK] and [MASK] of [MASK] who do not have [MASK] information.,"['Show', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'who', 'do', 'not', 'have', '[MASK]', 'information.']","SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history)","['customers', 'customer_address_history', 'customer_id', 'customer_phone', 'customer_name']","[('customers', ''), ('customer_address_history', '')]","['customer_id', 'customer_phone', 'customer_name']","where,in,not,select,from",False,['except'],0.0,0.0
7991,7991,List each charge type and its amount.,List each [MASK] [MASK] and its [MASK],"['List', 'each', '[MASK]', '[MASK]', 'and', 'its', '[MASK]']","SELECT charge_type ,  charge_amount FROM Charges","['Charges', 'charge_amount', 'charge_type']","[('Charges', '')]","['charge_amount', 'charge_type']","select,from",False,[],,
3617,3617,What is ids of the songs whose resolution is higher than the average resolution of songs in modern genre?,What [MASK] [MASK] of the [MASK] whose [MASK] [MASK] higher than the average [MASK] of [MASK] in [MASK] [MASK],"['What', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'whose', '[MASK]', '[MASK]', 'higher', 'than', 'the', 'average', '[MASK]', 'of', '[MASK]', 'in', '[MASK]', '[MASK]']","SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  ""modern"")","['song', 'genre_is', 'f_id', 'resolution', 'modern']","[('song', '')]","['genre_is', 'f_id', 'resolution', 'modern']","select,avg,from,where",False,"['avg', 'where']",1.0,1.0
1552,1552,"What are the ids, date opened, name, and other details for all accounts?","What are the ids, [MASK] [MASK] [MASK] and [MASK] [MASK] for all [MASK]","['What', 'are', 'the', 'ids,', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'all', '[MASK]']","SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts","['Accounts', 'account_id', 'other_account_details', 'account_name', 'date_account_opened']","[('Accounts', '')]","['account_id', 'other_account_details', 'account_name', 'date_account_opened']","select,from",False,[],,
6899,6899,What is the customer id of the customer who has the most orders?,What is the [MASK] [MASK] of the [MASK] who has the most [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'who', 'has', 'the', 'most', '[MASK]']",SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1,"['orders', 'customers', 'customer_id']","[('orders', 'T2'), ('customers', 'T1')]",['customer_id'],"as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
5849,5849,What is the total share of transactions?,What is the total [MASK] of [MASK],"['What', 'is', 'the', 'total', '[MASK]', 'of', '[MASK]']",SELECT sum(share_count) FROM TRANSACTIONS,"['TRANSACTIONS', 'share_count']","[('TRANSACTIONS', '')]",['share_count'],"select,sum,from",False,"['sum', 'where']",1.0,0.5
1271,1271,"Which apartments have bookings with both status codes ""Provisional"" and ""Confirmed""? Give me the apartment numbers.",Which [MASK] have [MASK] with both [MASK] [MASK] [MASK] and [MASK] Give me the [MASK] [MASK],"['Which', '[MASK]', 'have', '[MASK]', 'with', 'both', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'Give', 'me', 'the', '[MASK]', '[MASK]']","SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  ""Confirmed"" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  ""Provisional""","['Apartments', 'Apartment_Bookings', 'booking_status_code', 'apt_id', 'Confirmed', 'Provisional', 'apt_number']","[('Apartments', 'T2'), ('Apartment_Bookings', 'T1')]","['booking_status_code', 'apt_id', 'Confirmed', 'Provisional', 'apt_number']","intersect,as,join,from,select,where",True,"['as', 'join', 'where']",0.75,1.0
5260,5260,"Which vocal type has the band mate with first name ""Marianne"" played the most?",Which [MASK] [MASK] has the [MASK] [MASK] with [MASK] [MASK] [MASK] [MASK] the most?,"['Which', '[MASK]', '[MASK]', 'has', 'the', '[MASK]', '[MASK]', 'with', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'the', 'most?']","SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  ""Marianne"" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1","['vocals', 'band', 'Marianne', 'bandmate', 'firstname', 'id', 'TYPE']","[('vocals', 'T1'), ('band', 'T2')]","['Marianne', 'bandmate', 'firstname', 'id', 'TYPE']","as,group,join,limit,from,count,order,select,desc,where",True,"['group', 'limit', 'count', 'order', 'desc']",0.625,1.0
6776,6776,Find the number of activities Mark Giuliano is involved in.,Find the number of activities [MASK] [MASK] is involved in.,"['Find', 'the', 'number', 'of', 'activities', '[MASK]', '[MASK]', 'is', 'involved', 'in.']","SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  ""Mark"" AND T1.lname  =  ""Giuliano""","['Faculty_participates_in', 'Faculty', 'facID', 'Mark', 'lname', 'Giuliano', 'fname']","[('Faculty_participates_in', 'T2'), ('Faculty', 'T1')]","['facID', 'Mark', 'lname', 'Giuliano', 'fname']","as,join,count,and,where,select,from",True,"['count', 'distinct']",0.2,0.5
4385,4385,What are the details for the projects which were launched by the organization with the most projects?,What are the [MASK] for the [MASK] which were launched by the [MASK] with the most [MASK],"['What', 'are', 'the', '[MASK]', 'for', 'the', '[MASK]', 'which', 'were', 'launched', 'by', 'the', '[MASK]', 'with', 'the', 'most', '[MASK]']",SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 ),"['Projects', 'project_details', 'organisation_id']","[('Projects', '')]","['project_details', 'organisation_id']","group,in,limit,count,order,where,select,desc,from",False,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",0.7142857142857143,0.7142857142857143
3174,3174,How many professors are in the accounting dept?,How many [MASK] are in the [MASK] [MASK],"['How', 'many', '[MASK]', 'are', 'in', 'the', '[MASK]', '[MASK]']","SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE DEPT_NAME  =  ""Accounting""","['department', 'professor', 'dept_code', 'DEPT_NAME', 'Accounting']","[('department', 'T2'), ('professor', 'T1')]","['dept_code', 'DEPT_NAME', 'Accounting']","as,join,count,where,select,from",True,"['distinct', 'count']",0.25,0.5
6609,6609,"Show the name, time, and service for all trains.",Show the [MASK] [MASK] and [MASK] for all [MASK],"['Show', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'for', 'all', '[MASK]']","SELECT name ,  TIME ,  service FROM train","['train', 'TIME', 'service', 'name']","[('train', '')]","['TIME', 'service', 'name']","select,from",False,[],,
6764,6764,What are the ids of the faculty members who do not advise any student.,What are the [MASK] of the [MASK] members who do not [MASK] any [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'members', 'who', 'do', 'not', '[MASK]', 'any', '[MASK]']",SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student,"['Student', 'Faculty', 'FacID', 'advisor']","[('Student', ''), ('Faculty', '')]","['FacID', 'advisor']","select,except,from",False,"['where', 'in', 'not']",0.0,0.0
2660,2660,How many parties are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM party,['party'],"[('party', '')]",[],"select,count,from",False,['count'],1.0,1.0
2210,2210,What are the last names and ids of all drivers who had 11 pit stops and participated in more than 5 races?,What are the last [MASK] and [MASK] of all [MASK] who had 11 pit [MASK] and [MASK] in more than 5 races?,"['What', 'are', 'the', 'last', '[MASK]', 'and', '[MASK]', 'of', 'all', '[MASK]', 'who', 'had', '11', 'pit', '[MASK]', 'and', '[MASK]', 'in', 'more', 'than', '5', 'races?']","SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5","['results', 'drivers', 'pitstops', 'surname', 'driverid']","[('results', 'T2'), ('drivers', 'T1'), ('pitstops', 'T2')]","['surname', 'driverid']","intersect,as,group,join,count,having,select,from",True,"['intersect', 'as', 'group', 'join', 'count', 'having']",1.0,1.0
3185,3185,"How many credits does course CIS-220 have, and what its description?","How many [MASK] does [MASK] CIS-220 have, and what its [MASK]","['How', 'many', '[MASK]', 'does', '[MASK]', 'CIS-220', 'have,', 'and', 'what', 'its', '[MASK]']","SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'","['course', 'crs_code', 'crs_description', 'crs_credit']","[('course', '')]","['crs_code', 'crs_description', 'crs_credit']","select,from,where",False,"['where', 'as', 'join', 'count']",1.0,0.25
6621,6621,List the names and locations of all stations ordered by their yearly entry exit and interchange amounts.,List the [MASK] and [MASK] of all [MASK] ordered by their yearly [MASK] [MASK] and [MASK] amounts.,"['List', 'the', '[MASK]', 'and', '[MASK]', 'of', 'all', '[MASK]', 'ordered', 'by', 'their', 'yearly', '[MASK]', '[MASK]', 'and', '[MASK]', 'amounts.']","SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges","['station', 'Annual_entry_exit', 'LOCATION', 'Annual_interchanges', 'name']","[('station', '')]","['Annual_entry_exit', 'LOCATION', 'Annual_interchanges', 'name']","select,order,from",False,"['order', 'desc']",1.0,0.5
2767,2767,"For each delegate, find the names of the party they are part of.",For each [MASK] find the names of the [MASK] they are [MASK] of.,"['For', 'each', '[MASK]', 'find', 'the', 'names', 'of', 'the', '[MASK]', 'they', 'are', '[MASK]', 'of.']","SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID","['party', 'election', 'Party', 'Delegate', 'Party_ID']","[('party', 'T2'), ('election', 'T1')]","['Party', 'Delegate', 'Party_ID']","select,join,from,as",True,"['join', 'as', 'where']",1.0,0.6666666666666666
903,903,Find the name of services that have been used for more than 2 times in first notification of loss.,Find the [MASK] [MASK] [MASK] that have been used for more than 2 times in [MASK] [MASK] [MASK] [MASK],"['Find', 'the', '[MASK]', '[MASK]', '[MASK]', 'that', 'have', 'been', 'used', 'for', 'more', 'than', '2', 'times', 'in', '[MASK]', '[MASK]', '[MASK]', '[MASK]']",SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2,"['first_notification_of_loss', 'services', 'service_id', 'service_name']","[('first_notification_of_loss', 't1'), ('services', 't2')]","['service_id', 'service_name']","as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'count', 'having']",1.0,1.0
4421,4421,"How old is each gender, on average?",How old is each [MASK] on average?,"['How', 'old', 'is', 'each', '[MASK]', 'on', 'average?']","SELECT avg(age) ,  gender FROM Person GROUP BY gender","['Person', 'age', 'gender']","[('Person', '')]","['age', 'gender']","group,select,from,avg",False,"['as', 'join', 'avg', 'where']",0.5,0.25
6289,6289,Which cities' temperature in March is lower than that in July or higher than that in Oct?,Which cities' [MASK] in March is lower than that in July or higher than that in Oct?,"['Which', ""cities'"", '[MASK]', 'in', 'March', 'is', 'lower', 'than', 'that', 'in', 'July', 'or', 'higher', 'than', 'that', 'in', 'Oct?']",SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct,"['temperature', 'city', 'city', 'Mar', 'Oct', 'city_id', 'Jul']","[('temperature', 'T2'), ('city', 'T1')]","['city', 'Mar', 'Oct', 'city_id', 'Jul']","as,join,from,or,select,where",True,"['intersect', 'as', 'join', 'where']",0.75,0.75
1634,1634,Show all opening years and the number of churches that opened in that year.,Show all [MASK] years and the number of [MASK] that [MASK] in that year.,"['Show', 'all', '[MASK]', 'years', 'and', 'the', 'number', 'of', '[MASK]', 'that', '[MASK]', 'in', 'that', 'year.']","SELECT open_date ,  count(*) FROM church GROUP BY open_date","['church', 'open_date']","[('church', '')]",['open_date'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
555,555,List every album whose title starts with A in alphabetical order.,List every [MASK] whose [MASK] starts with A in alphabetical order.,"['List', 'every', '[MASK]', 'whose', '[MASK]', 'starts', 'with', 'A', 'in', 'alphabetical', 'order.']",SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;,"['albums', 'title']","[('albums', '')]",['title'],"like,order,where,select,from",False,['order'],0.3333333333333333,1.0
3602,3602,"What are the maximum duration and resolution of all songs, for each language, ordered alphabetically by language?",What are the maximum [MASK] and [MASK] of all [MASK] for each [MASK] ordered alphabetically by [MASK],"['What', 'are', 'the', 'maximum', '[MASK]', 'and', '[MASK]', 'of', 'all', '[MASK]', 'for', 'each', '[MASK]', 'ordered', 'alphabetically', 'by', '[MASK]']","SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages","['song', 'files', 'f_id', 'duration', 'resolution', 'languages']","[('song', 'T2'), ('files', 'T1')]","['f_id', 'duration', 'resolution', 'languages']","as,group,join,order,select,from,max",True,"['group', 'max']",0.4,1.0
7057,7057,Find the first name of students who have cat or dog pet.,Find the first [MASK] of [MASK] who have cat or dog pet.,"['Find', 'the', 'first', '[MASK]', 'of', '[MASK]', 'who', 'have', 'cat', 'or', 'dog', 'pet.']",SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',"['student', 'has_pet', 'pets', 'pettype', 'petid', 'Fname', 'stuid']","[('student', 'T1'), ('has_pet', 'T2'), ('pets', 'T3')]","['pettype', 'petid', 'Fname', 'stuid']","distinct,as,join,where,or,select,from",True,"['as', 'in', 'join', 'not', 'where']",0.6,0.6
7632,7632,What are the package options and the name of the series for the TV Channel that supports high definition TV?,What are the [MASK] [MASK] and the [MASK] of the [MASK] for the TV [MASK] that supports [MASK] [MASK] TV?,"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', 'the', '[MASK]', 'of', 'the', '[MASK]', 'for', 'the', 'TV', '[MASK]', 'that', 'supports', '[MASK]', '[MASK]', 'TV?']","SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""","['TV_Channel', 'series_name', 'package_option', 'hight_definition_TV', 'yes']","[('TV_Channel', '')]","['series_name', 'package_option', 'hight_definition_TV', 'yes']","select,from,where",False,['where'],1.0,1.0
3526,3526,What are the department names and how many employees work in each of them?,What are the [MASK] [MASK] and how many [MASK] work in each of them?,"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', 'how', 'many', '[MASK]', 'work', 'in', 'each', 'of', 'them?']","SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name","['departments', 'employees', 'department_name', 'department_id']","[('departments', 'T2'), ('employees', 'T1')]","['department_name', 'department_id']","as,group,join,count,select,from",True,"['as', 'group', 'join', 'count']",1.0,1.0
2478,2478,Find the names of all directors whose movies are rated by Sarah Martinez.,Find the [MASK] of all [MASK] whose [MASK] are rated by Sarah Martinez.,"['Find', 'the', '[MASK]', 'of', 'all', '[MASK]', 'whose', '[MASK]', 'are', 'rated', 'by', 'Sarah', 'Martinez.']",SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez',"['Rating', 'Movie', 'Reviewer', 'director', 'rID', 'mID', 'name']","[('Rating', 'T1'), ('Movie', 'T2'), ('Reviewer', 'T3')]","['director', 'rID', 'mID', 'name']","distinct,as,join,where,select,from",True,"['as', 'join', 'where']",0.75,1.0
5949,5949,Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way.,Show different ways [MASK] [MASK] [MASK] [MASK] and the number of [MASK] that can be accessed in the corresponding way.,"['Show', 'different', 'ways', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'that', 'can', 'be', 'accessed', 'in', 'the', 'corresponding', 'way.']","SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There","['Tourist_Attractions', 'How_to_Get_There']","[('Tourist_Attractions', '')]",['How_to_Get_There'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
7105,7105,How many car makers are there in each continents? List the continent name and the count.,How many [MASK] [MASK] are there in each [MASK] List the [MASK] name and the [MASK],"['How', 'many', '[MASK]', '[MASK]', 'are', 'there', 'in', 'each', '[MASK]', 'List', 'the', '[MASK]', 'name', 'and', 'the', '[MASK]']","SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","['car_makers', 'COUNTRIES', 'CONTINENTS', 'Country', 'Continent', 'CountryId', 'continent', 'ContId']","[('car_makers', 'T3'), ('COUNTRIES', 'T2'), ('CONTINENTS', 'T1')]","['Country', 'Continent', 'CountryId', 'continent', 'ContId']","as,group,join,count,select,from",True,"['as', 'group', 'join', 'count']",1.0,1.0
6978,6978,Show publishers with a book published in 1989 and a book in 1990.,Show [MASK] with a [MASK] [MASK] in 1989 and a [MASK] in 1990.,"['Show', '[MASK]', 'with', 'a', '[MASK]', '[MASK]', 'in', '1989', 'and', 'a', '[MASK]', 'in', '1990.']",SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990,"['book_club', 'publisher', 'YEAR']","[('book_club', '')]","['publisher', 'YEAR']","intersect,select,from,where",False,['where'],0.5,1.0
1649,1649,How many artists do we have?,How many [MASK] do we have?,"['How', 'many', '[MASK]', 'do', 'we', 'have?']",SELECT count(*) FROM artist,['artist'],"[('artist', '')]",[],"select,count,from",False,['count'],1.0,1.0
3415,3415,when is the hire date for those employees whose first name does not containing the letter M?,when is the [MASK] [MASK] for those [MASK] whose [MASK] [MASK] does not containing the letter M?,"['when', 'is', 'the', '[MASK]', '[MASK]', 'for', 'those', '[MASK]', 'whose', '[MASK]', '[MASK]', 'does', 'not', 'containing', 'the', 'letter', 'M?']",SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%',"['employees', 'hire_date', 'first_name']","[('employees', '')]","['hire_date', 'first_name']","where,like,not,select,from",False,"['where', 'like', 'not']",1.0,1.0
283,283,Return the text of tweets about the topic 'intern'.,Return the [MASK] of [MASK] about the topic 'intern'.,"['Return', 'the', '[MASK]', 'of', '[MASK]', 'about', 'the', 'topic', ""'intern'.""]",SELECT text FROM tweets WHERE text LIKE '%intern%',"['tweets', 'text']","[('tweets', '')]",['text'],"select,like,from,where",False,"['join', 'as']",0.0,0.0
4101,4101,What is the headquarter of the company with the largest sales?,What is the [MASK] of the [MASK] with the largest [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'largest', '[MASK]']",SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1,"['company', 'Headquarters', 'Sales_in_Billion']","[('company', '')]","['Headquarters', 'Sales_in_Billion']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
6469,6469,Find the total number of scientists.,Find the total number of [MASK],"['Find', 'the', 'total', 'number', 'of', '[MASK]']",SELECT count(*) FROM scientists,['scientists'],"[('scientists', '')]",[],"select,count,from",False,['count'],1.0,1.0
1444,1444,Find the names of instructors who didn't each any courses in any Spring semester.,Find the [MASK] of [MASK] who didn't [MASK] any [MASK] in any Spring [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', 'who', ""didn't"", '[MASK]', 'any', '[MASK]', 'in', 'any', 'Spring', '[MASK]']",SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring'),"['teaches', 'instructor', 'semester', 'id', 'name']","[('teaches', ''), ('instructor', '')]","['semester', 'id', 'name']","where,in,not,select,from",False,"['where', 'except']",0.3333333333333333,0.5
7640,7640,What is the pixel aspect ratio and country of origin for all TV channels that do not use English?,What is the [MASK] [MASK] [MASK] and [MASK] of origin for all TV [MASK] that do not use English?,"['What', 'is', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'origin', 'for', 'all', 'TV', '[MASK]', 'that', 'do', 'not', 'use', 'English?']","SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","['tv_channel', 'Pixel_aspect_ratio_PAR', 'country', 'LANGUAGE']","[('tv_channel', '')]","['Pixel_aspect_ratio_PAR', 'country', 'LANGUAGE']","select,from,where",False,['where'],1.0,1.0
2016,2016,What is the total number of gas stations that opened between 2000 and 2005?,What is the total number of [MASK] [MASK] that [MASK] between 2000 and 2005?,"['What', 'is', 'the', 'total', 'number', 'of', '[MASK]', '[MASK]', 'that', '[MASK]', 'between', '2000', 'and', '2005?']",SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005,"['gas_station', 'open_year']","[('gas_station', '')]",['open_year'],"count,and,between,where,select,from",False,"['and', 'where']",0.5,1.0
3402,3402,Give me the names and prices of furnitures which some companies are manufacturing.,Give me the [MASK] and [MASK] of [MASK] which some companies are [MASK],"['Give', 'me', 'the', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'which', 'some', 'companies', 'are', '[MASK]']","SELECT t1.name ,  t2.price_in_dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID","['furniture_manufacte', 'furniture', 'Furniture_ID', 'price_in_dollar', 'name']","[('furniture_manufacte', 't2'), ('furniture', 't1')]","['Furniture_ID', 'price_in_dollar', 'name']","select,join,from,as",True,['where'],0.0,0.0
5489,5489,"Which students live in the city with code ""NYC"" and have class senator votes in the spring election cycle? Count the numbers.","Which [MASK] live in the [MASK] with [MASK] ""NYC"" and have [MASK] [MASK] [MASK] in the [MASK] [MASK] [MASK] Count the numbers.","['Which', '[MASK]', 'live', 'in', 'the', '[MASK]', 'with', '[MASK]', '""NYC""', 'and', 'have', '[MASK]', '[MASK]', '[MASK]', 'in', 'the', '[MASK]', '[MASK]', '[MASK]', 'Count', 'the', 'numbers.']","SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  ""NYC"" AND T2.Election_Cycle  =  ""Spring""","['VOTING_RECORD', 'STUDENT', 'city_code', 'StuID', 'Spring', 'Election_Cycle', 'NYC', 'Class_Senator_Vote']","[('VOTING_RECORD', 'T2'), ('STUDENT', 'T1')]","['city_code', 'StuID', 'Spring', 'Election_Cycle', 'NYC', 'Class_Senator_Vote']","as,join,count,and,where,select,from",True,"['count', 'where']",0.4,1.0
675,675,How many accounts does the customer with first name Art and last name Turcotte have?,How many [MASK] does the [MASK] with [MASK] [MASK] Art and [MASK] [MASK] [MASK] have?,"['How', 'many', '[MASK]', 'does', 'the', '[MASK]', 'with', '[MASK]', '[MASK]', 'Art', 'and', '[MASK]', '[MASK]', '[MASK]', 'have?']","SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Art"" AND T2.customer_last_name  =  ""Turcotte""","['Accounts', 'Customers', 'customer_last_name', 'Art', 'Turcotte', 'customer_first_name', 'customer_id']","[('Accounts', 'T1'), ('Customers', 'T2')]","['customer_last_name', 'Art', 'Turcotte', 'customer_first_name', 'customer_id']","as,join,count,and,where,select,from",True,"['as', 'join', 'count', 'where']",0.8,1.0
7049,7049,Find the maximum weight for each type of pet. List the maximum weight and pet type.,Find the maximum [MASK] for each [MASK] of pet. List the maximum [MASK] and [MASK] [MASK],"['Find', 'the', 'maximum', '[MASK]', 'for', 'each', '[MASK]', 'of', 'pet.', 'List', 'the', 'maximum', '[MASK]', 'and', '[MASK]', '[MASK]']","SELECT max(weight) ,  petType FROM pets GROUP BY petType","['pets', 'petType', 'weight']","[('pets', '')]","['petType', 'weight']","group,select,from,max",False,['max'],0.5,1.0
6246,6246,"Find the name, type, and flag of the ship that is built in the most recent year.",Find the [MASK] [MASK] and [MASK] of the [MASK] that is [MASK] in the most recent [MASK],"['Find', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'that', 'is', '[MASK]', 'in', 'the', 'most', 'recent', '[MASK]']","SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1","['ship', 'built_year', 'TYPE', 'flag', 'name']","[('ship', '')]","['built_year', 'TYPE', 'flag', 'name']","limit,order,select,desc,from",False,"['as', 'join', 'limit', 'order', 'desc', 'where']",1.0,0.5
3347,3347,What are the maximum and minimum number of silver medals for clubs.,What are the maximum and minimum number of [MASK] medals for [MASK],"['What', 'are', 'the', 'maximum', 'and', 'minimum', 'number', 'of', '[MASK]', 'medals', 'for', '[MASK]']","SELECT max(Silver) ,  min(Silver) FROM club_rank","['club_rank', 'Silver']","[('club_rank', '')]",['Silver'],"select,min,from,max",False,['avg'],0.0,0.0
5389,5389,Which problems were reported before the date of any problem reported by the staff Lysanne Turcotte? Give me the ids of the problems.,Which [MASK] were [MASK] before the [MASK] of any [MASK] [MASK] [MASK] the [MASK] [MASK] [MASK] Give me the [MASK] of the [MASK],"['Which', '[MASK]', 'were', '[MASK]', 'before', 'the', '[MASK]', 'of', 'any', '[MASK]', '[MASK]', '[MASK]', 'the', '[MASK]', '[MASK]', '[MASK]', 'Give', 'me', 'the', '[MASK]', 'of', 'the', '[MASK]']","SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = ""Lysanne"" AND T4.staff_last_name = ""Turcotte"" )","['problems', 'staff', 'staff', 'problems', 'staff_id', 'Lysanne', 'problem_id', 'Turcotte', 'staff_first_name', 'staff_last_name', 'reported_by_staff_id', 'date_problem_reported']","[('problems', 'T3'), ('staff', 'T4'), ('staff', 'T2'), ('problems', 'T1')]","['staff_id', 'Lysanne', 'problem_id', 'Turcotte', 'staff_first_name', 'staff_last_name', 'reported_by_staff_id', 'date_problem_reported']","min,as,join,from,and,select,where",True,"['where', 'as', 'join', 'and']",0.8,1.0
2848,2848,Find the names of customers who are not living in the state of California.,Find the [MASK] of [MASK] who are not living in the [MASK] of California.,"['Find', 'the', '[MASK]', 'of', '[MASK]', 'who', 'are', 'not', 'living', 'in', 'the', '[MASK]', 'of', 'California.']",SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California',"['addresses', 'customers', 'customers', 'customer_addresses', 'customer_id', 'address_id', 'state_province_county', 'customer_name']","[('addresses', 't3'), ('customers', ''), ('customers', 't1'), ('customer_addresses', 't2')]","['customer_id', 'address_id', 'state_province_county', 'customer_name']","as,except,join,where,select,from",True,['where'],0.25,1.0
1377,1377,Give the name of the department with the lowest budget.,Give the [MASK] of the [MASK] with the lowest [MASK],"['Give', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'lowest', '[MASK]']",SELECT dept_name FROM department ORDER BY budget LIMIT 1,"['department', 'budget', 'dept_name']","[('department', '')]","['budget', 'dept_name']","select,limit,order,from",False,"['limit', 'order']",1.0,1.0
6043,6043,Show the game name that has most number of hours played.,Show the [MASK] [MASK] that has most number of [MASK] [MASK],"['Show', 'the', '[MASK]', '[MASK]', 'that', 'has', 'most', 'number', 'of', '[MASK]', '[MASK]']",SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1,"['Plays_games', 'Video_games', 'gname', 'gameid', 'hours_played']","[('Plays_games', 'T1'), ('Video_games', 'T2')]","['gname', 'gameid', 'hours_played']","as,group,join,limit,sum,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc']",0.5714285714285714,0.8
1349,1349,What are the titles of courses without prerequisites?,What are the [MASK] of [MASK] without [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'without', '[MASK]']",SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq),"['course', 'prereq', 'course_id', 'title']","[('course', ''), ('prereq', '')]","['course_id', 'title']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
4592,4592,Show the product type codes that have both products with price higher than 4500 and products with price lower than 3000.,Show the [MASK] [MASK] [MASK] that have both [MASK] with [MASK] higher than 4500 and [MASK] with [MASK] lower than 3000.,"['Show', 'the', '[MASK]', '[MASK]', '[MASK]', 'that', 'have', 'both', '[MASK]', 'with', '[MASK]', 'higher', 'than', '4500', 'and', '[MASK]', 'with', '[MASK]', 'lower', 'than', '3000.']",SELECT Product_Type_Code FROM Products WHERE Product_Price  >  4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price  <  3000,"['Products', 'Product_Price', 'Product_Type_Code']","[('Products', '')]","['Product_Price', 'Product_Type_Code']","intersect,select,from,where",False,"['intersect', 'where']",1.0,1.0
842,842,Count the number of tracks that are part of the rock genre.,Count the number of [MASK] that are [MASK] of the [MASK] [MASK],"['Count', 'the', 'number', 'of', '[MASK]', 'that', 'are', '[MASK]', 'of', 'the', '[MASK]', '[MASK]']","SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""","['GENRE', 'TRACK', 'Name', 'Rock', 'GenreId']","[('GENRE', 'T1'), ('TRACK', 'T2')]","['Name', 'Rock', 'GenreId']","as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",1.0,1.0
1968,1968,How many different product types are there?,How many different [MASK] [MASK] are there?,"['How', 'many', 'different', '[MASK]', '[MASK]', 'are', 'there?']",SELECT count(DISTINCT product_type_code) FROM products_for_hire,"['products_for_hire', 'product_type_code']","[('products_for_hire', '')]",['product_type_code'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
70,70,How many students are attending English courses?,How many [MASK] are [MASK] [MASK] [MASK],"['How', 'many', '[MASK]', 'are', '[MASK]', '[MASK]', '[MASK]']","SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""English""","['student_course_attendance', 'courses', 'course_id', 'English', 'course_name']","[('student_course_attendance', 'T2'), ('courses', 'T1')]","['course_id', 'English', 'course_name']","as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",1.0,1.0
4562,4562,"For each company, return the company name and the name of the building its office is located in.",For each [MASK] return the [MASK] [MASK] and the [MASK] of the [MASK] its [MASK] is [MASK] in.,"['For', 'each', '[MASK]', 'return', 'the', '[MASK]', '[MASK]', 'and', 'the', '[MASK]', 'of', 'the', '[MASK]', 'its', '[MASK]', 'is', '[MASK]', 'in.']","SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id","['Companies', 'Office_locations', 'buildings', 'company_id', 'building_id', 'id', 'name']","[('Companies', 'T3'), ('Office_locations', 'T1'), ('buildings', 'T2')]","['company_id', 'building_id', 'id', 'name']","select,join,from,as",True,"['as', 'join']",1.0,1.0
1663,1663,How many exhibition are there in year 2005 or after?,How many [MASK] are there in [MASK] 2005 or after?,"['How', 'many', '[MASK]', 'are', 'there', 'in', '[MASK]', '2005', 'or', 'after?']",SELECT count(*) FROM exhibition WHERE YEAR  >=  2005,"['exhibition', 'YEAR']","[('exhibition', '')]",['YEAR'],"select,count,from,where",False,"['where', 'sum']",0.5,0.5
46,46,List the most common type of Status across cities.,List the most common type of [MASK] across cities.,"['List', 'the', 'most', 'common', 'type', 'of', '[MASK]', 'across', 'cities.']",SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1,"['city', 'Status']","[('city', '')]",['Status'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
1163,1163,List each birth place along with the number of people from there.,List each [MASK] [MASK] along with the number of [MASK] from there.,"['List', 'each', '[MASK]', '[MASK]', 'along', 'with', 'the', 'number', 'of', '[MASK]', 'from', 'there.']","SELECT Birth_Place ,  COUNT(*) FROM people GROUP BY Birth_Place","['people', 'Birth_Place']","[('people', '')]",['Birth_Place'],"select,count,from,group",False,"['group', 'count']",1.0,1.0
4493,4493,Show the names of members and the locations of colleges they go to in ascending alphabetical order of member names.,Show the [MASK] of [MASK] and the [MASK] of [MASK] they go to in ascending alphabetical order of [MASK] [MASK],"['Show', 'the', '[MASK]', 'of', '[MASK]', 'and', 'the', '[MASK]', 'of', '[MASK]', 'they', 'go', 'to', 'in', 'ascending', 'alphabetical', 'order', 'of', '[MASK]', '[MASK]']","SELECT T2.Name ,  T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID ORDER BY T2.Name ASC","['college', 'member', 'Name', 'College_ID', 'College_Location']","[('college', 'T1'), ('member', 'T2')]","['Name', 'College_ID', 'College_Location']","asc,as,join,order,select,from",True,"['asc', 'as', 'join', 'order']",1.0,1.0
2873,2873,"What is the name of the institution the author ""Katsuhiro Ueno"" belongs to?",What is the [MASK] of the [MASK] the [MASK] [MASK] [MASK] belongs to?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'the', '[MASK]', '[MASK]', '[MASK]', 'belongs', 'to?']","SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  ""Katsuhiro"" AND t1.lname  =  ""Ueno""","['inst', 'authors', 'authorship', 'Katsuhiro', 'Ueno', 'authid', 'name', 'instid', 'lname', 'fname']","[('inst', 't3'), ('authors', 't1'), ('authorship', 't2')]","['Katsuhiro', 'Ueno', 'authid', 'name', 'instid', 'lname', 'fname']","distinct,as,join,and,where,select,from",True,['where'],0.2,1.0
5763,5763,What are the first and last names of all students who are living in a dorm with a TV Lounge?,What are the first and last [MASK] of all [MASK] who are living [MASK] a [MASK] with a TV Lounge?,"['What', 'are', 'the', 'first', 'and', 'last', '[MASK]', 'of', 'all', '[MASK]', 'who', 'are', 'living', '[MASK]', 'a', '[MASK]', 'with', 'a', 'TV', 'Lounge?']","SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')","['student', 'lives_in', 'has_amenity', 'dorm_amenity', 'amenity_name', 'lname', 'fname', 'dormid', 'amenid', 'stuid']","[('student', 'T1'), ('lives_in', 'T2'), ('has_amenity', 'T3'), ('dorm_amenity', 'T4')]","['amenity_name', 'lname', 'fname', 'dormid', 'amenid', 'stuid']","as,in,join,from,select,where",True,"['as', 'in', 'join', 'not', 'where']",1.0,0.8
2931,2931,Give the districts which have two or more addresses.,Give the [MASK] which have two or more [MASK],"['Give', 'the', '[MASK]', 'which', 'have', 'two', 'or', 'more', '[MASK]']",SELECT district FROM address GROUP BY district HAVING count(*)  >=  2,"['address', 'district']","[('address', '')]",['district'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
784,784,"What are the names and dates of races, and the names of the tracks where they are held?",What are the [MASK] and [MASK] of [MASK] and the [MASK] of the [MASK] where they are held?,"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'and', 'the', '[MASK]', 'of', 'the', '[MASK]', 'where', 'they', 'are', 'held?']","SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id","['track', 'race', 'track_id', 'date', 'name']","[('track', 'T2'), ('race', 'T1')]","['track_id', 'date', 'name']","select,join,from,as",True,"['join', 'as']",1.0,1.0
5659,5659,Show the names of customers who have both an order in completed status and an order in part status.,Show the [MASK] of [MASK] who have both an [MASK] in completed [MASK] and an [MASK] in [MASK] [MASK],"['Show', 'the', '[MASK]', 'of', '[MASK]', 'who', 'have', 'both', 'an', '[MASK]', 'in', 'completed', '[MASK]', 'and', 'an', '[MASK]', 'in', '[MASK]', '[MASK]']",SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Completed' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Part',"['customer_orders', 'customers', 'customer_id', 'order_status_code', 'customer_name']","[('customer_orders', 'T2'), ('customers', 'T1')]","['customer_id', 'order_status_code', 'customer_name']","intersect,as,join,from,select,where",True,"['intersect', 'where']",0.5,1.0
4797,4797,How many aircrafts are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM aircraft,['aircraft'],"[('aircraft', '')]",[],"select,count,from",False,['count'],1.0,1.0
422,422,What are the ids of all employees that don't have certificates?,What are the [MASK] of all [MASK] that don't have [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]', 'that', ""don't"", 'have', '[MASK]']",SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate,"['Certificate', 'Employee', 'eid']","[('Certificate', ''), ('Employee', '')]",['eid'],"select,except,from",False,"['where', 'in', 'not']",0.0,0.0
5271,5271,How many songs appear in studio albums?,How many [MASK] appear in [MASK] [MASK],"['How', 'many', '[MASK]', 'appear', 'in', '[MASK]', '[MASK]']","SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.type  =  ""Studio""","['songs', 'tracklists', 'albums', 'albumid', 'title', 'Studio', 'aid', 'type', 'songid']","[('songs', 'T3'), ('tracklists', 'T2'), ('albums', 'T1')]","['albumid', 'title', 'Studio', 'aid', 'type', 'songid']","distinct,as,join,count,where,select,from",True,"['count', 'where']",0.4,1.0
924,924,"Which customers have used both the service named ""Close a policy"" and the service named ""Upgrade a policy""? Give me the customer names.","Which [MASK] have used both the [MASK] [MASK] [MASK] a [MASK] and the [MASK] [MASK] ""Upgrade a [MASK] Give me the [MASK] [MASK]","['Which', '[MASK]', 'have', 'used', 'both', 'the', '[MASK]', '[MASK]', '[MASK]', 'a', '[MASK]', 'and', 'the', '[MASK]', '[MASK]', '""Upgrade', 'a', '[MASK]', 'Give', 'me', 'the', '[MASK]', '[MASK]']","SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  ""Close a policy"" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  ""New policy application""","['services', 'customers', 'first_notification_of_loss', 'New policy application', 'service_id', 'service_name', 'customer_name', 'Close a policy', 'customer_id']","[('services', 't3'), ('customers', 't1'), ('first_notification_of_loss', 't2')]","['New policy application', 'service_id', 'service_name', 'customer_name', 'Close a policy', 'customer_id']","intersect,as,join,from,select,where",True,"['as', 'join', 'where', 'distinct']",0.75,0.75
925,925,"Find the IDs of customers whose name contains ""Diana"".",Find the IDs of [MASK] whose [MASK] contains [MASK],"['Find', 'the', 'IDs', 'of', '[MASK]', 'whose', '[MASK]', 'contains', '[MASK]']","SELECT customer_id FROM customers WHERE customer_name LIKE ""%Diana%""","['customers', 'customer_id', '%Diana%', 'customer_name']","[('customers', '')]","['customer_id', '%Diana%', 'customer_name']","select,like,from,where",False,"['like', 'where']",1.0,1.0
1694,1694,Find the highest rank of all reviews.,Find the highest [MASK] of all [MASK],"['Find', 'the', 'highest', '[MASK]', 'of', 'all', '[MASK]']",SELECT min(rank) FROM review,"['review', 'rank']","[('review', '')]",['rank'],"select,min,from",False,"['as', 'join', 'limit', 'order', 'desc']",0.0,0.0
816,816,Find the different billing countries for all invoices.,Find the different [MASK] [MASK] for all [MASK],"['Find', 'the', 'different', '[MASK]', '[MASK]', 'for', 'all', '[MASK]']",SELECT distinct(BillingCountry) FROM INVOICE,"['INVOICE', 'BillingCountry']","[('INVOICE', '')]",['BillingCountry'],"distinct,select,from",False,[],,
4613,4613,Please show different types of artworks with the corresponding number of artworks of each type.,Please show different [MASK] of [MASK] with the corresponding number of [MASK] of each [MASK],"['Please', 'show', 'different', '[MASK]', 'of', '[MASK]', 'with', 'the', 'corresponding', 'number', 'of', '[MASK]', 'of', 'each', '[MASK]']","SELECT TYPE ,  COUNT(*) FROM artwork GROUP BY TYPE","['artwork', 'TYPE']","[('artwork', '')]",['TYPE'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
864,864,What are the phone numbers for each employee?,What are the [MASK] numbers for each [MASK],"['What', 'are', 'the', '[MASK]', 'numbers', 'for', 'each', '[MASK]']",SELECT Phone FROM EMPLOYEE,"['EMPLOYEE', 'Phone']","[('EMPLOYEE', '')]",['Phone'],"select,from",False,[],,
3604,3604,"What is the shortest and most poorly rated song for each genre, ordered alphabetically by genre?",What [MASK] the shortest and most poorly rated [MASK] for each [MASK] ordered alphabetically by [MASK],"['What', '[MASK]', 'the', 'shortest', 'and', 'most', 'poorly', 'rated', '[MASK]', 'for', 'each', '[MASK]', 'ordered', 'alphabetically', 'by', '[MASK]']","SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is","['song', 'files', 'genre_is', 'f_id', 'duration', 'rating']","[('song', 'T2'), ('files', 'T1')]","['genre_is', 'f_id', 'duration', 'rating']","min,as,group,join,order,select,from",True,"['order', 'min', 'as', 'group', 'join']",1.0,1.0
6204,6204,List the names of roller coasters by ascending order of length.,List the [MASK] of [MASK] [MASK] by ascending order of [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', 'by', 'ascending', 'order', 'of', '[MASK]']",SELECT Name FROM roller_coaster ORDER BY LENGTH ASC,"['roller_coaster', 'Name', 'LENGTH']","[('roller_coaster', '')]","['Name', 'LENGTH']","select,asc,order,from",False,"['asc', 'order']",1.0,1.0
7293,7293,Which district has both stores with less than 3000 products and stores with more than 10000 products?,Which [MASK] has both stores with less than 3000 [MASK] and stores with more than 10000 [MASK],"['Which', '[MASK]', 'has', 'both', 'stores', 'with', 'less', 'than', '3000', '[MASK]', 'and', 'stores', 'with', 'more', 'than', '10000', '[MASK]']",SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,"['shop', 'district', 'Number_products']","[('shop', '')]","['district', 'Number_products']","intersect,select,from,where",False,"['where', 'count']",0.5,0.5
7155,7155,What is the horsepower of the car with the largest accelerate?,What is the [MASK] of the [MASK] with the largest [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'largest', '[MASK]']",SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,"['CARS_DATA', 'accelerate', 'horsepower']","[('CARS_DATA', 'T1')]","['accelerate', 'horsepower']","as,limit,order,select,desc,from",False,"['limit', 'order', 'desc']",0.75,1.0
2120,2120,What is the mail date of the document with id 7?,What is the [MASK] [MASK] of the [MASK] with [MASK] 7?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'with', '[MASK]', '7?']",SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7;,"['Documents_Mailed', 'document_id', 'mailing_date']","[('Documents_Mailed', '')]","['document_id', 'mailing_date']","select,from,where",False,['where'],1.0,1.0
3066,3066,Find the name of bank branch that provided the greatest total amount of loans.,Find the [MASK] of [MASK] [MASK] that provided the greatest total [MASK] of [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', 'that', 'provided', 'the', 'greatest', 'total', '[MASK]', 'of', '[MASK]']",SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1,"['bank', 'loan', 'branch_id', 'amount', 'bname']","[('bank', 'T1'), ('loan', 'T2')]","['branch_id', 'amount', 'bname']","as,group,join,limit,sum,order,select,desc,from",True,"['limit', 'order', 'desc']",0.42857142857142855,1.0
6618,6618,Show station names without any trains.,Show [MASK] [MASK] without any [MASK],"['Show', '[MASK]', '[MASK]', 'without', 'any', '[MASK]']",SELECT name FROM station WHERE station_id NOT IN (SELECT station_id FROM train_station),"['train_station', 'station', 'station_id', 'name']","[('train_station', ''), ('station', '')]","['station_id', 'name']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
5693,5693,What are the names of all the dorms that don't have any amenities?,What are the [MASK] of all the [MASK] that don't have any [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', 'that', ""don't"", 'have', 'any', '[MASK]']",SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity),"['dorm', 'has_amenity', 'dormid', 'dorm_name']","[('dorm', ''), ('has_amenity', '')]","['dormid', 'dorm_name']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
5195,5195,What is the label with the most albums?,What is the [MASK] with the most [MASK],"['What', 'is', 'the', '[MASK]', 'with', 'the', 'most', '[MASK]']",SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1,"['albums', 'label']","[('albums', '')]",['label'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
2083,2083,How many pilots are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM pilot,['pilot'],"[('pilot', '')]",[],"select,count,from",False,['count'],1.0,1.0
2406,2406,List all people names in the order of their date of birth from old to young.,List all [MASK] [MASK] in the order [MASK] their [MASK] [MASK] [MASK] from old to young.,"['List', 'all', '[MASK]', '[MASK]', 'in', 'the', 'order', '[MASK]', 'their', '[MASK]', '[MASK]', '[MASK]', 'from', 'old', 'to', 'young.']",SELECT name FROM people ORDER BY date_of_birth,"['people', 'date_of_birth', 'name']","[('people', '')]","['date_of_birth', 'name']","select,order,from",False,"['order', 'desc']",1.0,0.5
6982,6982,"Show all movie titles, years, and directors, ordered by budget.",Show all [MASK] [MASK] [MASK] and [MASK] ordered by [MASK],"['Show', 'all', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'ordered', 'by', '[MASK]']","SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million","['movie', 'budget_million', 'director', 'YEAR', 'title']","[('movie', '')]","['budget_million', 'director', 'YEAR', 'title']","select,order,from",False,['order'],1.0,1.0
1458,1458,Find the name and salary of instructors whose salary is below the average salary of the instructors in the Physics department.,Find the [MASK] and [MASK] of [MASK] whose [MASK] is below the average [MASK] of the [MASK] in the Physics [MASK],"['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', 'is', 'below', 'the', 'average', '[MASK]', 'of', 'the', '[MASK]', 'in', 'the', 'Physics', '[MASK]']","SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')","['instructor', 'salary', 'dept_name', 'name']","[('instructor', '')]","['salary', 'dept_name', 'name']","select,avg,from,where",False,"['avg', 'where']",1.0,1.0
1716,1716,Find the names of users who did not leave any review.,Find the [MASK] of [MASK] who did not leave any [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', 'who', 'did', 'not', 'leave', 'any', '[MASK]']",SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review),"['review', 'useracct', 'u_id', 'name']","[('review', ''), ('useracct', '')]","['u_id', 'name']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
3967,3967,"Tell me the highest, lowest, and average cost of procedures.","Tell me the highest, lowest, and average [MASK] of [MASK]","['Tell', 'me', 'the', 'highest,', 'lowest,', 'and', 'average', '[MASK]', 'of', '[MASK]']","SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures","['procedures', 'cost']","[('procedures', '')]",['cost'],"min,avg,select,from,max",False,"['min', 'avg', 'max']",1.0,1.0
3927,3927,Find the name of the nurse who has the largest number of appointments.,Find the [MASK] of the [MASK] who has the largest number of [MASK],"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'has', 'the', 'largest', 'number', 'of', '[MASK]']",SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1,"['nurse', 'appointment', 'employeeid', 'prepnurse', 'name']","[('nurse', 'T1'), ('appointment', 'T2')]","['employeeid', 'prepnurse', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['limit', 'order', 'desc', 'group', 'count']",0.7142857142857143,1.0
1378,1378,List the names and buildings of all departments sorted by the budget from large to small.,List the [MASK] and [MASK] of all [MASK] sorted by the [MASK] from large to small.,"['List', 'the', '[MASK]', 'and', '[MASK]', 'of', 'all', '[MASK]', 'sorted', 'by', 'the', '[MASK]', 'from', 'large', 'to', 'small.']","SELECT dept_name ,  building FROM department ORDER BY budget DESC","['department', 'budget', 'building', 'dept_name']","[('department', '')]","['budget', 'building', 'dept_name']","select,order,desc,from",False,"['order', 'desc']",1.0,1.0
6940,6940,What are the names of the customers who have made two or less orders?,What are the [MASK] of the [MASK] who have made two or less [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'have', 'made', 'two', 'or', 'less', '[MASK]']",SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2,"['customers', 'orders', 'customer_id', 'customer_name']","[('customers', 'T2'), ('orders', 'T1')]","['customer_id', 'customer_name']","as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'count', 'having']",1.0,1.0
988,988,Return the highest acc percent across all basketball matches.,Return the highest [MASK] [MASK] across all [MASK] [MASK],"['Return', 'the', 'highest', '[MASK]', '[MASK]', 'across', 'all', '[MASK]', '[MASK]']",SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1,"['basketball_match', 'acc_percent']","[('basketball_match', '')]",['acc_percent'],"limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
5213,5213,"How many different instruments are used in the song ""Le Pop""?","How many different [MASK] are used in the [MASK] ""Le Pop""?","['How', 'many', 'different', '[MASK]', 'are', 'used', 'in', 'the', '[MASK]', '""Le', 'Pop""?']","SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Le Pop""","['songs', 'instruments', 'songid', 'instrument', 'title', 'Le Pop']","[('songs', 'T2'), ('instruments', 'T1')]","['songid', 'instrument', 'title', 'Le Pop']","distinct,as,join,count,where,select,from",True,"['as', 'join', 'where']",0.6,1.0
4024,4024,List the name of ships that are not involved in any mission,List the [MASK] of [MASK] that are not involved in any [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'that', 'are', 'not', 'involved', 'in', 'any', '[MASK]']",SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission),"['ship', 'mission', 'Name', 'Ship_ID']","[('ship', ''), ('mission', '')]","['Name', 'Ship_ID']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
2077,2077,What is the name of member in charge of greatest number of events?,What is the [MASK] of [MASK] [MASK] [MASK] of greatest [MASK] of [MASK],"['What', 'is', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', '[MASK]', 'of', 'greatest', '[MASK]', 'of', '[MASK]']",SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1,"['member', 'party_events', 'member_in_charge_id', 'member_id', 'member_name']","[('member', 'T1'), ('party_events', 'T2')]","['member_in_charge_id', 'member_id', 'member_name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'limit', 'order', 'desc']",0.5714285714285714,1.0
268,268,List the name of musicals that do not have actors.,List the [MASK] of [MASK] that do not have [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'that', 'do', 'not', 'have', '[MASK]']",SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor),"['actor', 'musical', 'Name', 'Musical_ID']","[('actor', ''), ('musical', '')]","['Name', 'Musical_ID']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
5828,5828,Show the most common college of authors of submissions.,Show the most common [MASK] of authors of [MASK],"['Show', 'the', 'most', 'common', '[MASK]', 'of', 'authors', 'of', '[MASK]']",SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1,"['submission', 'College']","[('submission', '')]",['College'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
7353,7353,What are the distinct template type descriptions for the templates ever used by any document?,What are the distinct [MASK] [MASK] [MASK] for the [MASK] ever used by any [MASK],"['What', 'are', 'the', 'distinct', '[MASK]', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', 'ever', 'used', 'by', 'any', '[MASK]']",SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,"['Ref_template_types', 'Templates', 'Documents', 'Template_ID', 'template_type_code', 'template_type_description', 'template_ID']","[('Ref_template_types', 'T1'), ('Templates', 'T2'), ('Documents', 'T3')]","['Template_ID', 'template_type_code', 'template_type_description', 'template_ID']","distinct,as,join,select,from",True,['distinct'],0.3333333333333333,1.0
1483,1483,What are the distinct salaries of all instructors who earned less than the maximum salary?,What are the distinct [MASK] of all [MASK] who earned less than the maximum [MASK],"['What', 'are', 'the', 'distinct', '[MASK]', 'of', 'all', '[MASK]', 'who', 'earned', 'less', 'than', 'the', 'maximum', '[MASK]']",SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor),"['instructor', 'salary']","[('instructor', '')]",['salary'],"distinct,where,select,from,max",False,['where'],0.3333333333333333,1.0
7256,7256,How many flights land in Aberdeen or Abilene?,How many [MASK] land in [MASK] or [MASK],"['How', 'many', '[MASK]', 'land', 'in', '[MASK]', 'or', '[MASK]']","SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""","['Flights', 'Airports', 'AirportCode', 'city', 'DestAirport', 'Abilene', 'Aberdeen']","[('Flights', 'T1'), ('Airports', 'T2')]","['AirportCode', 'city', 'DestAirport', 'Abilene', 'Aberdeen']","as,join,count,where,or,select,from",True,['count'],0.2,1.0
7163,7163,How many cars has over 6 cylinders?,How many [MASK] has over 6 [MASK],"['How', 'many', '[MASK]', 'has', 'over', '6', '[MASK]']",SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;,"['CARS_DATA', 'Cylinders']","[('CARS_DATA', '')]",['Cylinders'],"select,count,from,where",False,"['count', 'distinct']",0.5,0.5
188,188,What are the ids of the trips that lasted the longest and how long did they last?,What are the [MASK] of the [MASK] that lasted the longest and how long did they last?,"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'lasted', 'the', 'longest', 'and', 'how', 'long', 'did', 'they', 'last?']","SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3","['trip', 'duration', 'id']","[('trip', '')]","['duration', 'id']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
6414,6414,Return the id of the project that has the fewest corresponding documents.,Return the [MASK] of the [MASK] that has the fewest corresponding [MASK],"['Return', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'has', 'the', 'fewest', 'corresponding', '[MASK]']",SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1,"['Documents', 'project_id']","[('Documents', '')]",['project_id'],"asc,group,limit,count,order,select,from",False,"['group', 'limit', 'count', 'order']",0.8,1.0
284,284,Find the name and email of the users who have more than 1000 followers.,Find the [MASK] and [MASK] of the [MASK] who have more than 1000 [MASK],"['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'who', 'have', 'more', 'than', '1000', '[MASK]']","SELECT name ,  email FROM user_profiles WHERE followers  >  1000","['user_profiles', 'followers', 'email', 'name']","[('user_profiles', '')]","['followers', 'email', 'name']","select,from,where",False,"['as', 'group', 'join', 'count', 'having']",0.0,0.0
7308,7308,Count the number of documents that use the PPT template type.,Count the number of [MASK] that use the PPT [MASK] [MASK],"['Count', 'the', 'number', 'of', '[MASK]', 'that', 'use', 'the', 'PPT', '[MASK]', '[MASK]']",SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',"['Documents', 'Templates', 'Template_Type_Code', 'Template_ID']","[('Documents', 'T1'), ('Templates', 'T2')]","['Template_Type_Code', 'Template_ID']","as,join,count,where,select,from",True,"['count', 'as', 'join', 'where']",1.0,1.0
4439,4439,What is the name and age of every male? Order the results by age.,What is the [MASK] and [MASK] of every male? Order the results by age.,"['What', 'is', 'the', '[MASK]', 'and', '[MASK]', 'of', 'every', 'male?', 'Order', 'the', 'results', 'by', 'age.']",SELECT name FROM Person WHERE gender  =  'male' ORDER BY age,"['Person', 'age', 'gender', 'name']","[('Person', '')]","['age', 'gender', 'name']","select,order,from,where",False,"['asc', 'order']",0.5,0.5
3605,3605,Find the names and number of works of all artists who have at least one English songs.,Find the [MASK] and number of works of all [MASK] who have at least one [MASK] [MASK],"['Find', 'the', '[MASK]', 'and', 'number', 'of', 'works', 'of', 'all', '[MASK]', 'who', 'have', 'at', 'least', 'one', '[MASK]', '[MASK]']","SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""english"" GROUP BY T2.artist_name HAVING count(*)  >=  1","['song', 'artist', 'english', 'languages', 'artist_name']","[('song', 'T2'), ('artist', 'T1')]","['english', 'languages', 'artist_name']","as,group,join,count,having,where,select,from",True,"['count', 'as', 'join']",0.5,1.0
4103,4103,Show the most common headquarter for companies.,Show the most common [MASK] for [MASK],"['Show', 'the', 'most', 'common', '[MASK]', 'for', '[MASK]']",SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT(*) DESC LIMIT 1,"['company', 'Headquarters']","[('company', '')]",['Headquarters'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
759,759,What are distinct locations where tracks are located?,What are distinct [MASK] where [MASK] are [MASK],"['What', 'are', 'distinct', '[MASK]', 'where', '[MASK]', 'are', '[MASK]']",SELECT DISTINCT LOCATION FROM track,"['track', 'LOCATION']","[('track', '')]",['LOCATION'],"distinct,select,from",False,['distinct'],1.0,1.0
2061,2061,Show all party names and their region names.,Show all [MASK] [MASK] and their [MASK] [MASK],"['Show', 'all', '[MASK]', '[MASK]', 'and', 'their', '[MASK]', '[MASK]']","SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id","['region', 'party', 'region_id', 'region_name', 'party_name']","[('region', 'T2'), ('party', 'T1')]","['region_id', 'region_name', 'party_name']","select,join,from,as",True,[],,
3948,3948,Find the patient who has the most recent undergoing treatment?,Find the [MASK] who has the most recent [MASK] [MASK],"['Find', 'the', '[MASK]', 'who', 'has', 'the', 'most', 'recent', '[MASK]', '[MASK]']",SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1,"['undergoes', 'patient', 'dateundergoes']","[('undergoes', '')]","['patient', 'dateundergoes']","select,limit,order,from",False,"['as', 'join', 'where', 'max']",0.0,0.0
7294,7294,Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.,Find the [MASK] in which there are both [MASK] selling less than 3000 [MASK] and [MASK] selling more than 10000 [MASK],"['Find', 'the', '[MASK]', 'in', 'which', 'there', 'are', 'both', '[MASK]', 'selling', 'less', 'than', '3000', '[MASK]', 'and', '[MASK]', 'selling', 'more', 'than', '10000', '[MASK]']",SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,"['shop', 'district', 'Number_products']","[('shop', '')]","['district', 'Number_products']","intersect,select,from,where",False,"['intersect', 'where']",1.0,1.0
6359,6359,Show the school name and driver name for all school buses.,Show the [MASK] [MASK] and [MASK] [MASK] for all [MASK] buses.,"['Show', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'all', '[MASK]', 'buses.']","SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id","['driver', 'school_bus', 'school', 'school', 'driver_id', 'school_id', 'name']","[('driver', 'T3'), ('school_bus', 'T1'), ('school', 'T2')]","['school', 'driver_id', 'school_id', 'name']","select,join,from,as",True,[],,
2157,2157,Find the names of all races held in 2017.,Find the [MASK] of all [MASK] held in 2017.,"['Find', 'the', '[MASK]', 'of', 'all', '[MASK]', 'held', 'in', '2017.']",SELECT name FROM races WHERE YEAR = 2017,"['races', 'YEAR', 'name']","[('races', '')]","['YEAR', 'name']","select,from,where",False,"['and', 'where']",1.0,0.5
8006,8006,"List the name of singers whose citizenship is not ""France"".",List the [MASK] of [MASK] whose [MASK] is not [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', 'is', 'not', '[MASK]']","SELECT Name FROM singer WHERE Citizenship != ""France""","['singer', 'Name', 'Citizenship', 'France']","[('singer', '')]","['Name', 'Citizenship', 'France']","select,from,where",False,['where'],1.0,1.0
5192,5192,How many unique labels are there for albums?,How many unique [MASK] are there for [MASK],"['How', 'many', 'unique', '[MASK]', 'are', 'there', 'for', '[MASK]']",SELECT count(DISTINCT label) FROM albums,"['albums', 'label']","[('albums', '')]",['label'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
54,54,"Show the census ranking of cities whose status are not ""Village"".",Show the [MASK] [MASK] of [MASK] whose [MASK] are not [MASK],"['Show', 'the', '[MASK]', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', 'are', 'not', '[MASK]']","SELECT Census_Ranking FROM city WHERE Status !=  ""Village""","['city', 'Census_Ranking', 'Status', 'Village']","[('city', '')]","['Census_Ranking', 'Status', 'Village']","select,from,where",False,['where'],1.0,1.0
7019,7019,What is the name and capacity for the stadium with the highest average attendance?,What is the [MASK] and [MASK] for the [MASK] with the highest [MASK] attendance?,"['What', 'is', 'the', '[MASK]', 'and', '[MASK]', 'for', 'the', '[MASK]', 'with', 'the', 'highest', '[MASK]', 'attendance?']","SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","['stadium', 'capacity', 'average', 'name']","[('stadium', '')]","['capacity', 'average', 'name']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
6909,6909,"Find the names of the customers who have order status both ""On Road"" and ""Shipped"".","Find the [MASK] of the [MASK] who have [MASK] [MASK] both ""On [MASK] and [MASK]","['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'have', '[MASK]', '[MASK]', 'both', '""On', '[MASK]', 'and', '[MASK]']","SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""On Road"" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""Shipped""","['orders', 'customers', 'order_status', 'customer_name', 'Shipped', 'customer_id', 'On Road']","[('orders', 'T2'), ('customers', 'T1')]","['order_status', 'customer_name', 'Shipped', 'customer_id', 'On Road']","intersect,as,join,from,select,where",True,"['intersect', 'as', 'join', 'where']",1.0,1.0
6041,6041,Show all student ids and the number of hours played.,Show all [MASK] [MASK] and the number of [MASK] [MASK],"['Show', 'all', '[MASK]', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', '[MASK]']","SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid","['Plays_games', 'Stuid', 'hours_played']","[('Plays_games', '')]","['Stuid', 'hours_played']","select,sum,from,group",False,"['count', 'group']",0.5,0.5
7412,7412,"Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.","Find the [MASK] [MASK] the [MASK] whose [MASK] [MASK] is higher than 4, and order the results by the [MASK] from high to low.","['Find', 'the', '[MASK]', '[MASK]', 'the', '[MASK]', 'whose', '[MASK]', '[MASK]', 'is', 'higher', 'than', '4,', 'and', 'order', 'the', 'results', 'by', 'the', '[MASK]', 'from', 'high', 'to', 'low.']",SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC,"['visitor', 'Level_of_membership', 'name']","[('visitor', '')]","['Level_of_membership', 'name']","order,where,select,desc,from",False,['where'],0.3333333333333333,1.0
5147,5147,Find the order dates of the orders with price above 1000.,Find the [MASK] [MASK] of the [MASK] with [MASK] above 1000.,"['Find', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'with', '[MASK]', 'above', '1000.']",SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000,"['Customer_Orders', 'ORDER_ITEMS', 'Products', 'Order_Date', 'Order_ID', 'Product_ID', 'Product_price']","[('Customer_Orders', 'T1'), ('ORDER_ITEMS', 'T2'), ('Products', 'T3')]","['Order_Date', 'Order_ID', 'Product_ID', 'Product_price']","as,join,from,select,where",True,"['intersect', 'as', 'join', 'where']",1.0,0.75
6964,6964,"show the titles, and authors or editors for all books made after the year 1989.",show the [MASK] and [MASK] [MASK] [MASK] for all [MASK] made after the [MASK] 1989.,"['show', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', '[MASK]', 'for', 'all', '[MASK]', 'made', 'after', 'the', '[MASK]', '1989.']","SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989","['book_club', 'book_title', 'author_or_editor', 'YEAR']","[('book_club', '')]","['book_title', 'author_or_editor', 'YEAR']","select,from,where",False,['where'],1.0,1.0
2278,2278,Return the weight of the shortest person.,Return the [MASK] of the shortest person.,"['Return', 'the', '[MASK]', 'of', 'the', 'shortest', 'person.']",SELECT Weight FROM people ORDER BY Height ASC LIMIT 1,"['people', 'Weight', 'Height']","[('people', '')]","['Weight', 'Height']","asc,limit,order,select,from",False,"['limit', 'order']",0.6666666666666666,1.0
6750,6750,Who is the advisor of Linda Smith? Give me the first name and last name.,Who is the [MASK] of [MASK] [MASK] Give me the first [MASK] and last [MASK],"['Who', 'is', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', 'Give', 'me', 'the', 'first', '[MASK]', 'and', 'last', '[MASK]']","SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  ""Linda"" AND T2.lname  =  ""Smith""","['Student', 'Faculty', 'advisor', 'Smith', 'FacID', 'lname', 'fname', 'Linda']","[('Student', 'T2'), ('Faculty', 'T1')]","['advisor', 'Smith', 'FacID', 'lname', 'fname', 'Linda']","as,join,from,and,select,where",True,"['as', 'join', 'and', 'where']",1.0,1.0
2554,2554,Show the name of cities in the county that has the largest number of police officers.,Show the [MASK] of [MASK] in the [MASK] that has the largest number of [MASK] [MASK],"['Show', 'the', '[MASK]', 'of', '[MASK]', 'in', 'the', '[MASK]', 'that', 'has', 'the', 'largest', 'number', 'of', '[MASK]', '[MASK]']",SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1),"['county_public_safety', 'city', 'Police_officers', 'county_ID', 'name']","[('county_public_safety', ''), ('city', '')]","['Police_officers', 'county_ID', 'name']","limit,order,where,select,desc,from",False,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",0.75,0.42857142857142855
6559,6559,List the names of all distinct wines in alphabetical order.,List the [MASK] of all distinct [MASK] in alphabetical order.,"['List', 'the', '[MASK]', 'of', 'all', 'distinct', '[MASK]', 'in', 'alphabetical', 'order.']",SELECT DISTINCT Name FROM WINE ORDER BY Name,"['WINE', 'Name']","[('WINE', '')]",['Name'],"distinct,select,order,from",False,"['distinct', 'order']",1.0,1.0
3124,3124,Find the last names of teachers who are not involved in any detention.,Find the [MASK] [MASK] of [MASK] who are not involved in any [MASK],"['Find', 'the', '[MASK]', '[MASK]', 'of', '[MASK]', 'who', 'are', 'not', 'involved', 'in', 'any', '[MASK]']",SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id  =  T2.teacher_id,"['Detention', 'Teachers', 'Teachers', 'teacher_id', 'last_name']","[('Detention', 'T2'), ('Teachers', ''), ('Teachers', 'T1')]","['teacher_id', 'last_name']","as,except,join,select,from",True,"['where', 'except']",0.3333333333333333,0.5
6636,6636,How many staff have the first name Ludie?,How many [MASK] have the [MASK] [MASK] [MASK],"['How', 'many', '[MASK]', 'have', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT count(*) FROM Staff WHERE first_name = ""Ludie"";","['Staff', 'Ludie', 'first_name']","[('Staff', '')]","['Ludie', 'first_name']","select,count,from,where",False,"['count', 'where']",1.0,1.0
7251,7251,"What are flight numbers of flights departing from City ""Aberdeen ""?","What are [MASK] numbers of [MASK] [MASK] from [MASK] [MASK] ""?","['What', 'are', '[MASK]', 'numbers', 'of', '[MASK]', '[MASK]', 'from', '[MASK]', '[MASK]', '""?']","SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","['FLIGHTS', 'AIRPORTS', 'AirportCode', 'FlightNo', 'SourceAirport', 'Aberdeen', 'City']","[('FLIGHTS', 'T1'), ('AIRPORTS', 'T2')]","['AirportCode', 'FlightNo', 'SourceAirport', 'Aberdeen', 'City']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
5743,5743,What are the first names of all students in Smith Hall?,What are the first [MASK] of all [MASK] [MASK] Smith Hall?,"['What', 'are', 'the', 'first', '[MASK]', 'of', 'all', '[MASK]', '[MASK]', 'Smith', 'Hall?']",SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall',"['student', 'dorm', 'lives_in', 'fname', 'dormid', 'dorm_name', 'stuid']","[('student', 'T1'), ('dorm', 'T3'), ('lives_in', 'T2')]","['fname', 'dormid', 'dorm_name', 'stuid']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
4977,4977,What information do you have on colleges sorted by increasing enrollment numbers?,What information do you have on [MASK] sorted by increasing [MASK] numbers?,"['What', 'information', 'do', 'you', 'have', 'on', '[MASK]', 'sorted', 'by', 'increasing', '[MASK]', 'numbers?']",SELECT * FROM College ORDER BY enr,"['College', 'enr']","[('College', '')]",['enr'],"select,order,from",False,['order'],1.0,1.0
1779,1779,Count the number of accounts.,[MASK] the number of [MASK],"['[MASK]', 'the', 'number', 'of', '[MASK]']",SELECT count(*) FROM accounts,['accounts'],"[('accounts', '')]",[],"select,count,from",False,['count'],1.0,1.0
1610,1610,Return the order ids and details for orderes with two or more invoices.,Return the [MASK] [MASK] and [MASK] for [MASK] with two or more [MASK],"['Return', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'for', '[MASK]', 'with', 'two', 'or', 'more', '[MASK]']","SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2","['Invoices', 'Orders', 'order_details', 'order_id']","[('Invoices', 'T1'), ('Orders', 'T2')]","['order_details', 'order_id']","as,group,join,count,having,select,from",True,"['as', 'join', 'where']",0.4,0.6666666666666666
2011,2011,Show headquarters with at least two companies in the banking industry.,Show [MASK] with at least two [MASK] in the banking [MASK],"['Show', '[MASK]', 'with', 'at', 'least', 'two', '[MASK]', 'in', 'the', 'banking', '[MASK]']",SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2,"['company', 'main_industry', 'headquarters']","[('company', '')]","['main_industry', 'headquarters']","group,count,having,where,select,from",False,"['as', 'group', 'join', 'count', 'having']",0.75,0.6
375,375,Show the name of employees with three lowest salaries.,Show the [MASK] of [MASK] with three lowest [MASK],"['Show', 'the', '[MASK]', 'of', '[MASK]', 'with', 'three', 'lowest', '[MASK]']",SELECT name FROM Employee ORDER BY salary ASC LIMIT 3,"['Employee', 'salary', 'name']","[('Employee', '')]","['salary', 'name']","asc,limit,order,select,from",False,"['limit', 'order', 'asc']",1.0,1.0
4039,4039,Find the grade taught in classroom 103.,Find the [MASK] taught in [MASK] 103.,"['Find', 'the', '[MASK]', 'taught', 'in', '[MASK]', '103.']",SELECT DISTINCT grade FROM list WHERE classroom  =  103,"['list', 'classroom', 'grade']","[('list', '')]","['classroom', 'grade']","distinct,select,from,where",False,"['as', 'join', 'where']",0.5,0.3333333333333333
1582,1582,Count the number of financial transactions that the account with the name 337 has.,[MASK] the number of [MASK] [MASK] that the [MASK] with the [MASK] [MASK] has.,"['[MASK]', 'the', 'number', 'of', '[MASK]', '[MASK]', 'that', 'the', '[MASK]', 'with', 'the', '[MASK]', '[MASK]', 'has.']","SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  ""337""","['Financial_transactions', 'Accounts', 'account_id', '337', 'account_name']","[('Financial_transactions', 'T1'), ('Accounts', 'T2')]","['account_id', '337', 'account_name']","as,join,count,where,select,from",True,['count'],0.25,1.0
2244,2244,What is the starting year for the oldest technician?,What is the [MASK] [MASK] for the oldest [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'for', 'the', 'oldest', '[MASK]']",SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1,"['technician', 'Age', 'Starting_Year']","[('technician', '')]","['Age', 'Starting_Year']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
5897,5897,Show the average price range of hotels that have 5 star ratings and allow pets.,Show the average [MASK] [MASK] of [MASK] that have [MASK] [MASK] [MASK] and [MASK] pets.,"['Show', 'the', 'average', '[MASK]', '[MASK]', 'of', '[MASK]', 'that', 'have', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'pets.']","SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  ""5"" AND pets_allowed_yn  =  1","['HOTELS', 'star_rating_code', 'pets_allowed_yn', 'price_range', '5']","[('HOTELS', '')]","['star_rating_code', 'pets_allowed_yn', 'price_range', '5']","from,and,avg,select,where",False,"['where', 'avg']",0.6666666666666666,1.0
7517,7517,How many departments offer any degree?,How many [MASK] offer any [MASK],"['How', 'many', '[MASK]', 'offer', 'any', '[MASK]']",SELECT count(DISTINCT department_id) FROM Degree_Programs,"['Degree_Programs', 'department_id']","[('Degree_Programs', '')]",['department_id'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
5432,5432,Show all city with a branch opened in 2001 and a branch with more than 100 membership.,Show all [MASK] with a [MASK] [MASK] in 2001 and a [MASK] with more than 100 [MASK],"['Show', 'all', '[MASK]', 'with', 'a', '[MASK]', '[MASK]', 'in', '2001', 'and', 'a', '[MASK]', 'with', 'more', 'than', '100', '[MASK]']",SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100,"['branch', 'city', 'open_year', 'membership_amount']","[('branch', '')]","['city', 'open_year', 'membership_amount']","select,and,from,where",False,['where'],0.5,1.0
6127,6127,Who made the latest order?,Who made the latest [MASK],"['Who', 'made', 'the', 'latest', '[MASK]']",SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1,"['customers', 'customer_orders', 'customer_id', 'order_date', 'customer_name']","[('customers', 't1'), ('customer_orders', 't2')]","['customer_id', 'order_date', 'customer_name']","as,join,limit,order,select,desc,from",True,"['limit', 'order', 'desc']",0.6,1.0
1662,1662,Return the name of the artist who has the latest join year.,Return the [MASK] of the [MASK] who has the latest [MASK] [MASK],"['Return', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'has', 'the', 'latest', '[MASK]', '[MASK]']",SELECT name FROM artist ORDER BY year_join DESC LIMIT 1,"['artist', 'year_join', 'name']","[('artist', '')]","['year_join', 'name']","limit,order,select,desc,from",False,"['limit', 'order', 'desc', 'as', 'join']",1.0,0.6
5905,5905,How many distinct names are associated with all the photos?,How many distinct [MASK] are associated with all the [MASK],"['How', 'many', 'distinct', '[MASK]', 'are', 'associated', 'with', 'all', 'the', '[MASK]']",SELECT count(DISTINCT Name) FROM PHOTOS,"['PHOTOS', 'Name']","[('PHOTOS', '')]",['Name'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
4160,4160,How many calendar items do we have?,How many [MASK] items do we have?,"['How', 'many', '[MASK]', 'items', 'do', 'we', 'have?']",SELECT count(*) FROM Ref_calendar,['Ref_calendar'],"[('Ref_calendar', '')]",[],"select,count,from",False,['count'],1.0,1.0
5306,5306,Find the total revenue of companies of each founder.,Find the total [MASK] of companies of each [MASK],"['Find', 'the', 'total', '[MASK]', 'of', 'companies', 'of', 'each', '[MASK]']","SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder","['manufacturers', 'revenue', 'founder']","[('manufacturers', '')]","['revenue', 'founder']","select,sum,from,group",False,"['as', 'group', 'join', 'sum']",1.0,0.5
5189,5189,"What are the first and last names of the artist who perfomed the song ""Badlands""?",What are the [MASK] and [MASK] [MASK] of the artist who [MASK] the [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', 'artist', 'who', '[MASK]', 'the', '[MASK]', '[MASK]']","SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Badlands""","['Performance', 'Songs', 'Band', 'Badlands', 'bandmate', 'Title', 'firstname', 'lastname', 'SongId', 'id']","[('Performance', 'T1'), ('Songs', 'T3'), ('Band', 'T2')]","['Badlands', 'bandmate', 'Title', 'firstname', 'lastname', 'SongId', 'id']","as,join,from,select,where",True,"['as', 'join', 'where', 'and']",1.0,0.75
3671,3671,What is the number of wins the team Boston Red Stockings got in the postseasons each year in history?,What is the number of wins the [MASK] Boston Red Stockings got in the [MASK] each [MASK] in history?,"['What', 'is', 'the', 'number', 'of', 'wins', 'the', '[MASK]', 'Boston', 'Red', 'Stockings', 'got', 'in', 'the', '[MASK]', 'each', '[MASK]', 'in', 'history?']","SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' GROUP BY T1.year","['postseason', 'team', 'name', 'team_id_br', 'year', 'team_id_winner']","[('postseason', 'T1'), ('team', 'T2')]","['name', 'team_id_br', 'year', 'team_id_winner']","as,group,join,count,where,select,from",True,"['as', 'union', 'join', 'count', 'where']",0.8,0.8
3167,3167,Find names and times of trains that run through stations for the local authority Chiltern.,Find [MASK] and [MASK] of [MASK] that run through [MASK] for the [MASK] [MASK] [MASK],"['Find', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'that', 'run', 'through', '[MASK]', 'for', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT t3.name ,  t3.time FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  ""Chiltern""","['route', 'station', 'train', 'time', 'train_id', 'local_authority', 'station_id', 'name', 'Chiltern', 'id']","[('route', 't2'), ('station', 't1'), ('train', 't3')]","['time', 'train_id', 'local_authority', 'station_id', 'name', 'Chiltern', 'id']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
6472,6472,What is the total number of hours for all projects?,What is the total number of [MASK] for all [MASK],"['What', 'is', 'the', 'total', 'number', 'of', '[MASK]', 'for', 'all', '[MASK]']",SELECT sum(hours) FROM projects,"['projects', 'hours']","[('projects', '')]",['hours'],"select,sum,from",False,['sum'],1.0,1.0
847,847,"How many customers have email that contains ""gmail.com""?",How many [MASK] have [MASK] that contains [MASK],"['How', 'many', '[MASK]', 'have', '[MASK]', 'that', 'contains', '[MASK]']","SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE ""%gmail.com%""","['CUSTOMER', 'Email', '%gmail.com%']","[('CUSTOMER', '')]","['Email', '%gmail.com%']","like,count,where,select,from",False,"['count', 'where']",0.6666666666666666,1.0
6523,6523,List the grapes and appelations of all wines.,List the [MASK] and [MASK] of all [MASK],"['List', 'the', '[MASK]', 'and', '[MASK]', 'of', 'all', '[MASK]']","SELECT Grape ,  Appelation FROM WINE","['WINE', 'Grape', 'Appelation']","[('WINE', '')]","['Grape', 'Appelation']","select,from",False,[],,
3339,3339,List the distinct region of clubs in ascending alphabetical order.,List the distinct [MASK] of [MASK] in ascending alphabetical order.,"['List', 'the', 'distinct', '[MASK]', 'of', '[MASK]', 'in', 'ascending', 'alphabetical', 'order.']",SELECT DISTINCT Region FROM club ORDER BY Region ASC,"['club', 'Region']","[('club', '')]",['Region'],"distinct,asc,order,select,from",False,"['order', 'asc']",0.6666666666666666,1.0
845,845,"What is the first name and last name of the customer that has email ""luisg@embraer.com.br""?",What is the [MASK] [MASK] and [MASK] [MASK] of the [MASK] that has [MASK] [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'that', 'has', '[MASK]', '[MASK]']","SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  ""luisg@embraer.com.br""","['CUSTOMER', 'LastName', 'Email', 'FirstName', 'luisg@embraer.com.br']","[('CUSTOMER', '')]","['LastName', 'Email', 'FirstName', 'luisg@embraer.com.br']","select,from,where",False,['where'],1.0,1.0
5582,5582,"What is the product category description and unit of measurement of category ""Herbs""?",What is the [MASK] [MASK] [MASK] and [MASK] [MASK] [MASK] [MASK] [MASK] [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  ""Herbs""","['ref_product_categories', 'product_category_description', 'product_category_code', 'unit_of_measure', 'Herbs']","[('ref_product_categories', '')]","['product_category_description', 'product_category_code', 'unit_of_measure', 'Herbs']","select,from,where",False,['where'],1.0,1.0
4778,4778,What are the distinct names of customers who have purchased a keyboard?,What are the distinct [MASK] of [MASK] who have purchased a [MASK],"['What', 'are', 'the', 'distinct', '[MASK]', 'of', '[MASK]', 'who', 'have', 'purchased', 'a', '[MASK]']","SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  ""keyboard""","['customer_orders', 'order_items', 'customers', 'products', 'keyboard', 'customer_name', 'customer_id', 'product_id', 'product_name', 'order_id']","[('customer_orders', 'T2'), ('order_items', 'T3'), ('customers', 'T1'), ('products', 'T4')]","['keyboard', 'customer_name', 'customer_id', 'product_id', 'product_name', 'order_id']","distinct,as,join,where,select,from",True,"['distinct', 'as', 'join', 'where']",1.0,1.0
4648,4648,"How many students have had at least one ""B"" grade?","How many [MASK] have had at least one ""B"" [MASK]","['How', 'many', '[MASK]', 'have', 'had', 'at', 'least', 'one', '""B""', '[MASK]']","SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  ""B""","['ENROLLED_IN', 'StuID', 'Grade', 'B']","[('ENROLLED_IN', '')]","['StuID', 'Grade', 'B']","distinct,count,where,select,from",False,"['distinct', 'count']",0.6666666666666666,1.0
4234,4234,What are the names of the employees who authorised the destruction and the employees who destroyed the corresponding documents?,What are the [MASK] of the [MASK] who [MASK] the [MASK] and the [MASK] who [MASK] the corresponding [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', '[MASK]', 'the', '[MASK]', 'and', 'the', '[MASK]', 'who', '[MASK]', 'the', 'corresponding', '[MASK]']","SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;","['Employees', 'Documents_to_be_destroyed', 'Employees', 'Destroyed_by_Employee_ID', 'employee_id', 'employee_name', 'Destruction_Authorised_by_Employee_ID']","[('Employees', 'T2'), ('Documents_to_be_destroyed', 'T1'), ('Employees', 'T3')]","['Destroyed_by_Employee_ID', 'employee_id', 'employee_name', 'Destruction_Authorised_by_Employee_ID']","select,join,from,as",True,"['as', 'join', 'where']",1.0,0.6666666666666666
5557,5557,Count the number of different characteristic names the product 'cumin' has.,Count the number of different [MASK] [MASK] the [MASK] 'cumin' has.,"['Count', 'the', 'number', 'of', 'different', '[MASK]', '[MASK]', 'the', '[MASK]', ""'cumin'"", 'has.']","SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""sesame""","['CHARACTERISTICS', 'products', 'product_characteristics', 'characteristic_name', 'sesame', 'characteristic_id', 'product_id', 'product_name']","[('CHARACTERISTICS', 't3'), ('products', 't1'), ('product_characteristics', 't2')]","['characteristic_name', 'sesame', 'characteristic_id', 'product_id', 'product_name']","distinct,as,join,count,where,select,from",True,"['distinct', 'as', 'join', 'count', 'where']",1.0,1.0
6501,6501,Find the SSN and name of scientists who are assigned to the project with the longest hours.,Find the SSN and [MASK] of [MASK] who are [MASK] to the [MASK] with the longest [MASK],"['Find', 'the', 'SSN', 'and', '[MASK]', 'of', '[MASK]', 'who', 'are', '[MASK]', 'to', 'the', '[MASK]', 'with', 'the', 'longest', '[MASK]']","SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)","['projects', 'scientists', 'projects', 'assignedto', 'ssn', 'project', 'name', 'hours', 'code', 'scientist', 'SSN']","[('projects', ''), ('scientists', 'T3'), ('projects', 'T2'), ('assignedto', 'T1')]","['ssn', 'project', 'name', 'hours', 'code', 'scientist', 'SSN']","as,join,from,select,where,max",True,"['limit', 'order', 'desc', 'as', 'group', 'join', 'count']",0.5,0.2857142857142857
483,483,"Show the minimum, average, and maximum age of all students.","Show the minimum, average, and maximum [MASK] of all [MASK]","['Show', 'the', 'minimum,', 'average,', 'and', 'maximum', '[MASK]', 'of', 'all', '[MASK]']","SELECT min(age) ,  avg(age) ,  max(age) FROM Student","['Student', 'age']","[('Student', '')]",['age'],"min,avg,select,from,max",False,"['min', 'avg', 'max']",1.0,1.0
235,235,Count the number of actors.,Count the number of [MASK],"['Count', 'the', 'number', 'of', '[MASK]']",SELECT count(*) FROM actor,['actor'],"[('actor', '')]",[],"select,count,from",False,['count'],1.0,1.0
6309,6309,"What are the first, middle, and last names of all individuals, ordered by last name?",What are the [MASK] [MASK] and [MASK] [MASK] of all [MASK] ordered by [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'all', '[MASK]', 'ordered', 'by', '[MASK]', '[MASK]']","SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name","['individuals', 'individual_first_name', 'individual_middle_name', 'individual_last_name']","[('individuals', '')]","['individual_first_name', 'individual_middle_name', 'individual_last_name']","select,order,from",False,['order'],1.0,1.0
5907,5907,What are the distinct visit dates?,What are the distinct [MASK] [MASK],"['What', 'are', 'the', 'distinct', '[MASK]', '[MASK]']",SELECT DISTINCT Visit_Date FROM VISITS,"['VISITS', 'Visit_Date']","[('VISITS', '')]",['Visit_Date'],"distinct,select,from",False,['distinct'],1.0,1.0
3623,3623,"List the duration, file size and format of songs whose genre is pop, ordered by title?","List the [MASK] [MASK] [MASK] and [MASK] of [MASK] whose [MASK] [MASK] pop, ordered by title?","['List', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', '[MASK]', 'pop,', 'ordered', 'by', 'title?']","SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  ""pop"" ORDER BY T2.song_name","['song', 'files', 'formats', 'song_name', 'genre_is', 'duration', 'file_size', 'pop', 'f_id']","[('song', 'T2'), ('files', 'T1')]","['formats', 'song_name', 'genre_is', 'duration', 'file_size', 'pop', 'f_id']","as,join,from,order,select,where",True,['order'],0.25,1.0
3704,3704,Which states have more than 2 parks?,Which [MASK] have more than 2 [MASK],"['Which', '[MASK]', 'have', 'more', 'than', '2', '[MASK]']",SELECT state FROM park GROUP BY state HAVING count(*)  >  2;,"['park', 'state']","[('park', '')]",['state'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
3452,3452,What are department ids for departments with managers managing more than 3 employees?,What are [MASK] [MASK] for [MASK] with [MASK] [MASK] more than 3 [MASK],"['What', 'are', '[MASK]', '[MASK]', 'for', '[MASK]', 'with', '[MASK]', '[MASK]', 'more', 'than', '3', '[MASK]']","SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4","['employees', 'employee_id', 'department_id', 'manager_id']","[('employees', '')]","['employee_id', 'department_id', 'manager_id']","distinct,group,count,having,select,from",False,"['group', 'count', 'having']",0.75,1.0
6100,6100,"Return the the ""active to date"" of the latest contact channel used by the customer named ""Tillman Ernser"".",Return the the [MASK] [MASK] [MASK] of the latest [MASK] [MASK] used by the [MASK] [MASK] [MASK] [MASK],"['Return', 'the', 'the', '[MASK]', '[MASK]', '[MASK]', 'of', 'the', 'latest', '[MASK]', '[MASK]', 'used', 'by', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  ""Tillman Ernser""","['customers', 'customer_contact_channels', 'customer_id', 'active_to_date', 'Tillman Ernser', 'customer_name']","[('customers', 't1'), ('customer_contact_channels', 't2')]","['customer_id', 'active_to_date', 'Tillman Ernser', 'customer_name']","as,join,where,select,from,max",True,"['as', 'join', 'limit', 'order', 'desc', 'where']",0.75,0.5
5867,5867,Show the maximum and minimum share count of different transaction types.,Show the maximum and minimum [MASK] [MASK] of different [MASK] [MASK],"['Show', 'the', 'maximum', 'and', 'minimum', '[MASK]', '[MASK]', 'of', 'different', '[MASK]', '[MASK]']","SELECT transaction_type_code ,  max(share_count) ,  min(share_count) FROM TRANSACTIONS GROUP BY transaction_type_code","['TRANSACTIONS', 'transaction_type_code', 'share_count']","[('TRANSACTIONS', '')]","['transaction_type_code', 'share_count']","min,group,select,from,max",False,"['min', 'max']",0.6666666666666666,1.0
6490,6490,What are the names of projects that require between 100 and 300 hours?,What are the [MASK] of [MASK] that require between 100 and 300 [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'that', 'require', 'between', '100', 'and', '300', '[MASK]']",SELECT name FROM projects WHERE hours BETWEEN 100 AND 300,"['projects', 'hours', 'name']","[('projects', '')]","['hours', 'name']","and,between,where,select,from",False,"['and', 'between', 'where']",1.0,1.0
7158,7158,"For a volvo model, how many cylinders does the version with least accelerate have?",For a volvo [MASK] how many [MASK] does the version with least [MASK] have?,"['For', 'a', 'volvo', '[MASK]', 'how', 'many', '[MASK]', 'does', 'the', 'version', 'with', 'least', '[MASK]', 'have?']",SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,"['CARS_DATA', 'CAR_NAMES', 'Model', 'cylinders', 'accelerate', 'Id', 'MakeId']","[('CARS_DATA', 'T1'), ('CAR_NAMES', 'T2')]","['Model', 'cylinders', 'accelerate', 'Id', 'MakeId']","asc,as,join,limit,from,order,select,where",True,"['asc', 'as', 'join', 'limit', 'order', 'where']",1.0,1.0
2432,2432,List all info about all people.,List all info about all [MASK],"['List', 'all', 'info', 'about', 'all', '[MASK]']",SELECT * FROM people,['people'],"[('people', '')]",[],"select,from",False,[],,
1124,1124,What is the name of the highest mountain?,What is the [MASK] of the highest [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', 'highest', '[MASK]']",SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1,"['mountain', 'Name', 'Height']","[('mountain', '')]","['Name', 'Height']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
2638,2638,Return the name and number of reservations made for each of the rooms.,Return the [MASK] and number of [MASK] made for each of the [MASK],"['Return', 'the', '[MASK]', 'and', 'number', 'of', '[MASK]', 'made', 'for', 'each', 'of', 'the', '[MASK]']","SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room","['Reservations', 'Rooms', 'RoomId', 'roomName', 'Room']","[('Reservations', 'T1'), ('Rooms', 'T2')]","['RoomId', 'roomName', 'Room']","as,group,join,count,select,from",True,"['group', 'count']",0.5,1.0
4790,4790,"What are the names and genders of staff who have held the title Sales Person, but never Clerical Staff?",What are the [MASK] and [MASK] of [MASK] who have held the [MASK] [MASK] [MASK] but never [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'who', 'have', 'held', 'the', '[MASK]', '[MASK]', '[MASK]', 'but', 'never', '[MASK]', '[MASK]']","SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  ""Sales Person"" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  ""Clerical Staff""","['staff', 'Staff_Department_Assignments', 'staff_id', 'staff_name', 'staff_gender', 'Sales Person', 'job_title_code', 'Clerical Staff']","[('staff', 'T1'), ('Staff_Department_Assignments', 'T2')]","['staff_id', 'staff_name', 'staff_gender', 'Sales Person', 'job_title_code', 'Clerical Staff']","as,except,join,from,select,where",True,"['as', 'except', 'join']",0.75,1.0
5040,5040,Find names of colleges with enrollment greater than that of some (at least one) college in the FL state.,Find [MASK] of [MASK] with [MASK] greater than that of some (at least one) [MASK] in the FL [MASK],"['Find', '[MASK]', 'of', '[MASK]', 'with', '[MASK]', 'greater', 'than', 'that', 'of', 'some', '(at', 'least', 'one)', '[MASK]', 'in', 'the', 'FL', '[MASK]']",SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL'),"['college', 'state', 'enr', 'cName']","[('college', '')]","['state', 'enr', 'cName']","distinct,min,where,select,from",False,['where'],0.3333333333333333,1.0
1356,1356,How many rooms whose capacity is less than 50 does the Lamberton building have?,How many [MASK] whose [MASK] is less than 50 does the Lamberton [MASK] have?,"['How', 'many', '[MASK]', 'whose', '[MASK]', 'is', 'less', 'than', '50', 'does', 'the', 'Lamberton', '[MASK]', 'have?']",SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50,"['classroom', 'capacity', 'building']","[('classroom', '')]","['capacity', 'building']","count,and,where,select,from",False,"['count', 'where']",0.6666666666666666,1.0
2223,2223,What are the maximum fastest lap speed in races held after 2004 grouped by race name and ordered by year?,What are the maximum [MASK] lap [MASK] in [MASK] held after 2004 grouped by [MASK] [MASK] and ordered by [MASK],"['What', 'are', 'the', 'maximum', '[MASK]', 'lap', '[MASK]', 'in', '[MASK]', 'held', 'after', '2004', 'grouped', 'by', '[MASK]', '[MASK]', 'and', 'ordered', 'by', '[MASK]']","SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year","['results', 'races', 'raceid', 'fastestlapspeed', 'year', 'name']","[('results', 'T2'), ('races', 'T1')]","['raceid', 'fastestlapspeed', 'year', 'name']","as,group,join,order,where,select,from,max",True,"['as', 'group', 'join', 'order', 'where', 'avg']",0.8333333333333334,0.8333333333333334
5726,5726,Find the number and average age of students living in each city.,Find the number and average [MASK] of [MASK] living in each [MASK],"['Find', 'the', 'number', 'and', 'average', '[MASK]', 'of', '[MASK]', 'living', 'in', 'each', '[MASK]']","SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code","['student', 'age', 'city_code']","[('student', '')]","['age', 'city_code']","group,count,avg,select,from",False,"['group', 'avg']",0.6666666666666666,1.0
7236,7236,Which airlines have a flight with destination airport AHD?,Which [MASK] have a [MASK] with [MASK] [MASK] AHD?,"['Which', '[MASK]', 'have', 'a', '[MASK]', 'with', '[MASK]', '[MASK]', 'AHD?']","SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""","['AIRLINES', 'FLIGHTS', 'AHD', 'Airline', 'DestAirport', 'uid']","[('AIRLINES', 'T1'), ('FLIGHTS', 'T2')]","['AHD', 'Airline', 'DestAirport', 'uid']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
2483,2483,What are the names of all the reviewers and movie names?,What are the [MASK] of all the [MASK] and [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', 'and', '[MASK]', '[MASK]']",SELECT name FROM Reviewer UNION SELECT title FROM Movie,"['Movie', 'Reviewer', 'title', 'name']","[('Movie', ''), ('Reviewer', '')]","['title', 'name']","select,from,union",False,[],,
822,822,"Find the number of albums by the artist ""Metallica"".",Find the number of [MASK] by the [MASK] [MASK],"['Find', 'the', 'number', 'of', '[MASK]', 'by', 'the', '[MASK]', '[MASK]']","SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  ""Metallica""","['ARTIST', 'ALBUM', 'Name', 'ArtistId', 'Metallica']","[('ARTIST', 'T2'), ('ALBUM', 'T1')]","['Name', 'ArtistId', 'Metallica']","as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",1.0,1.0
556,556,What are the titles of all albums that start with A in alphabetical order?,What are the [MASK] of all [MASK] that start with A in alphabetical order?,"['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]', 'that', 'start', 'with', 'A', 'in', 'alphabetical', 'order?']",SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;,"['albums', 'title']","[('albums', '')]",['title'],"like,order,where,select,from",False,['order'],0.3333333333333333,1.0
1282,1282,What are the id and name of the stadium where the most injury accidents happened?,What are the [MASK] and [MASK] of the [MASK] where the most [MASK] [MASK] happened?,"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'where', 'the', 'most', '[MASK]', '[MASK]', 'happened?']","SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1","['game', 'stadium', 'injury_accident', 'name', 'game_id', 'stadium_id', 'id']","[('game', 'T2'), ('stadium', 'T1'), ('injury_accident', 'T3')]","['name', 'game_id', 'stadium_id', 'id']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
3722,3722,How many camera lenses are not used in taking any photos?,How many [MASK] [MASK] are not used in taking any [MASK],"['How', 'many', '[MASK]', '[MASK]', 'are', 'not', 'used', 'in', 'taking', 'any', '[MASK]']",SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos ),"['photos', 'camera_lens', 'camera_lens_id', 'id']","[('photos', ''), ('camera_lens', '')]","['camera_lens_id', 'id']","where,in,count,not,select,from",False,"['where', 'in', 'count', 'not']",1.0,1.0
4470,4470,What is the age of the friend of Zach with longest year relationship?,What is the [MASK] of the [MASK] of Zach with longest [MASK] relationship?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'of', 'Zach', 'with', 'longest', '[MASK]', 'relationship?']",SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach'),"['Person', 'PersonFriend', 'PersonFriend', 'friend', 'YEAR', 'name', 'age', 'year']","[('Person', 'T1'), ('PersonFriend', 'T2'), ('PersonFriend', '')]","['friend', 'YEAR', 'name', 'age', 'year']","as,join,from,and,select,where,max",True,"['and', 'where', 'max']",0.6,1.0
823,823,"Which artist does the album ""Balls to the Wall"" belong to?",Which [MASK] does the [MASK] [MASK] to the [MASK] belong to?,"['Which', '[MASK]', 'does', 'the', '[MASK]', '[MASK]', 'to', 'the', '[MASK]', 'belong', 'to?']","SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  ""Balls to the Wall""","['ARTIST', 'ALBUM', 'Name', 'ArtistId', 'Balls to the Wall', 'Title']","[('ARTIST', 'T2'), ('ALBUM', 'T1')]","['Name', 'ArtistId', 'Balls to the Wall', 'Title']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
7707,7707,How much surface area do the countires in the Carribean cover together?,How much [MASK] [MASK] do the [MASK] in the [MASK] cover together?,"['How', 'much', '[MASK]', '[MASK]', 'do', 'the', '[MASK]', 'in', 'the', '[MASK]', 'cover', 'together?']","SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""","['country', 'Region', 'Caribbean', 'SurfaceArea']","[('country', '')]","['Region', 'Caribbean', 'SurfaceArea']","select,sum,from,where",False,['count'],0.0,0.0
2850,2850,Find the names and phone numbers of customers living in California state.,Find the [MASK] and [MASK] numbers of [MASK] living in California [MASK],"['Find', 'the', '[MASK]', 'and', '[MASK]', 'numbers', 'of', '[MASK]', 'living', 'in', 'California', '[MASK]']","SELECT t1.customer_name ,  t1.customer_phone FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'","['addresses', 'customers', 'customer_addresses', 'address_id', 'customer_name', 'customer_id', 'state_province_county', 'customer_phone']","[('addresses', 't3'), ('customers', 't1'), ('customer_addresses', 't2')]","['address_id', 'customer_name', 'customer_id', 'state_province_county', 'customer_phone']","as,join,from,select,where",True,"['count', 'where', 'as', 'join']",1.0,0.75
5818,5818,What are the authors of submissions and their colleges?,What are the [MASK] of [MASK] and their [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'and', 'their', '[MASK]']","SELECT Author ,  College FROM submission","['submission', 'College', 'Author']","[('submission', '')]","['College', 'Author']","select,from",False,"['join', 'as']",,
4178,4178,"What is the document type name for the document with name ""How to read a book""?","What is the [MASK] [MASK] [MASK] for the [MASK] with [MASK] ""How to [MASK] a [MASK]","['What', 'is', 'the', '[MASK]', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', 'with', '[MASK]', '""How', 'to', '[MASK]', 'a', '[MASK]']","SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  ""How to read a book""","['Ref_document_types', 'All_documents', 'How to read a book', 'document_name', 'document_type_name', 'document_type_code']","[('Ref_document_types', 'T2'), ('All_documents', 'T1')]","['How to read a book', 'document_name', 'document_type_name', 'document_type_code']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
3261,3261,Find the first names and offices of all professors sorted by alphabetical order of their first name.,Find the first [MASK] and [MASK] of all [MASK] sorted by alphabetical order of their first [MASK],"['Find', 'the', 'first', '[MASK]', 'and', '[MASK]', 'of', 'all', '[MASK]', 'sorted', 'by', 'alphabetical', 'order', 'of', 'their', 'first', '[MASK]']","SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname","['employee', 'professor', 'emp_fname', 'prof_office', 'emp_num']","[('employee', 'T2'), ('professor', 'T1')]","['emp_fname', 'prof_office', 'emp_num']","as,join,order,select,from",True,['order'],0.3333333333333333,1.0
5181,5181,Count the number of songs.,Count the number of [MASK],"['Count', 'the', 'number', 'of', '[MASK]']",SELECT count(*) FROM Songs,['Songs'],"[('Songs', '')]",[],"select,count,from",False,['count'],1.0,1.0
4533,4533,Find the description of the most popular role among the users that have logged in.,Find the [MASK] of the most popular [MASK] among the [MASK] that have logged in.,"['Find', 'the', '[MASK]', 'of', 'the', 'most', 'popular', '[MASK]', 'among', 'the', '[MASK]', 'that', 'have', 'logged', 'in.']",SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1),"['ROLES', 'users', 'role_code', 'role_description', 'user_login']","[('ROLES', ''), ('users', '')]","['role_code', 'role_description', 'user_login']","group,limit,count,order,where,select,desc,from",False,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc', 'where']",1.0,0.75
6696,6696,List all payment methods and number of payments using each payment methods.,List all [MASK] [MASK] and number of [MASK] using each [MASK] [MASK],"['List', 'all', '[MASK]', '[MASK]', 'and', 'number', 'of', '[MASK]', 'using', 'each', '[MASK]', '[MASK]']","SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;","['Customer_Payments', 'payment_method_code']","[('Customer_Payments', '')]",['payment_method_code'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
4639,4639,List all names of courses with 1 credit?,List all [MASK] of [MASK] with 1 [MASK],"['List', 'all', '[MASK]', 'of', '[MASK]', 'with', '1', '[MASK]']",SELECT CName FROM COURSE WHERE Credits  =  1,"['COURSE', 'Credits', 'CName']","[('COURSE', '')]","['Credits', 'CName']","select,from,where",False,"['join', 'where', 'as']",1.0,0.3333333333333333
7883,7883,How many friends does each student have?,How many [MASK] does each [MASK] have?,"['How', 'many', '[MASK]', 'does', 'each', '[MASK]', 'have?']","SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","['Friend', 'student_id']","[('Friend', '')]",['student_id'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
7067,7067,Find the type and weight of the youngest pet.,Find the [MASK] and [MASK] of the youngest pet.,"['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', 'youngest', 'pet.']","SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","['pets', 'pettype', 'pet_age', 'weight']","[('pets', '')]","['pettype', 'pet_age', 'weight']","select,limit,order,from",False,"['limit', 'order']",1.0,1.0
5204,5204,"What instrument did the musician with last name ""Heilo"" use in the song ""Le Pop""?","What [MASK] did the musician with [MASK] [MASK] [MASK] use in the [MASK] ""Le Pop""?","['What', '[MASK]', 'did', 'the', 'musician', 'with', '[MASK]', '[MASK]', '[MASK]', 'use', 'in', 'the', '[MASK]', '""Le', 'Pop""?']","SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo"" AND T3.title  =  ""Le Pop""","['Performance', 'Songs', 'Instruments', 'Band', 'bandmate', 'Heilo', 'title', 'lastname', 'SongId', 'id', 'songid', 'bandmateid', 'instrument', 'Le Pop']","[('Performance', 'T1'), ('Songs', 'T3'), ('Instruments', 'T4'), ('Band', 'T2')]","['bandmate', 'Heilo', 'title', 'lastname', 'SongId', 'id', 'songid', 'bandmateid', 'instrument', 'Le Pop']","as,join,and,where,select,from",True,"['as', 'join', 'where']",0.75,1.0
5664,5664,"Show the customer name, customer address city, date from, and date to for each customer address history.",Show the [MASK] [MASK] [MASK] [MASK] [MASK] [MASK] [MASK] and [MASK] [MASK] for each [MASK] [MASK] [MASK],"['Show', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'each', '[MASK]', '[MASK]', '[MASK]']","SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id","['customer_address_history', 'addresses', 'customers', 'city', 'date_to', 'date_from', 'address_id', 'customer_name', 'customer_id']","[('customer_address_history', 'T1'), ('addresses', 'T3'), ('customers', 'T2')]","['city', 'date_to', 'date_from', 'address_id', 'customer_name', 'customer_id']","select,join,from,as",True,['where'],0.0,0.0
1844,1844,How many wrestlers are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM wrestler,['wrestler'],"[('wrestler', '')]",[],"select,count,from",False,['count'],1.0,1.0
5491,5491,"What is the average age of students who have city code ""NYC"" and have secretary votes for the spring election cycle?","What is the average [MASK] of [MASK] who have [MASK] [MASK] ""NYC"" and have [MASK] [MASK] for the [MASK] [MASK] [MASK]","['What', 'is', 'the', 'average', '[MASK]', 'of', '[MASK]', 'who', 'have', '[MASK]', '[MASK]', '""NYC""', 'and', 'have', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  ""NYC"" AND T2.Election_Cycle  =  ""Spring""","['VOTING_RECORD', 'STUDENT', 'SECRETARY_Vote', 'city_code', 'Age', 'StuID', 'Spring', 'Election_Cycle', 'NYC']","[('VOTING_RECORD', 'T2'), ('STUDENT', 'T1')]","['SECRETARY_Vote', 'city_code', 'Age', 'StuID', 'Spring', 'Election_Cycle', 'NYC']","where,as,join,and,avg,select,from",True,"['as', 'join', 'avg', 'where']",0.8,1.0
1251,1251,Sort the apartment numbers in ascending order of room count.,Sort the [MASK] [MASK] in ascending order of [MASK] [MASK],"['Sort', 'the', '[MASK]', '[MASK]', 'in', 'ascending', 'order', 'of', '[MASK]', '[MASK]']",SELECT apt_number FROM Apartments ORDER BY room_count ASC,"['Apartments', 'apt_number', 'room_count']","[('Apartments', '')]","['apt_number', 'room_count']","select,asc,order,from",False,"['asc', 'order']",1.0,1.0
210,210,How many trips stated from  a station in Mountain View and ended at one in Palo Alto?,How many [MASK] [MASK] from a [MASK] in [MASK] [MASK] and ended at one in [MASK] [MASK],"['How', 'many', '[MASK]', '[MASK]', 'from', 'a', '[MASK]', 'in', '[MASK]', '[MASK]', 'and', 'ended', 'at', 'one', 'in', '[MASK]', '[MASK]']","SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  ""Mountain View"" AND T3.city  =  ""Palo Alto""","['station', 'trip', 'trip', 'station', 'city', 'start_station_id', 'end_station_id', 'id', 'Mountain View', 'Palo Alto']","[('station', 'T1'), ('trip', 'T2'), ('trip', 'T4'), ('station', 'T3')]","['city', 'start_station_id', 'end_station_id', 'id', 'Mountain View', 'Palo Alto']","as,join,count,and,where,select,from",True,"['as', 'join', 'count', 'and', 'where']",1.0,1.0
1531,1531,Find the names of the customers who have an deputy policy.,Find the names of the [MASK] who have an [MASK] [MASK],"['Find', 'the', 'names', 'of', 'the', '[MASK]', 'who', 'have', 'an', '[MASK]', '[MASK]']","SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  ""Deputy""","['customers', 'policies', 'customer_id', 'Deputy', 'policy_type_code', 'customer_details']","[('customers', 't2'), ('policies', 't1')]","['customer_id', 'Deputy', 'policy_type_code', 'customer_details']","distinct,as,join,where,select,from",True,"['distinct', 'as', 'join', 'where']",1.0,1.0
1615,1615,Show all product names and the total quantity ordered for each product name.,Show all [MASK] [MASK] and the total [MASK] [MASK] for each [MASK] [MASK],"['Show', 'all', '[MASK]', '[MASK]', 'and', 'the', 'total', '[MASK]', '[MASK]', 'for', 'each', '[MASK]', '[MASK]']","SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name","['Order_items', 'Products', 'product_quantity', 'product_id', 'product_name']","[('Order_items', 'T1'), ('Products', 'T2')]","['product_quantity', 'product_id', 'product_name']","as,group,join,sum,select,from",True,"['as', 'group', 'join', 'count']",0.75,0.75
3775,3775,What is the address of each course author or tutor?,What is the [MASK] of each [MASK] [MASK] or [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'each', '[MASK]', '[MASK]', 'or', '[MASK]']",SELECT address_line_1 FROM Course_Authors_and_Tutors,"['Course_Authors_and_Tutors', 'address_line_1']","[('Course_Authors_and_Tutors', '')]",['address_line_1'],"select,from",False,[],,
4251,4251,Count the total number of clubs.,Count the total number of [MASK],"['Count', 'the', 'total', 'number', 'of', '[MASK]']",SELECT count(*) FROM club,['club'],"[('club', '')]",[],"select,count,from",False,['count'],1.0,1.0
139,139,"What is the latitude, longitude, city of the station from which the shortest trip started?",What is the [MASK] [MASK] [MASK] of the [MASK] from which the shortest [MASK] [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'from', 'which', 'the', 'shortest', '[MASK]', '[MASK]']","SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1","['station', 'trip', 'city', 'lat', 'long', 'start_station_id', 'duration', 'id']","[('station', 'T1'), ('trip', 'T2')]","['city', 'lat', 'long', 'start_station_id', 'duration', 'id']","as,join,limit,order,select,from",True,"['limit', 'order']",0.5,1.0
4282,4282,"Find the description of the club ""Pen and Paper Gaming"".","Find the [MASK] of the [MASK] ""Pen and [MASK] [MASK]","['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', '""Pen', 'and', '[MASK]', '[MASK]']","SELECT clubdesc FROM club WHERE clubname  =  ""Pen and Paper Gaming""","['club', 'clubdesc', 'clubname', 'Pen and Paper Gaming']","[('club', '')]","['clubdesc', 'clubname', 'Pen and Paper Gaming']","select,and,from,where",False,"['and', 'where']",1.0,1.0
4064,4064,Find the last names of all the teachers that teach GELL TAMI.,Find the [MASK] [MASK] of all the [MASK] that [MASK] [MASK] [MASK],"['Find', 'the', '[MASK]', '[MASK]', 'of', 'all', 'the', '[MASK]', 'that', '[MASK]', '[MASK]', '[MASK]']","SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""GELL"" AND T1.lastname  =  ""TAMI""","['list', 'teachers', 'TAMI', 'firstname', 'classroom', 'lastname', 'GELL']","[('list', 'T1'), ('teachers', 'T2')]","['TAMI', 'firstname', 'classroom', 'lastname', 'GELL']","as,join,from,and,select,where",True,['where'],0.25,1.0
2416,2416,Find the name of the candidates whose oppose percentage is the lowest for each sex.,Find the [MASK] of the [MASK] whose [MASK] percentage is the lowest for each sex.,"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'whose', '[MASK]', 'percentage', 'is', 'the', 'lowest', 'for', 'each', 'sex.']","SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex","['candidate', 'people', 'people_id', 'sex', 'oppose_rate', 'name']","[('candidate', 't2'), ('people', 't1')]","['people_id', 'sex', 'oppose_rate', 'name']","min,as,group,join,select,from",True,['where'],0.0,0.0
2498,2498,What are the movie titles and average rating of the movies with the lowest average rating?,What are the [MASK] [MASK] and average [MASK] of the [MASK] with the lowest average [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', 'average', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'lowest', 'average', '[MASK]']","SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1","['Rating', 'Movie', 'stars', 'mID', 'title']","[('Rating', 'T1'), ('Movie', 'T2')]","['stars', 'mID', 'title']","as,group,join,limit,order,avg,select,from",True,"['as', 'group', 'join', 'limit', 'order', 'avg']",1.0,1.0
2325,2325,What campuses are located in the county of Los Angeles?,What [MASK] are located in the [MASK] of Los [MASK],"['What', '[MASK]', 'are', 'located', 'in', 'the', '[MASK]', 'of', 'Los', '[MASK]']","SELECT campus FROM campuses WHERE county  =  ""Los Angeles""","['campuses', 'Los Angeles', 'campus', 'county']","[('campuses', '')]","['Los Angeles', 'campus', 'county']","select,from,where",False,['where'],1.0,1.0
3370,3370,What are the types of competition that have most 5 competitions for that type?,What are the [MASK] of [MASK] that have most 5 [MASK] for that [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'that', 'have', 'most', '5', '[MASK]', 'for', 'that', '[MASK]']",SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5,"['competition', 'Competition_type']","[('competition', '')]",['Competition_type'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
7405,7405,Show names of teachers and the number of courses they teach.,Show [MASK] of [MASK] and the number of [MASK] they [MASK],"['Show', '[MASK]', 'of', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'they', '[MASK]']","SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","['teacher', 'course_arrange', 'Name', 'Teacher_ID']","[('teacher', 'T2'), ('course_arrange', 'T1')]","['Name', 'Teacher_ID']","as,group,join,count,select,from",True,"['as', 'group', 'join', 'count']",1.0,1.0
1053,1053,Count the number of countries.,[MASK] the number of [MASK],"['[MASK]', 'the', 'number', 'of', '[MASK]']",SELECT count(*) FROM country,['country'],"[('country', '')]",[],"select,count,from",False,['count'],1.0,1.0
3654,3654,Count the number of players who were born in USA and have bats information 'R'.,[MASK] the number of [MASK] who were born in USA and have [MASK] information 'R'.,"['[MASK]', 'the', 'number', 'of', '[MASK]', 'who', 'were', 'born', 'in', 'USA', 'and', 'have', '[MASK]', 'information', ""'R'.""]",SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats  =  'R';,"['player', 'birth_country', 'bats']","[('player', '')]","['birth_country', 'bats']","count,and,where,select,from",False,"['distinct', 'count', 'where']",0.6666666666666666,0.6666666666666666
2619,2619,How many rooms have king beds? Report the number for each decor type.,How many [MASK] have [MASK] beds? Report the number for each [MASK] [MASK],"['How', 'many', '[MASK]', 'have', '[MASK]', 'beds?', 'Report', 'the', 'number', 'for', 'each', '[MASK]', '[MASK]']","SELECT decor ,  count(*) FROM Rooms WHERE bedType = ""King"" GROUP BY decor;","['Rooms', 'decor', 'King', 'bedType']","[('Rooms', '')]","['decor', 'King', 'bedType']","group,count,where,select,from",False,"['count', 'group']",0.6666666666666666,1.0
6820,6820,What is the country of the airport with the highest elevation?,What is the [MASK] of the [MASK] with the highest [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'highest', '[MASK]']",SELECT country FROM airports ORDER BY elevation DESC LIMIT 1,"['airports', 'country', 'elevation']","[('airports', '')]","['country', 'elevation']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
7503,7503,How many battles did not lose any ship with tonnage '225'?,How many [MASK] did not lose any [MASK] with [MASK] '225'?,"['How', 'many', '[MASK]', 'did', 'not', 'lose', 'any', '[MASK]', 'with', '[MASK]', ""'225'?""]",SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );,"['ship', 'battle', 'tonnage', 'lost_in_battle', 'id']","[('ship', ''), ('battle', '')]","['tonnage', 'lost_in_battle', 'id']","where,in,count,not,select,from",False,"['where', 'in', 'count', 'not']",1.0,1.0
4231,4231,What are the codes of the locations with at least three documents?,What are the [MASK] of the [MASK] with at least three [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'at', 'least', 'three', '[MASK]']",SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3,"['Document_locations', 'location_code']","[('Document_locations', '')]",['location_code'],"group,count,having,select,from",False,"['as', 'group', 'join', 'count', 'having']",1.0,0.6
4967,4967,"What is the average, maximum, and minimum for the number of hours spent training?","What is the average, maximum, and minimum for the number of hours spent training?","['What', 'is', 'the', 'average,', 'maximum,', 'and', 'minimum', 'for', 'the', 'number', 'of', 'hours', 'spent', 'training?']","SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player","['Player', 'HS']","[('Player', '')]",['HS'],"min,avg,select,from,max",False,"['max', 'where']",0.3333333333333333,0.5
5834,5834,Show the result of the submission with the highest score.,Show the [MASK] of the [MASK] with the highest [MASK],"['Show', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'highest', '[MASK]']",SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1,"['submission', 'acceptance', 'Scores', 'Result', 'Submission_ID']","[('submission', 'T2'), ('acceptance', 'T1')]","['Scores', 'Result', 'Submission_ID']","as,join,limit,order,select,desc,from",True,"['limit', 'order', 'desc', 'as', 'join']",1.0,1.0
2014,2014,"What are the gas station ids, locations, and manager names for the gas stations ordered by opening year?","What are the [MASK] [MASK] ids, [MASK] and [MASK] [MASK] for the [MASK] [MASK] ordered by [MASK] [MASK]","['What', 'are', 'the', '[MASK]', '[MASK]', 'ids,', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', '[MASK]', 'ordered', 'by', '[MASK]', '[MASK]']","SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year","['gas_station', 'manager_name', 'LOCATION', 'open_year', 'station_id']","[('gas_station', '')]","['manager_name', 'LOCATION', 'open_year', 'station_id']","select,order,from",False,"['join', 'as']",0.0,0.0
4810,4810,what is the name of every pilot who is at least 25 years old?,what is the [MASK] of every [MASK] who is at least 25 years old?,"['what', 'is', 'the', '[MASK]', 'of', 'every', '[MASK]', 'who', 'is', 'at', 'least', '25', 'years', 'old?']",SELECT Name FROM pilot WHERE Age  >=  25,"['pilot', 'Name', 'Age']","[('pilot', '')]","['Name', 'Age']","select,from,where",False,['where'],1.0,1.0
5252,5252,Find all the songs that do not have a back vocal.,Find all the [MASK] that do not have a [MASK] [MASK],"['Find', 'all', 'the', '[MASK]', 'that', 'do', 'not', 'have', 'a', '[MASK]', '[MASK]']","SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  ""back""","['vocals', 'songs', 'songid', 'back', 'title', 'TYPE']","[('vocals', 't1'), ('songs', 't2')]","['songid', 'back', 'title', 'TYPE']","distinct,as,except,join,where,select,from",True,"['as', 'except', 'join']",0.6,1.0
5854,5854,"Show the minimum amount of transactions whose type code is ""PUR"" and whose share count is bigger than 50.","Show the minimum [MASK] [MASK] [MASK] whose [MASK] [MASK] is ""PUR"" and whose [MASK] [MASK] is bigger than 50.","['Show', 'the', 'minimum', '[MASK]', '[MASK]', '[MASK]', 'whose', '[MASK]', '[MASK]', 'is', '""PUR""', 'and', 'whose', '[MASK]', '[MASK]', 'is', 'bigger', 'than', '50.']","SELECT min(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  ""PUR"" AND share_count  >  50","['TRANSACTIONS', 'amount_of_transaction', 'transaction_type_code', 'PUR', 'share_count']","[('TRANSACTIONS', '')]","['amount_of_transaction', 'transaction_type_code', 'PUR', 'share_count']","min,and,where,select,from",False,['where'],0.3333333333333333,1.0
6105,6105,Find the name and active date of the customer that use email as the contact channel.,Find the [MASK] and [MASK] [MASK] of the [MASK] that use email as the [MASK] [MASK],"['Find', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'that', 'use', 'email', 'as', 'the', '[MASK]', '[MASK]']","SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'","['customers', 'customer_contact_channels', 'customer_id', 'channel_code', 'active_from_date', 'customer_name']","[('customers', 't1'), ('customer_contact_channels', 't2')]","['customer_id', 'channel_code', 'active_from_date', 'customer_name']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
6111,6111,What is the payment method of the customer that has purchased the least quantity of items?,What is the [MASK] [MASK] of the [MASK] that has purchased the least [MASK] of [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'that', 'has', 'purchased', 'the', 'least', '[MASK]', 'of', '[MASK]']",SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1,"['order_items', 'customers', 'customer_orders', 'payment_method', 'order_quantity', 'customer_name', 'customer_id', 'order_id']","[('order_items', 't3'), ('customers', 't1'), ('customer_orders', 't2')]","['payment_method', 'order_quantity', 'customer_name', 'customer_id', 'order_id']","as,group,join,limit,sum,order,select,from",True,"['as', 'group', 'join', 'limit', 'order']",0.8333333333333334,1.0
7616,7616,What are 3 most highly rated episodes in the TV series table and what were those ratings?,What are 3 most highly rated [MASK] in the TV [MASK] table and what were those [MASK],"['What', 'are', '3', 'most', 'highly', 'rated', '[MASK]', 'in', 'the', 'TV', '[MASK]', 'table', 'and', 'what', 'were', 'those', '[MASK]']","SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","['TV_series', 'Rating', 'Episode']","[('TV_series', '')]","['Rating', 'Episode']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
593,593,Find the full name of employee who supported the most number of customers.,Find the full [MASK] of [MASK] who [MASK] the most number of [MASK],"['Find', 'the', 'full', '[MASK]', 'of', '[MASK]', 'who', '[MASK]', 'the', 'most', 'number', 'of', '[MASK]']","SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1","['employees', 'customers', 'support_rep_id', 'first_name', 'last_name', 'id']","[('employees', 'T1'), ('customers', 'T2')]","['support_rep_id', 'first_name', 'last_name', 'id']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
2882,2882,"What are the papers published under the institution ""Indiana University""?",What are the [MASK] published under the [MASK] [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'published', 'under', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  ""Indiana University""","['papers', 'inst', 'authorship', 'paperid', 'title', 'name', 'instid', 'Indiana University']","[('papers', 't1'), ('inst', 't3'), ('authorship', 't2')]","['paperid', 'title', 'name', 'instid', 'Indiana University']","distinct,as,join,where,select,from",True,"['as', 'join', 'where']",0.75,1.0
6771,6771,Show the ids of the faculty who don't participate in any activity.,Show the [MASK] of the [MASK] who don't [MASK] [MASK] any activity.,"['Show', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', ""don't"", '[MASK]', '[MASK]', 'any', 'activity.']",SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in,"['Faculty_participates_in', 'Faculty', 'FacID']","[('Faculty_participates_in', ''), ('Faculty', '')]",['FacID'],"select,except,from",False,['except'],1.0,1.0
6572,6572,Give the average price and case of wines made from Zinfandel grapes in the year 2009.,Give the average [MASK] and [MASK] of [MASK] made from [MASK] [MASK] in the [MASK] 2009.,"['Give', 'the', 'average', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'made', 'from', '[MASK]', '[MASK]', 'in', 'the', '[MASK]', '2009.']","SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  ""Zinfandel""","['WINE', 'Zinfandel', 'YEAR', 'Price', 'Grape', 'Cases']","[('WINE', '')]","['Zinfandel', 'YEAR', 'Price', 'Grape', 'Cases']","from,and,avg,select,where",False,"['where', 'avg']",0.6666666666666666,1.0
879,879,What is the average unit price of rock tracks?,What is the average [MASK] [MASK] of [MASK] [MASK],"['What', 'is', 'the', 'average', '[MASK]', '[MASK]', 'of', '[MASK]', '[MASK]']","SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""","['GENRE', 'TRACK', 'Name', 'Rock', 'UnitPrice', 'GenreId']","[('GENRE', 'T1'), ('TRACK', 'T2')]","['Name', 'Rock', 'UnitPrice', 'GenreId']","where,as,join,avg,select,from",True,['avg'],0.25,1.0
3635,3635,"What are the first name, last name and id of the player with the most all star game experiences? Also list the count.",What are the [MASK] [MASK] [MASK] [MASK] and [MASK] of the [MASK] with the most [MASK] [MASK] game experiences? Also list the count.,"['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'most', '[MASK]', '[MASK]', 'game', 'experiences?', 'Also', 'list', 'the', 'count.']","SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;","['all_star', 'player', 'player_id', 'name_first', 'name_last']","[('all_star', 'T2'), ('player', 'T1')]","['player_id', 'name_first', 'name_last']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
1032,1032,"List the hardware model name and company name for the phone whose screen mode type is ""Graphics.""",List the [MASK] [MASK] [MASK] and [MASK] [MASK] for the [MASK] whose [MASK] [MASK] [MASK] is [MASK],"['List', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', 'whose', '[MASK]', '[MASK]', '[MASK]', 'is', '[MASK]']","SELECT T2.Hardware_Model_name ,  T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  ""Graphics"";","['phone', 'screen_mode', 'Company_name', 'Hardware_Model_name', 'Graphics', 'Graphics_mode', 'screen_mode', 'Type']","[('phone', 'T2'), ('screen_mode', 'T1')]","['Company_name', 'Hardware_Model_name', 'Graphics', 'Graphics_mode', 'screen_mode', 'Type']","as,join,from,select,where",True,[],,
6864,6864,"For each country, what is the average elevation of that country's airports?",For each [MASK] what is the average [MASK] of that [MASK] [MASK],"['For', 'each', '[MASK]', 'what', 'is', 'the', 'average', '[MASK]', 'of', 'that', '[MASK]', '[MASK]']","SELECT avg(elevation) ,  country FROM airports GROUP BY country","['airports', 'country', 'elevation']","[('airports', '')]","['country', 'elevation']","group,select,from,avg",False,"['group', 'avg']",1.0,1.0
344,344,How many aircrafts exist in the database?,How many [MASK] exist in the database?,"['How', 'many', '[MASK]', 'exist', 'in', 'the', 'database?']",SELECT count(*) FROM Aircraft,['Aircraft'],"[('Aircraft', '')]",[],"select,count,from",False,['count'],1.0,1.0
841,841,How many tracks belong to rock genre?,How many [MASK] belong to [MASK] [MASK],"['How', 'many', '[MASK]', 'belong', 'to', '[MASK]', '[MASK]']","SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""","['GENRE', 'TRACK', 'Name', 'Rock', 'GenreId']","[('GENRE', 'T1'), ('TRACK', 'T2')]","['Name', 'Rock', 'GenreId']","as,join,count,where,select,from",True,['count'],0.25,1.0
7098,7098,What is the model for the car with a weight smaller than the average?,What is the [MASK] for the [MASK] with a [MASK] smaller than the average?,"['What', 'is', 'the', '[MASK]', 'for', 'the', '[MASK]', 'with', 'a', '[MASK]', 'smaller', 'than', 'the', 'average?']",SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),"['CAR_NAMES', 'CARS_DATA', 'CARS_DATA', 'MakeId', 'Weight', 'model', 'Id']","[('CAR_NAMES', 'T1'), ('CARS_DATA', ''), ('CARS_DATA', 'T2')]","['MakeId', 'Weight', 'model', 'Id']","as,join,from,avg,select,where",True,"['avg', 'where']",0.5,1.0
2473,2473,"What is the reviewer name, film title, movie rating, and rating date  for every movie ordered by reviewer name, movie title, then finally rating?",What is the [MASK] [MASK] film [MASK] [MASK] [MASK] and [MASK] [MASK] for every [MASK] ordered by [MASK] [MASK] [MASK] [MASK] then finally [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'film', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'every', '[MASK]', 'ordered', 'by', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'then', 'finally', '[MASK]']","SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars","['Rating', 'Movie', 'Reviewer', 'rID', 'title', 'name', 'stars', 'ratingDate', 'mID']","[('Rating', 'T1'), ('Movie', 'T2'), ('Reviewer', 'T3')]","['rID', 'title', 'name', 'stars', 'ratingDate', 'mID']","as,join,order,select,from",True,['order'],0.3333333333333333,1.0
5180,5180,How many songs are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM Songs,['Songs'],"[('Songs', '')]",[],"select,count,from",False,['count'],1.0,1.0
4147,4147,What are the titles of films that do not have a film market estimation?,What are the [MASK] of [MASK] that do not have a [MASK] [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'that', 'do', 'not', 'have', 'a', '[MASK]', '[MASK]', '[MASK]']",SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation),"['film_market_estimation', 'film', 'Film_ID', 'Title']","[('film_market_estimation', ''), ('film', '')]","['Film_ID', 'Title']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
3252,3252,How many students are enrolled in some classes that are taught by an accounting professor?,How many [MASK] are [MASK] in some [MASK] that are taught by an accounting professor?,"['How', 'many', '[MASK]', 'are', '[MASK]', 'in', 'some', '[MASK]', 'that', 'are', 'taught', 'by', 'an', 'accounting', 'professor?']",SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting',"['course', 'enroll', 'department', 'CLASS', 'dept_code', 'class_code', 'crs_code', 'dept_name']","[('course', 'T3'), ('enroll', 'T2'), ('department', 'T4'), ('CLASS', 'T1')]","['dept_code', 'class_code', 'crs_code', 'dept_name']","as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",1.0,1.0
1863,1863,What are the times of elimination for wrestlers with over 50 days held?,What are the [MASK] of [MASK] for [MASK] with over 50 [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'for', '[MASK]', 'with', 'over', '50', '[MASK]', '[MASK]']",SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50,"['wrestler', 'elimination', 'Wrestler_ID', 'Time', 'Days_held']","[('wrestler', 'T2'), ('elimination', 'T1')]","['Wrestler_ID', 'Time', 'Days_held']","as,join,from,select,where",True,"['group', 'count', 'where']",0.3333333333333333,0.3333333333333333
6092,6092,What are the state and country of all the cities that have post codes starting with 4.\,What are the [MASK] and [MASK] of all the [MASK] that have [MASK] [MASK] starting with 4.\,"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', 'all', 'the', '[MASK]', 'that', 'have', '[MASK]', '[MASK]', 'starting', 'with', '4.\\']","SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE ""4%""","['addresses', '4%', 'zip_postcode', 'state_province_county', 'country']","[('addresses', '')]","['4%', 'zip_postcode', 'state_province_county', 'country']","select,like,from,where",False,"['group', 'count', 'having']",0.0,0.0
4020,4020,Show names of ships involved in a mission launched after 1928.,Show [MASK] of [MASK] involved in a [MASK] [MASK] after 1928.,"['Show', '[MASK]', 'of', '[MASK]', 'involved', 'in', 'a', '[MASK]', '[MASK]', 'after', '1928.']",SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928,"['ship', 'mission', 'Name', 'Ship_ID', 'Launched_Year']","[('ship', 'T2'), ('mission', 'T1')]","['Name', 'Ship_ID', 'Launched_Year']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
3393,3393,Find the name and component amount of the least popular furniture.,Find the [MASK] and [MASK] amount [MASK] the least popular [MASK],"['Find', 'the', '[MASK]', 'and', '[MASK]', 'amount', '[MASK]', 'the', 'least', 'popular', '[MASK]']","SELECT name ,  Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1","['furniture', 'market_rate', 'Num_of_Component', 'name']","[('furniture', '')]","['market_rate', 'Num_of_Component', 'name']","select,limit,order,from",False,"['as', 'group', 'join', 'limit', 'count', 'order']",1.0,0.3333333333333333
5069,5069,"What are the names of device shops, and what are the carriers that they carry devices in stock for?",What are the [MASK] of [MASK] [MASK] and what are the [MASK] that they [MASK] [MASK] in [MASK] for?,"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', 'and', 'what', 'are', 'the', '[MASK]', 'that', 'they', '[MASK]', '[MASK]', 'in', '[MASK]', 'for?']","SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID","['stock', 'device', 'shop', 'Carrier', 'Shop_ID', 'Device_ID', 'Shop_Name']","[('stock', 'T1'), ('device', 'T2'), ('shop', 'T3')]","['Carrier', 'Shop_ID', 'Device_ID', 'Shop_Name']","select,join,from,as",True,"['join', 'as']",1.0,1.0
3719,3719,What are the names of the cameras that have taken picture of the most mountains?,What are the [MASK] of the [MASK] that have taken picture of the most mountains?,"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'have', 'taken', 'picture', 'of', 'the', 'most', 'mountains?']",SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1,"['camera_lens', 'photos', 'camera_lens_id', 'id', 'name']","[('camera_lens', 'T2'), ('photos', 'T1')]","['camera_lens_id', 'id', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'order', 'desc', 'count']",0.7142857142857143,1.0
7910,7910,Show the names of students who have a grade higher than 5 and have at least 2 friends.,Show the [MASK] of [MASK] who have a [MASK] [MASK] than 5 and have at least 2 [MASK],"['Show', 'the', '[MASK]', 'of', '[MASK]', 'who', 'have', 'a', '[MASK]', '[MASK]', 'than', '5', 'and', 'have', 'at', 'least', '2', '[MASK]']",SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,"['Friend', 'Highschooler', 'student_id', 'grade', 'id', 'name']","[('Friend', 'T1'), ('Highschooler', 'T2')]","['student_id', 'grade', 'id', 'name']","as,group,join,from,count,having,select,where",True,"['as', 'group', 'join', 'count', 'having', 'where']",1.0,1.0
3178,3178,What are the first and last name of all biology professors?,What are the first and last [MASK] of all [MASK] [MASK],"['What', 'are', 'the', 'first', 'and', 'last', '[MASK]', 'of', 'all', '[MASK]', '[MASK]']","SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  ""Biology""","['employee', 'department', 'professor', 'DEPT_NAME', 'EMP_FNAME', 'dept_code', 'EMP_NUM', 'Biology', 'EMP_LNAME']","[('employee', 'T3'), ('department', 'T2'), ('professor', 'T1')]","['DEPT_NAME', 'EMP_FNAME', 'dept_code', 'EMP_NUM', 'Biology', 'EMP_LNAME']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
3788,3788,"What are the login names of the students with family name ""Ward""?",What are the [MASK] [MASK] of the [MASK] with [MASK] [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'with', '[MASK]', '[MASK]', '[MASK]']","SELECT login_name FROM Students WHERE family_name  =  ""Ward""","['Students', 'login_name', 'family_name', 'Ward']","[('Students', '')]","['login_name', 'family_name', 'Ward']","select,from,where",False,['where'],1.0,1.0
4614,4614,List the most common type of artworks.,List the most common [MASK] of [MASK],"['List', 'the', 'most', 'common', '[MASK]', 'of', '[MASK]']",SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1,"['artwork', 'TYPE']","[('artwork', '')]",['TYPE'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
6961,6961,"show the name of all bridges that was designed by american archtect, and sort the result by the bridge feet length.",show the [MASK] of all [MASK] that was designed by american [MASK] and sort the result by the [MASK] [MASK] [MASK],"['show', 'the', '[MASK]', 'of', 'all', '[MASK]', 'that', 'was', 'designed', 'by', 'american', '[MASK]', 'and', 'sort', 'the', 'result', 'by', 'the', '[MASK]', '[MASK]', '[MASK]']",SELECT t1.name FROM bridge AS t1 JOIN architect AS t2 ON t1.architect_id  =  t2.id WHERE t2.nationality  =  'American' ORDER BY t1.length_feet,"['architect', 'bridge', 'architect_id', 'name', 'nationality', 'id', 'length_feet']","[('architect', 't2'), ('bridge', 't1')]","['architect_id', 'name', 'nationality', 'id', 'length_feet']","as,join,from,order,select,where",True,['order'],0.25,1.0
4975,4975,What are the names and enrollment numbers for colleges that have more than 10000 enrolled and are located in Louisiana?,What are the [MASK] and [MASK] numbers for [MASK] that have more than 10000 [MASK] and are located in Louisiana?,"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'numbers', 'for', '[MASK]', 'that', 'have', 'more', 'than', '10000', '[MASK]', 'and', 'are', 'located', 'in', 'Louisiana?']","SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = ""LA""","['College', 'state', 'enr', 'cName', 'LA']","[('College', '')]","['state', 'enr', 'cName', 'LA']","select,and,from,where",False,"['as', 'join', 'where']",0.5,0.3333333333333333
5746,5746,Find the total number of students living in the male dorm (with gender M).,Find the total number of [MASK] living [MASK] the male [MASK] (with [MASK] M).,"['Find', 'the', 'total', 'number', 'of', '[MASK]', 'living', '[MASK]', 'the', 'male', '[MASK]', '(with', '[MASK]', 'M).']",SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M',"['student', 'dorm', 'lives_in', 'dormid', 'gender', 'stuid']","[('student', 'T1'), ('dorm', 'T3'), ('lives_in', 'T2')]","['dormid', 'gender', 'stuid']","as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",1.0,1.0
6360,6360,"What is the maximum, minimum and average years spent working on a school bus?","What is the maximum, minimum and average [MASK] spent [MASK] on a [MASK] bus?","['What', 'is', 'the', 'maximum,', 'minimum', 'and', 'average', '[MASK]', 'spent', '[MASK]', 'on', 'a', '[MASK]', 'bus?']","SELECT max(years_working) ,  min(years_working) ,  avg(years_working) FROM school_bus","['school_bus', 'years_working']","[('school_bus', '')]",['years_working'],"min,avg,select,from,max",False,"['min', 'avg', 'max']",1.0,1.0
6440,6440,Count the number of budget codes.,Count the number of [MASK] [MASK],"['Count', 'the', 'number', 'of', '[MASK]', '[MASK]']",SELECT count(*) FROM Ref_budget_codes,['Ref_budget_codes'],"[('Ref_budget_codes', '')]",[],"select,count,from",False,['count'],1.0,1.0
3447,3447,display the employee ID for each employee and the date on which he ended his previous job.,[MASK] the [MASK] ID for each [MASK] and the [MASK] on which he ended his previous job.,"['[MASK]', 'the', '[MASK]', 'ID', 'for', 'each', '[MASK]', 'and', 'the', '[MASK]', 'on', 'which', 'he', 'ended', 'his', 'previous', 'job.']","SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id","['job_history', 'end_date', 'employee_id']","[('job_history', '')]","['end_date', 'employee_id']","group,select,from,max",False,"['join', 'as']",0.0,0.0
5048,5048,What is the number of states that has some colleges whose enrollment is smaller than the average enrollment?,What is the number of [MASK] that has some [MASK] whose [MASK] is smaller than the average [MASK],"['What', 'is', 'the', 'number', 'of', '[MASK]', 'that', 'has', 'some', '[MASK]', 'whose', '[MASK]', 'is', 'smaller', 'than', 'the', 'average', '[MASK]']",SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college),"['college', 'enr', 'state']","[('college', '')]","['enr', 'state']","distinct,avg,count,where,select,from",False,"['avg', 'where']",0.5,1.0
8013,8013,"For each citizenship, how many singers are from that country?",For each [MASK] how many [MASK] are from that country?,"['For', 'each', '[MASK]', 'how', 'many', '[MASK]', 'are', 'from', 'that', 'country?']","SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship","['singer', 'Citizenship']","[('singer', '')]",['Citizenship'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
3207,3207,Find the number of classes in each school.,Find the number of [MASK] in each [MASK],"['Find', 'the', 'number', 'of', '[MASK]', 'in', 'each', '[MASK]']","SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code","['department', 'course', 'CLASS', 'dept_code', 'school_code', 'crs_code']","[('department', 'T3'), ('course', 'T2'), ('CLASS', 'T1')]","['dept_code', 'school_code', 'crs_code']","as,group,join,count,select,from",True,"['count', 'group']",0.5,1.0
3098,3098,Find the maximum and minimum monthly rental for all student addresses.,Find the maximum and minimum [MASK] [MASK] for all [MASK] [MASK],"['Find', 'the', 'maximum', 'and', 'minimum', '[MASK]', '[MASK]', 'for', 'all', '[MASK]', '[MASK]']","SELECT max(monthly_rental) ,  min(monthly_rental) FROM Student_Addresses","['Student_Addresses', 'monthly_rental']","[('Student_Addresses', '')]",['monthly_rental'],"select,min,from,max",False,"['min', 'max']",1.0,1.0
1809,1809,What are the names of customers with checking balances lower than the average checking balance?,What are the [MASK] of [MASK] with [MASK] [MASK] lower than the average [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'with', '[MASK]', '[MASK]', 'lower', 'than', 'the', 'average', '[MASK]', '[MASK]']",SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking),"['checking', 'checking', 'accounts', 'custid', 'balance', 'name']","[('checking', 'T2'), ('checking', ''), ('accounts', 'T1')]","['custid', 'balance', 'name']","as,join,from,avg,select,where",True,"['avg', 'where', 'as', 'join']",1.0,1.0
4038,4038,Which grade is studying in classroom 103?,Which [MASK] is [MASK] in [MASK] 103?,"['Which', '[MASK]', 'is', '[MASK]', 'in', '[MASK]', '103?']",SELECT DISTINCT grade FROM list WHERE classroom  =  103,"['list', 'classroom', 'grade']","[('list', '')]","['classroom', 'grade']","distinct,select,from,where",False,"['distinct', 'where']",1.0,1.0
2909,2909,"Who has written a paper that has the word ""Functional"" in its title? Return the first names of the authors.",Who has written a [MASK] that has the word [MASK] in its [MASK] Return the first [MASK] of the [MASK],"['Who', 'has', 'written', 'a', '[MASK]', 'that', 'has', 'the', 'word', '[MASK]', 'in', 'its', '[MASK]', 'Return', 'the', 'first', '[MASK]', 'of', 'the', '[MASK]']","SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE ""%Functional%""","['papers', 'authors', 'authorship', '%Functional%', 'paperid', 'title', 'authid', 'fname']","[('papers', 't3'), ('authors', 't1'), ('authorship', 't2')]","['%Functional%', 'paperid', 'title', 'authid', 'fname']","like,as,join,from,select,where",True,"['like', 'where']",0.5,1.0
3355,3355,Please show the names and the players of clubs.,Please show the [MASK] and the [MASK] of [MASK],"['Please', 'show', 'the', '[MASK]', 'and', 'the', '[MASK]', 'of', '[MASK]']","SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID","['player', 'club', 'Player_id', 'Club_ID', 'name']","[('player', 'T2'), ('club', 'T1')]","['Player_id', 'Club_ID', 'name']","select,join,from,as",True,[],,
1189,1189,What parties have at least three representatives?,What [MASK] have at least three [MASK],"['What', '[MASK]', 'have', 'at', 'least', 'three', '[MASK]']",SELECT Party FROM representative GROUP BY Party HAVING COUNT(*)  >=  3,"['representative', 'Party']","[('representative', '')]",['Party'],"group,count,having,select,from",False,"['as', 'group', 'join', 'count', 'having']",1.0,0.6
2234,2234,What is the number of technicians?,What is the number of [MASK],"['What', 'is', 'the', 'number', 'of', '[MASK]']",SELECT count(*) FROM technician,['technician'],"[('technician', '')]",[],"select,count,from",False,['count'],1.0,1.0
5149,5149,Find the number of distinct currency codes used in drama workshop groups.,Find the number of distinct [MASK] [MASK] used in [MASK] [MASK] [MASK],"['Find', 'the', 'number', 'of', 'distinct', '[MASK]', '[MASK]', 'used', 'in', '[MASK]', '[MASK]', '[MASK]']",SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups,"['Drama_Workshop_Groups', 'Currency_Code']","[('Drama_Workshop_Groups', '')]",['Currency_Code'],"distinct,select,count,from",False,['count'],0.5,1.0
4169,4169,Give me the name and description of the document type code RV.,Give me the [MASK] and [MASK] of the [MASK] [MASK] [MASK] RV.,"['Give', 'me', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', '[MASK]', 'RV.']","SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  ""RV""","['Ref_document_types', 'RV', 'document_type_description', 'document_type_name', 'document_type_code']","[('Ref_document_types', '')]","['RV', 'document_type_description', 'document_type_name', 'document_type_code']","select,from,where",False,['where'],1.0,1.0
6489,6489,Find the name of projects that require between 100 and 300 hours of work.,Find the [MASK] of [MASK] that require between 100 and 300 [MASK] of work.,"['Find', 'the', '[MASK]', 'of', '[MASK]', 'that', 'require', 'between', '100', 'and', '300', '[MASK]', 'of', 'work.']",SELECT name FROM projects WHERE hours BETWEEN 100 AND 300,"['projects', 'hours', 'name']","[('projects', '')]","['hours', 'name']","and,between,where,select,from",False,"['where', 'and', 'between']",1.0,1.0
5093,5093,What is the order date of each booking?,What is the [MASK] [MASK] of each [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'each', '[MASK]']",SELECT Order_Date FROM BOOKINGS,"['BOOKINGS', 'Order_Date']","[('BOOKINGS', '')]",['Order_Date'],"select,from",False,[],,
5352,5352,What is the id of the problem log that is created most recently?,What is the [MASK] of the [MASK] [MASK] that is created most recently?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'that', 'is', 'created', 'most', 'recently?']",SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1,"['problem_log', 'log_entry_date', 'problem_log_id']","[('problem_log', '')]","['log_entry_date', 'problem_log_id']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
1358,1358,Find the name and budget of departments whose budgets are more than the average budget.,Find the [MASK] and [MASK] of [MASK] whose [MASK] are more than the average [MASK],"['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', 'are', 'more', 'than', 'the', 'average', '[MASK]']","SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)","['department', 'budget', 'dept_name']","[('department', '')]","['budget', 'dept_name']","select,avg,from,where",False,"['avg', 'where', 'as', 'join']",1.0,0.5
1489,1489,What are the names of instructors who earn more than at least one instructor from the Biology department?,What are the [MASK] of [MASK] who earn more than at least one [MASK] from the Biology [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'who', 'earn', 'more', 'than', 'at', 'least', 'one', '[MASK]', 'from', 'the', 'Biology', '[MASK]']",SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology'),"['instructor', 'salary', 'dept_name', 'name']","[('instructor', '')]","['salary', 'dept_name', 'name']","select,min,from,where",False,['where'],0.5,1.0
3638,3638,Count the number of players who enter hall of fame for each year.,Count the number [MASK] [MASK] who enter [MASK] [MASK] [MASK] for each [MASK],"['Count', 'the', 'number', '[MASK]', '[MASK]', 'who', 'enter', '[MASK]', '[MASK]', '[MASK]', 'for', 'each', '[MASK]']","SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;","['hall_of_fame', 'yearid']","[('hall_of_fame', '')]",['yearid'],"select,count,from,group",False,"['count', 'where']",0.5,0.5
1564,1564,What are the customer ids for customers who do not have an account?,What are the [MASK] [MASK] for [MASK] who do not have an [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'for', '[MASK]', 'who', 'do', 'not', 'have', 'an', '[MASK]']",SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts,"['Accounts', 'Customers', 'customer_id']","[('Accounts', ''), ('Customers', '')]",['customer_id'],"select,except,from",False,"['where', 'in', 'not']",0.0,0.0
6839,6839,Find the number of different airports which are the destinations of the American Airlines.,Find the number of different airports which are the destinations of the American [MASK],"['Find', 'the', 'number', 'of', 'different', 'airports', 'which', 'are', 'the', 'destinations', 'of', 'the', 'American', '[MASK]']",SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines',"['routes', 'airlines', 'alid', 'dst_apid', 'name']","[('routes', 'T2'), ('airlines', 'T1')]","['alid', 'dst_apid', 'name']","distinct,as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",0.8,1.0
3858,3858,"Among all the claims, what is the amount claimed in the claim with the least amount settled? List both the settlement amount and claim amount.",Among all the [MASK] what is the [MASK] [MASK] in the [MASK] with the least [MASK] [MASK] List both the [MASK] [MASK] and [MASK] [MASK],"['Among', 'all', 'the', '[MASK]', 'what', 'is', 'the', '[MASK]', '[MASK]', 'in', 'the', '[MASK]', 'with', 'the', 'least', '[MASK]', '[MASK]', 'List', 'both', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]']","SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1","['Claims', 'Amount_Claimed', 'Amount_Settled']","[('Claims', '')]","['Amount_Claimed', 'Amount_Settled']","asc,limit,order,select,from",False,"['asc', 'limit', 'order', 'as', 'group', 'join', 'count']",1.0,0.42857142857142855
7241,7241,Find all airlines that have at least 10 flights.,Find all [MASK] that have at least 10 [MASK],"['Find', 'all', '[MASK]', 'that', 'have', 'at', 'least', '10', '[MASK]']",SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,"['AIRLINES', 'FLIGHTS', 'Airline', 'uid']","[('AIRLINES', 'T1'), ('FLIGHTS', 'T2')]","['Airline', 'uid']","as,group,join,count,having,select,from",True,['where'],0.0,0.0
8008,8008,Show the name of singers whose birth year is either 1948 or 1949?,Show the [MASK] of [MASK] whose [MASK] [MASK] is either 1948 or 1949?,"['Show', 'the', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', '[MASK]', 'is', 'either', '1948', 'or', '1949?']",SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949,"['singer', 'Name', 'Birth_Year']","[('singer', '')]","['Name', 'Birth_Year']","or,select,from,where",False,"['or', 'where']",1.0,1.0
3530,3530,What is the name of the song that was released most recently?,What is the [MASK] of the [MASK] that was [MASK] most recently?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'was', '[MASK]', 'most', 'recently?']","SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1","['song', 'releasedate', 'song_name']","[('song', '')]","['releasedate', 'song_name']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
4384,4384,List the project details of the projects launched by the organisation,List the [MASK] [MASK] of the [MASK] launched by the [MASK],"['List', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'launched', 'by', 'the', '[MASK]']",SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 ),"['Projects', 'project_details', 'organisation_id']","[('Projects', '')]","['project_details', 'organisation_id']","group,in,limit,count,order,where,select,desc,from",False,[],,
7310,7310,"What are all different template ids used for documents, and how many times were each of them used?",What are all different [MASK] [MASK] used for [MASK] and how many times were each of them used?,"['What', 'are', 'all', 'different', '[MASK]', '[MASK]', 'used', 'for', '[MASK]', 'and', 'how', 'many', 'times', 'were', 'each', 'of', 'them', 'used?']","SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","['Documents', 'template_id']","[('Documents', '')]",['template_id'],"select,count,from,group",False,"['as', 'group', 'join', 'count']",1.0,0.5
5116,5116,Show all payment method codes and the number of orders for each code.,Show all [MASK] [MASK] [MASK] and the number of orders for each [MASK],"['Show', 'all', '[MASK]', '[MASK]', '[MASK]', 'and', 'the', 'number', 'of', 'orders', 'for', 'each', '[MASK]']","SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code","['INVOICES', 'payment_method_code']","[('INVOICES', '')]",['payment_method_code'],"select,count,from,group",False,"['as', 'group', 'join', 'count']",1.0,0.5
2518,2518,Find the average rating star for each movie that received at least 2 ratings.,Find the average [MASK] [MASK] for each movie that received at least 2 [MASK],"['Find', 'the', 'average', '[MASK]', '[MASK]', 'for', 'each', 'movie', 'that', 'received', 'at', 'least', '2', '[MASK]']","SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2","['Rating', 'stars', 'mID']","[('Rating', '')]","['stars', 'mID']","group,count,having,avg,select,from",False,"['as', 'group', 'avg', 'join']",0.5,0.5
6123,6123,"What is the total number of products that are in orders with status ""Cancelled""?",What is the total number of products that are in [MASK] with [MASK] [MASK],"['What', 'is', 'the', 'total', 'number', 'of', 'products', 'that', 'are', 'in', '[MASK]', 'with', '[MASK]', '[MASK]']","SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  ""Cancelled""","['customer_orders', 'order_items', 'Cancelled', 'order_status', 'order_id', 'order_quantity']","[('customer_orders', 't1'), ('order_items', 't2')]","['Cancelled', 'order_status', 'order_id', 'order_quantity']","as,join,sum,where,select,from",True,"['sum', 'as', 'join', 'where']",1.0,1.0
125,125,"From the trip record, find the number of unique bikes.","From the [MASK] record, find the number of unique [MASK]","['From', 'the', '[MASK]', 'record,', 'find', 'the', 'number', 'of', 'unique', '[MASK]']",SELECT count(DISTINCT bike_id) FROM trip,"['trip', 'bike_id']","[('trip', '')]",['bike_id'],"distinct,select,count,from",False,['count'],0.5,1.0
364,364,What is the name and salary of all employees in order of salary?,What is the [MASK] and [MASK] of all [MASK] in order of [MASK],"['What', 'is', 'the', '[MASK]', 'and', '[MASK]', 'of', 'all', '[MASK]', 'in', 'order', 'of', '[MASK]']","SELECT name ,  salary FROM Employee ORDER BY salary","['Employee', 'salary', 'name']","[('Employee', '')]","['salary', 'name']","select,order,from",False,['order'],1.0,1.0
117,117,What is the average latitude and longitude of stations located in San Jose city?,What is the average [MASK] and [MASK] of [MASK] located in San [MASK] [MASK],"['What', 'is', 'the', 'average', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'located', 'in', 'San', '[MASK]', '[MASK]']","SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  ""San Jose""","['station', 'city', 'San Jose', 'lat', 'long']","[('station', '')]","['city', 'San Jose', 'lat', 'long']","select,where,from,avg",False,"['where', 'avg']",1.0,1.0
7172,7172,What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?,What are the different [MASK] wthat are [MASK] than 3500 but were not built by the Ford Motor Company?,"['What', 'are', 'the', 'different', '[MASK]', 'wthat', 'are', '[MASK]', 'than', '3500', 'but', 'were', 'not', 'built', 'by', 'the', 'Ford', 'Motor', 'Company?']",SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,"['CAR_MAKERS', 'CARS_DATA', 'MODEL_LIST', 'CAR_NAMES', 'Model', 'weight', 'model', 'Id', 'Maker', 'MakeId', 'FullName']","[('CAR_MAKERS', 'T4'), ('CARS_DATA', 'T3'), ('MODEL_LIST', 'T1'), ('CAR_NAMES', 'T2')]","['Model', 'weight', 'model', 'Id', 'Maker', 'MakeId', 'FullName']","distinct,as,join,and,where,select,from",True,"['distinct', 'as', 'join', 'where', 'or']",0.8,0.8
5081,5081,What is the software platform that is most common amongst all devices?,What is the [MASK] [MASK] that is most common amongst all [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'that', 'is', 'most', 'common', 'amongst', 'all', '[MASK]']",SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1,"['device', 'Software_Platform']","[('device', '')]",['Software_Platform'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
4972,4972,Find the players whose names contain letter 'a'.,Find the [MASK] whose [MASK] contain letter 'a'.,"['Find', 'the', '[MASK]', 'whose', '[MASK]', 'contain', 'letter', ""'a'.""]",SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%',"['Player', 'pName']","[('Player', '')]",['pName'],"distinct,like,where,select,from",False,"['like', 'where']",0.6666666666666666,1.0
5198,5198,What is the last name of the musician that has been at the back position the most?,What is the [MASK] [MASK] of the musician that has been at the [MASK] [MASK] the most?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', 'musician', 'that', 'has', 'been', 'at', 'the', '[MASK]', '[MASK]', 'the', 'most?']","SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  ""back"" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1","['Performance', 'Band', 'bandmate', 'stageposition', 'lastname', 'back', 'id']","[('Performance', 'T1'), ('Band', 'T2')]","['bandmate', 'stageposition', 'lastname', 'back', 'id']","as,group,join,limit,from,count,order,select,desc,where",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",0.875,1.0
629,629,List the name of tracks belongs to genre Rock and whose media type is MPEG audio file.,List the [MASK] of [MASK] belongs to [MASK] [MASK] and whose [MASK] [MASK] is [MASK] [MASK] [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'belongs', 'to', '[MASK]', '[MASK]', 'and', 'whose', '[MASK]', '[MASK]', 'is', '[MASK]', '[MASK]', '[MASK]']","SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = ""Rock"" AND T3.name = ""MPEG audio file"";","['media_types', 'genres', 'tracks', 'MPEG audio file', 'media_type_id', 'name', 'genre_id', 'id', 'Rock']","[('media_types', 'T3'), ('genres', 'T1'), ('tracks', 'T2')]","['MPEG audio file', 'media_type_id', 'name', 'genre_id', 'id', 'Rock']","as,join,from,and,select,where",True,"['as', 'join', 'or', 'where']",0.75,0.75
5621,5621,"Find the name and capacity of the stadium where the event named ""World Junior"" happened.","Find the [MASK] and [MASK] of the [MASK] where the [MASK] [MASK] ""World Junior"" happened.","['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'where', 'the', '[MASK]', '[MASK]', '""World', 'Junior""', 'happened.']","SELECT t1.name ,  t1.capacity FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id WHERE t2.name  =  'World Junior'","['stadium', 'event', 'stadium_id', 'capacity', 'id', 'name']","[('stadium', 't1'), ('event', 't2')]","['stadium_id', 'capacity', 'id', 'name']","as,join,from,select,where",True,"['where', 'as', 'join']",1.0,1.0
6447,6447,What are the document ids for the budget type code 'SF'?,What are the [MASK] [MASK] for the [MASK] [MASK] [MASK] 'SF'?,"['What', 'are', 'the', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', '[MASK]', '[MASK]', ""'SF'?""]",SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF',"['Documents_with_expenses', 'document_id', 'budget_type_code']","[('Documents_with_expenses', '')]","['document_id', 'budget_type_code']","select,from,where",False,['where'],1.0,1.0
7906,7906,What is the name of the high schooler who has the greatest number of likes?,What is the [MASK] of the [MASK] [MASK] who has the greatest number of [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'who', 'has', 'the', 'greatest', 'number', 'of', '[MASK]']",SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,"['Highschooler', 'Likes', 'student_id', 'id', 'name']","[('Highschooler', 'T2'), ('Likes', 'T1')]","['student_id', 'id', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
2575,2575,What are the room names and ids of all the rooms that cost more than 160 and can accommodate more than two people.,What are the [MASK] [MASK] and [MASK] of all the [MASK] that cost more than 160 and can accommodate more than two people.,"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'all', 'the', '[MASK]', 'that', 'cost', 'more', 'than', '160', 'and', 'can', 'accommodate', 'more', 'than', 'two', 'people.']","SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;","['Rooms', 'RoomId', 'maxOccupancy', 'roomName', 'basePrice']","[('Rooms', '')]","['RoomId', 'maxOccupancy', 'roomName', 'basePrice']","select,and,from,where",False,['where'],0.5,1.0
8015,8015,What is the most common singer citizenship ?,What is the most common [MASK] [MASK] ?,"['What', 'is', 'the', 'most', 'common', '[MASK]', '[MASK]', '?']",select citizenship from singer group by citizenship order by count(*) desc limit 1,"['singer', 'citizenship']","[('singer', '')]",['citizenship'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
5155,5155,How many drama workshop groups are there in each city? Return both the city and the count.,How many [MASK] [MASK] [MASK] are there in each [MASK] Return both the [MASK] and the count.,"['How', 'many', '[MASK]', '[MASK]', '[MASK]', 'are', 'there', 'in', 'each', '[MASK]', 'Return', 'both', 'the', '[MASK]', 'and', 'the', 'count.']","SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town","['Drama_Workshop_Groups', 'Addresses', 'City_Town', 'Address_ID']","[('Drama_Workshop_Groups', 'T2'), ('Addresses', 'T1')]","['City_Town', 'Address_ID']","as,group,join,count,select,from",True,"['as', 'group', 'join', 'count']",1.0,1.0
7670,7670,Give average earnings of poker players who are taller than 200.,Give average [MASK] of [MASK] [MASK] who are taller than 200.,"['Give', 'average', '[MASK]', 'of', '[MASK]', '[MASK]', 'who', 'are', 'taller', 'than', '200.']",SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200,"['poker_player', 'people', 'People_ID', 'Earnings', 'Height']","[('poker_player', 'T2'), ('people', 'T1')]","['People_ID', 'Earnings', 'Height']","where,as,join,avg,select,from",True,['where'],0.25,1.0
4684,4684,Give the names of the courses with at least five enrollments.,Give the [MASK] of the [MASK] with at least five [MASK],"['Give', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'at', 'least', 'five', '[MASK]']",SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5,"['ENROLLED_IN', 'COURSE', 'CName', 'CID']","[('ENROLLED_IN', 'T2'), ('COURSE', 'T1')]","['CName', 'CID']","as,group,join,count,having,select,from",True,"['group', 'count', 'having']",0.6,1.0
1685,1685,How many exhibitions have a attendance more than 100 or have a ticket price below 10?,How many [MASK] have a [MASK] more than 100 or have a [MASK] [MASK] below 10?,"['How', 'many', '[MASK]', 'have', 'a', '[MASK]', 'more', 'than', '100', 'or', 'have', 'a', '[MASK]', '[MASK]', 'below', '10?']",SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10,"['exhibition', 'exhibition_record', 'attendance', 'exhibition_id', 'ticket_price']","[('exhibition', 'T2'), ('exhibition_record', 'T1')]","['attendance', 'exhibition_id', 'ticket_price']","as,join,count,where,or,select,from",True,"['count', 'where']",0.4,1.0
6643,6643,In what city does Janessa Sawayn live?,In what [MASK] does [MASK] [MASK] live?,"['In', 'what', '[MASK]', 'does', '[MASK]', '[MASK]', 'live?']","SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";","['Staff', 'Addresses', 'city', 'Janessa', 'address_id', 'last_name', 'staff_address_id', 'Sawayn', 'first_name']","[('Staff', 'T2'), ('Addresses', 'T1')]","['city', 'Janessa', 'address_id', 'last_name', 'staff_address_id', 'Sawayn', 'first_name']","as,join,from,and,select,where",True,"['and', 'where']",0.5,1.0
2012,2012,What are the headquarters with at least two companies in the banking industry?,What are the [MASK] with at least two [MASK] in the banking [MASK],"['What', 'are', 'the', '[MASK]', 'with', 'at', 'least', 'two', '[MASK]', 'in', 'the', 'banking', '[MASK]']",SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2,"['company', 'main_industry', 'headquarters']","[('company', '')]","['main_industry', 'headquarters']","group,count,having,where,select,from",False,"['group', 'count', 'having']",0.75,1.0
1988,1988,"Show the names of phones and the districts of markets they are on, in ascending order of the ranking of the market.","Show the [MASK] of [MASK] and the [MASK] of [MASK] they are on, in ascending order of the [MASK] of the [MASK]","['Show', 'the', '[MASK]', 'of', '[MASK]', 'and', 'the', '[MASK]', 'of', '[MASK]', 'they', 'are', 'on,', 'in', 'ascending', 'order', 'of', 'the', '[MASK]', 'of', 'the', '[MASK]']","SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID ORDER BY T2.Ranking","['market', 'phone', 'phone_market', 'Name', 'Phone_ID', 'Ranking', 'Market_ID', 'District']","[('market', 'T2'), ('phone', 'T3'), ('phone_market', 'T1')]","['Name', 'Phone_ID', 'Ranking', 'Market_ID', 'District']","as,join,order,select,from",True,"['asc', 'as', 'join', 'order']",1.0,0.75
5401,5401,What is the number of branches that have more than the average number of memberships?,What is the [MASK] of [MASK] that have more than the average [MASK] of [MASK],"['What', 'is', 'the', '[MASK]', 'of', '[MASK]', 'that', 'have', 'more', 'than', 'the', 'average', '[MASK]', 'of', '[MASK]']",SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch),"['branch', 'membership_amount']","[('branch', '')]",['membership_amount'],"where,count,avg,select,from",False,"['avg', 'where']",0.6666666666666666,1.0
1518,1518,How much amount in total were claimed in the most recently created document?,How much [MASK] in total were [MASK] in the most recently [MASK] [MASK],"['How', 'much', '[MASK]', 'in', 'total', 'were', '[MASK]', 'in', 'the', 'most', 'recently', '[MASK]', '[MASK]']",SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1),"['claim_headers', 'claims_documents', 'claims_documents', 'created_date', 'claim_header_id', 'claim_id', 'amount_claimed']","[('claim_headers', 't1'), ('claims_documents', ''), ('claims_documents', 't2')]","['created_date', 'claim_header_id', 'claim_id', 'amount_claimed']","as,join,limit,sum,order,where,select,from",True,"['group', 'count']",0.0,0.0
5918,5918,"Which tourist attraction is associated with the photo ""game1""? Return its name.",Which [MASK] [MASK] is associated with the [MASK] [MASK] Return its [MASK],"['Which', '[MASK]', '[MASK]', 'is', 'associated', 'with', 'the', '[MASK]', '[MASK]', 'Return', 'its', '[MASK]']","SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  ""game1""","['TOURIST_ATTRACTIONS', 'PHOTOS', 'Name', 'game1', 'Tourist_Attraction_ID']","[('TOURIST_ATTRACTIONS', 'T2'), ('PHOTOS', 'T1')]","['Name', 'game1', 'Tourist_Attraction_ID']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
6850,6850,How many airports are there per city in the US ordered from most to least?,How many [MASK] are there per [MASK] in the US ordered from most to least?,"['How', 'many', '[MASK]', 'are', 'there', 'per', '[MASK]', 'in', 'the', 'US', 'ordered', 'from', 'most', 'to', 'least?']","SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC","['airports', 'city', 'country']","[('airports', '')]","['city', 'country']","group,count,order,where,select,desc,from",False,"['group', 'count', 'order', 'desc', 'where']",1.0,1.0
7626,7626,"What is the episode for the TV series named ""Sky Radio""?","What is the [MASK] for the TV [MASK] [MASK] ""Sky [MASK]","['What', 'is', 'the', '[MASK]', 'for', 'the', 'TV', '[MASK]', '[MASK]', '""Sky', '[MASK]']","SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","['TV_Channel', 'TV_series', 'Sky Radio', 'series_name', 'id', 'Channel', 'Episode']","[('TV_Channel', 'T1'), ('TV_series', 'T2')]","['Sky Radio', 'series_name', 'id', 'Channel', 'Episode']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
1512,1512,Find the type code of the most frequently used policy.,Find the [MASK] [MASK] of the most frequently used [MASK],"['Find', 'the', '[MASK]', '[MASK]', 'of', 'the', 'most', 'frequently', 'used', '[MASK]']",SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1,"['policies', 'policy_type_code']","[('policies', '')]",['policy_type_code'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
6790,6790,What are the ids of the students who are under 20 years old and are involved in at least one activity.,What are the [MASK] of the [MASK] who are under 20 years old and are involved [MASK] at least one activity.,"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'are', 'under', '20', 'years', 'old', 'and', 'are', 'involved', '[MASK]', 'at', 'least', 'one', 'activity.']",SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20,"['Participates_in', 'Student', 'StuID', 'age']","[('Participates_in', ''), ('Student', '')]","['StuID', 'age']","intersect,select,from,where",False,['where'],0.5,1.0
3177,3177,What is the first and last name of the professor in biology department?,What is the first and last [MASK] of the [MASK] in [MASK] [MASK],"['What', 'is', 'the', 'first', 'and', 'last', '[MASK]', 'of', 'the', '[MASK]', 'in', '[MASK]', '[MASK]']","SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  ""Biology""","['employee', 'department', 'professor', 'DEPT_NAME', 'EMP_FNAME', 'dept_code', 'EMP_NUM', 'Biology', 'EMP_LNAME']","[('employee', 'T3'), ('department', 'T2'), ('professor', 'T1')]","['DEPT_NAME', 'EMP_FNAME', 'dept_code', 'EMP_NUM', 'Biology', 'EMP_LNAME']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
6877,6877,Find the id of routes whose source and destination airports are in the United States.,Find the [MASK] of [MASK] whose source and destination [MASK] are in the United States.,"['Find', 'the', '[MASK]', 'of', '[MASK]', 'whose', 'source', 'and', 'destination', '[MASK]', 'are', 'in', 'the', 'United', 'States.']",SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States'),"['routes', 'airports', 'dst_apid', 'country', 'apid', 'rid', 'src_apid']","[('routes', ''), ('airports', '')]","['dst_apid', 'country', 'apid', 'rid', 'src_apid']","in,and,where,select,from",False,['where'],0.3333333333333333,1.0
4582,4582,Which headquarter locations are used by more than 2 companies?,Which [MASK] locations are used by more than 2 [MASK],"['Which', '[MASK]', 'locations', 'are', 'used', 'by', 'more', 'than', '2', '[MASK]']",SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2,"['Companies', 'Headquarters']","[('Companies', '')]",['Headquarters'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
5245,5245,"How many different instruments are used in the song ""Badlands""?",How many different [MASK] are used in the [MASK] [MASK],"['How', 'many', 'different', '[MASK]', 'are', 'used', 'in', 'the', '[MASK]', '[MASK]']","SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Badlands""","['songs', 'instruments', 'songid', 'instrument', 'Badlands', 'title']","[('songs', 'T2'), ('instruments', 'T1')]","['songid', 'instrument', 'Badlands', 'title']","distinct,as,join,count,where,select,from",True,"['distinct', 'count']",0.4,1.0
5673,5673,How many girl students who are younger than 25?,How many girl [MASK] who are younger than 25?,"['How', 'many', 'girl', '[MASK]', 'who', 'are', 'younger', 'than', '25?']",SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25,"['student', 'sex', 'age']","[('student', '')]","['sex', 'age']","count,and,where,select,from",False,"['count', 'and', 'where']",1.0,1.0
975,975,find the number of medicines offered by each trade.,find the number of [MASK] offered by each [MASK],"['find', 'the', 'number', 'of', '[MASK]', 'offered', 'by', 'each', '[MASK]']","SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name","['medicine', 'trade_name']","[('medicine', '')]",['trade_name'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
7208,7208,Return the number of flights departing from Aberdeen.,Return the number of [MASK] [MASK] from [MASK],"['Return', 'the', 'number', 'of', '[MASK]', '[MASK]', 'from', '[MASK]']","SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","['FLIGHTS', 'AIRPORTS', 'AirportCode', 'City', 'SourceAirport', 'Aberdeen']","[('FLIGHTS', 'T1'), ('AIRPORTS', 'T2')]","['AirportCode', 'City', 'SourceAirport', 'Aberdeen']","as,join,count,where,select,from",True,['count'],0.25,1.0
3749,3749,Count the number of programs broadcast for each time section of a day.,Count the number [MASK] programs [MASK] for each [MASK] section [MASK] a day.,"['Count', 'the', 'number', '[MASK]', 'programs', '[MASK]', 'for', 'each', '[MASK]', 'section', '[MASK]', 'a', 'day.']","SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day","['broadcast', 'time_of_day']","[('broadcast', '')]",['time_of_day'],"select,count,from,group",False,['count'],0.5,1.0
4480,4480,What is the total number of people who has no friend living in the city of Austin.,What is the total number of people who has no [MASK] living in the [MASK] of Austin.,"['What', 'is', 'the', 'total', 'number', 'of', 'people', 'who', 'has', 'no', '[MASK]', 'living', 'in', 'the', '[MASK]', 'of', 'Austin.']",SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin'),"['person', 'PersonFriend', 'friend', 'city', 'name']","[('person', ''), ('PersonFriend', '')]","['friend', 'city', 'name']","distinct,not,in,count,where,select,from",False,"['not', 'in', 'count', 'where']",0.8,1.0
4257,4257,Find each student's first name.,Find each [MASK] first [MASK],"['Find', 'each', '[MASK]', 'first', '[MASK]']",SELECT DISTINCT fname FROM student,"['student', 'fname']","[('student', '')]",['fname'],"distinct,select,from",False,"['as', 'join']",0.0,0.0
7847,7847,What are the names of conductors who have conducted orchestras founded after the year 2008?,What are the [MASK] [MASK] [MASK] who have [MASK] [MASK] [MASK] after the [MASK] 2008?,"['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', 'who', 'have', '[MASK]', '[MASK]', '[MASK]', 'after', 'the', '[MASK]', '2008?']",SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008,"['orchestra', 'conductor', 'Name', 'Year_of_Founded', 'Conductor_ID']","[('orchestra', 'T2'), ('conductor', 'T1')]","['Name', 'Year_of_Founded', 'Conductor_ID']","as,join,from,select,where",True,"['as', 'join', 'where', 'group', 'limit', 'count', 'order', 'desc']",1.0,0.375
6633,6633,When did the staff member named Janessa Sawayn join the company?,When did the [MASK] member [MASK] [MASK] [MASK] [MASK] the company?,"['When', 'did', 'the', '[MASK]', 'member', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'the', 'company?']","SELECT date_joined_staff FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";","['Staff', 'Janessa', 'last_name', 'date_joined_staff', 'Sawayn', 'first_name']","[('Staff', '')]","['Janessa', 'last_name', 'date_joined_staff', 'Sawayn', 'first_name']","select,and,from,where",False,"['and', 'where']",1.0,1.0
3058,3058,"For each state, find the total account balance of customers whose credit score is above 100.",For each [MASK] find the total account balance of [MASK] whose [MASK] [MASK] is above 100.,"['For', 'each', '[MASK]', 'find', 'the', 'total', 'account', 'balance', 'of', '[MASK]', 'whose', '[MASK]', '[MASK]', 'is', 'above', '100.']","SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state","['customer', 'credit_score', 'state', 'acc_bal']","[('customer', '')]","['credit_score', 'state', 'acc_bal']","group,sum,where,select,from",False,['sum'],0.3333333333333333,1.0
1735,1735,How many gold medals has the club with the most coaches won?,How many [MASK] medals has the [MASK] with the most [MASK] won?,"['How', 'many', '[MASK]', 'medals', 'has', 'the', '[MASK]', 'with', 'the', 'most', '[MASK]', 'won?']","SELECT T1.club_id ,  T1.gold FROM match_result AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id ORDER BY count(*) DESC LIMIT 1","['match_result', 'coach', 'gold', 'club_id']","[('match_result', 'T1'), ('coach', 'T2')]","['gold', 'club_id']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc']",0.7142857142857143,1.0
477,477,"Which city does the student whose last name is ""Kim"" live in?","Which [MASK] does the [MASK] whose last [MASK] is ""Kim"" live in?","['Which', '[MASK]', 'does', 'the', '[MASK]', 'whose', 'last', '[MASK]', 'is', '""Kim""', 'live', 'in?']","SELECT city_code FROM Student WHERE LName  =  ""Kim""","['Student', 'Kim', 'LName', 'city_code']","[('Student', '')]","['Kim', 'LName', 'city_code']","select,from,where",False,"['where', 'and']",1.0,0.5
1797,1797,What are the names of all the customers in alphabetical order?,What are the [MASK] of all the customers in alphabetical order?,"['What', 'are', 'the', '[MASK]', 'of', 'all', 'the', 'customers', 'in', 'alphabetical', 'order?']",SELECT name FROM accounts ORDER BY name,"['accounts', 'name']","[('accounts', '')]",['name'],"select,order,from",False,['order'],1.0,1.0
1005,1005,Find the schools that were either founded after 1850 or public.,Find the [MASK] that were either [MASK] after 1850 or public.,"['Find', 'the', '[MASK]', 'that', 'were', 'either', '[MASK]', 'after', '1850', 'or', 'public.']",SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public',"['university', 'affiliation', 'school', 'founded']","[('university', '')]","['affiliation', 'school', 'founded']","or,select,from,where",False,['where'],0.5,1.0
5493,5493,What is the average age of the female students with secretary votes in the spring election cycle?,What is the average [MASK] of the female [MASK] with [MASK] [MASK] in the [MASK] [MASK] [MASK],"['What', 'is', 'the', 'average', '[MASK]', 'of', 'the', 'female', '[MASK]', 'with', '[MASK]', '[MASK]', 'in', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  ""F"" AND T2.Election_Cycle  =  ""Spring""","['VOTING_RECORD', 'STUDENT', 'SECRETARY_Vote', 'Age', 'StuID', 'Spring', 'F', 'Election_Cycle', 'Sex']","[('VOTING_RECORD', 'T2'), ('STUDENT', 'T1')]","['SECRETARY_Vote', 'Age', 'StuID', 'Spring', 'F', 'Election_Cycle', 'Sex']","where,as,join,and,avg,select,from",True,"['where', 'avg']",0.4,1.0
6585,6585,What are the names of wines that are more expensive then all wines made in the year 2006?,What are the [MASK] of [MASK] that are more expensive then all [MASK] made in the [MASK] 2006?,"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'that', 'are', 'more', 'expensive', 'then', 'all', '[MASK]', 'made', 'in', 'the', '[MASK]', '2006?']",SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006),"['WINE', 'Name', 'YEAR', 'Price']","[('WINE', '')]","['Name', 'YEAR', 'Price']","select,max,from,where",False,"['where', 'avg']",0.5,0.5
631,631,List the name of tracks belongs to genre Rock or media type is MPEG audio file.,List the [MASK] of [MASK] belongs to [MASK] [MASK] or [MASK] [MASK] is [MASK] [MASK] [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'belongs', 'to', '[MASK]', '[MASK]', 'or', '[MASK]', '[MASK]', 'is', '[MASK]', '[MASK]', '[MASK]']","SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = ""Rock"" OR T3.name = ""MPEG audio file"";","['media_types', 'genres', 'tracks', 'MPEG audio file', 'media_type_id', 'name', 'genre_id', 'id', 'Rock']","[('media_types', 'T3'), ('genres', 'T1'), ('tracks', 'T2')]","['MPEG audio file', 'media_type_id', 'name', 'genre_id', 'id', 'Rock']","as,join,from,or,select,where",True,"['as', 'join', 'where']",0.75,1.0
6121,6121,"Find the customer name and date of the orders that have the status ""Delivered"".",Find the [MASK] [MASK] and [MASK] of the [MASK] that have the [MASK] [MASK],"['Find', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'that', 'have', 'the', '[MASK]', '[MASK]']","SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  ""Delivered""","['customers', 'customer_orders', 'order_status', 'customer_name', 'Delivered', 'customer_id', 'order_date']","[('customers', 't1'), ('customer_orders', 't2')]","['order_status', 'customer_name', 'Delivered', 'customer_id', 'order_date']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
7089,7089,"How many countries does each continent have? List the continent id, continent name and the number of countries.","How many [MASK] does each [MASK] have? List the [MASK] id, [MASK] name and the number of [MASK]","['How', 'many', '[MASK]', 'does', 'each', '[MASK]', 'have?', 'List', 'the', '[MASK]', 'id,', '[MASK]', 'name', 'and', 'the', 'number', 'of', '[MASK]']","SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","['COUNTRIES', 'CONTINENTS', 'Continent', 'ContId']","[('COUNTRIES', 'T2'), ('CONTINENTS', 'T1')]","['Continent', 'ContId']","as,group,join,count,select,from",True,"['group', 'count']",0.5,1.0
2640,2640,Find the names of rooms that have been reserved for more than 60 times.,Find the [MASK] of [MASK] that have been [MASK] for more than 60 times.,"['Find', 'the', '[MASK]', 'of', '[MASK]', 'that', 'have', 'been', '[MASK]', 'for', 'more', 'than', '60', 'times.']",SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60,"['Reservations', 'Rooms', 'RoomId', 'roomName', 'Room']","[('Reservations', 'T1'), ('Rooms', 'T2')]","['RoomId', 'roomName', 'Room']","as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'having']",0.8,1.0
4735,4735,Find the name and address of the customers who have both New and Pending orders.,Find the [MASK] and [MASK] of the [MASK] who have both New and [MASK] [MASK],"['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'who', 'have', 'both', 'New', 'and', '[MASK]', '[MASK]']","SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  ""New"" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  ""Pending""","['customer_orders', 'customers', 'New', 'order_status_code', 'customer_address', 'customer_name', 'Pending', 'customer_id']","[('customer_orders', 'T2'), ('customers', 'T1')]","['New', 'order_status_code', 'customer_address', 'customer_name', 'Pending', 'customer_id']","intersect,as,join,from,select,where",True,"['intersect', 'as', 'join', 'where']",1.0,1.0
1520,1520,Which customer made the largest amount of claim in a single claim? Return the customer details.,Which [MASK] made the largest [MASK] of [MASK] in a single [MASK] Return the [MASK] [MASK],"['Which', '[MASK]', 'made', 'the', 'largest', '[MASK]', 'of', '[MASK]', 'in', 'a', 'single', '[MASK]', 'Return', 'the', '[MASK]', '[MASK]']",SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers),"['policies', 'claim_headers', 'customers', 'claim_headers', 'customer_id', 'amount_claimed', 'policy_id', 'customer_details']","[('policies', 't2'), ('claim_headers', 't1'), ('customers', 't3'), ('claim_headers', '')]","['customer_id', 'amount_claimed', 'policy_id', 'customer_details']","as,join,from,select,where,max",True,"['limit', 'order', 'desc']",0.0,0.0
7465,7465,Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.,Find the [MASK] of the [MASK] who has the highest [MASK] [MASK] and [MASK] in the Australian Open [MASK],"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'has', 'the', 'highest', '[MASK]', '[MASK]', 'and', '[MASK]', 'in', 'the', 'Australian', 'Open', '[MASK]']",SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,"['matches', 'winner_rank_points', 'tourney_name', 'winner_name']","[('matches', '')]","['winner_rank_points', 'tourney_name', 'winner_name']","limit,order,where,select,desc,from",False,"['limit', 'order', 'desc', 'as', 'join']",0.75,0.6
1398,1398,Find the total credits of courses provided by different department.,Find the total [MASK] of [MASK] provided by different [MASK],"['Find', 'the', 'total', '[MASK]', 'of', '[MASK]', 'provided', 'by', 'different', '[MASK]']","SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name","['course', 'credits', 'dept_name']","[('course', '')]","['credits', 'dept_name']","select,sum,from,group",False,"['sum', 'group']",1.0,1.0
6867,6867,"For each country and airline name, how many routes are there?",For each [MASK] and [MASK] [MASK] how many [MASK] are there?,"['For', 'each', '[MASK]', 'and', '[MASK]', '[MASK]', 'how', 'many', '[MASK]', 'are', 'there?']","SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name","['routes', 'airlines', 'alid', 'country', 'name']","[('routes', 'T2'), ('airlines', 'T1')]","['alid', 'country', 'name']","as,group,join,count,select,from",True,"['count', 'group']",0.5,1.0
7688,7688,"List the contestant numbers and names, ordered by contestant name descending.",List the [MASK] [MASK] and [MASK] ordered by [MASK] [MASK] descending.,"['List', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'ordered', 'by', '[MASK]', '[MASK]', 'descending.']","SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC","['contestants', 'contestant_number', 'contestant_name']","[('contestants', '')]","['contestant_number', 'contestant_name']","select,order,desc,from",False,"['order', 'desc']",1.0,1.0
4589,4589,Show different type codes of products and the number of products with each type code.,Show different [MASK] [MASK] of [MASK] and the number of [MASK] with each [MASK] [MASK],"['Show', 'different', '[MASK]', '[MASK]', 'of', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'with', 'each', '[MASK]', '[MASK]']","SELECT Product_Type_Code ,  COUNT(*) FROM Products GROUP BY Product_Type_Code","['Products', 'Product_Type_Code']","[('Products', '')]",['Product_Type_Code'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
6558,6558,What are the distinct names of wines with prices higher than any wine from John Anthony winery.,What are the distinct [MASK] of [MASK] with [MASK] higher than any [MASK] from [MASK] [MASK] [MASK],"['What', 'are', 'the', 'distinct', '[MASK]', 'of', '[MASK]', 'with', '[MASK]', 'higher', 'than', 'any', '[MASK]', 'from', '[MASK]', '[MASK]', '[MASK]']","SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  ""John Anthony"")","['WINE', 'wine', 'Name', 'Winery', 'John Anthony', 'Price']","[('WINE', ''), ('wine', '')]","['Name', 'Winery', 'John Anthony', 'Price']","distinct,min,where,select,from",False,"['where', 'min']",0.6666666666666666,1.0
5833,5833,"For each submission, find its author and acceptance result.",For each [MASK] find its [MASK] and [MASK] [MASK],"['For', 'each', '[MASK]', 'find', 'its', '[MASK]', 'and', '[MASK]', '[MASK]']","SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID","['submission', 'acceptance', 'Result', 'Author', 'Submission_ID']","[('submission', 'T2'), ('acceptance', 'T1')]","['Result', 'Author', 'Submission_ID']","select,join,from,as",True,"['join', 'as']",1.0,1.0
4214,4214,Show the names of employees with role name Editor.,Show the [MASK] of [MASK] with [MASK] [MASK] [MASK],"['Show', 'the', '[MASK]', 'of', '[MASK]', 'with', '[MASK]', '[MASK]', '[MASK]']","SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  ""Editor""","['Employees', 'ROLES', 'role_code', 'Editor', 'role_name', 'employee_name']","[('Employees', 'T1'), ('ROLES', 'T2')]","['role_code', 'Editor', 'role_name', 'employee_name']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
2328,2328,Find all the campuses opened in 1958.,Find all the [MASK] opened in 1958.,"['Find', 'all', 'the', '[MASK]', 'opened', 'in', '1958.']",SELECT campus FROM campuses WHERE YEAR  =  1958,"['campuses', 'campus', 'YEAR']","[('campuses', '')]","['campus', 'YEAR']","select,from,where",False,['where'],1.0,1.0
7078,7078,What is the id of the pet owned by the student whose last name is 'Smith'?,What is the [MASK] of the [MASK] owned by the [MASK] whose last [MASK] is 'Smith'?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'owned', 'by', 'the', '[MASK]', 'whose', 'last', '[MASK]', 'is', ""'Smith'?""]",SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith',"['student', 'has_pet', 'Lname', 'stuid', 'petid']","[('student', 'T1'), ('has_pet', 'T2')]","['Lname', 'stuid', 'petid']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
4722,4722,Give the product id for the product that was ordered most frequently.,Give the [MASK] [MASK] for the [MASK] that was [MASK] most frequently.,"['Give', 'the', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', 'that', 'was', '[MASK]', 'most', 'frequently.']",SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1,"['order_items', 'product_id']","[('order_items', '')]",['product_id'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
5186,5186,"Find all the songs produced by artists with first name ""Marianne"".",Find all the [MASK] produced by artists with [MASK] [MASK] [MASK],"['Find', 'all', 'the', '[MASK]', 'produced', 'by', 'artists', 'with', '[MASK]', '[MASK]', '[MASK]']","SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  ""Marianne""","['Performance', 'Songs', 'Band', 'Marianne', 'bandmate', 'Title', 'firstname', 'SongId', 'id']","[('Performance', 'T1'), ('Songs', 'T3'), ('Band', 'T2')]","['Marianne', 'bandmate', 'Title', 'firstname', 'SongId', 'id']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
2937,2937,Count the number of addressed in the California district.,Count the number of [MASK] in the California [MASK],"['Count', 'the', 'number', 'of', '[MASK]', 'in', 'the', 'California', '[MASK]']",SELECT count(*) FROM address WHERE district  =  'California',"['address', 'district']","[('address', '')]",['district'],"select,count,from,where",False,"['count', 'where']",1.0,1.0
7168,7168,"Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?","Among the [MASK] that do not have the minimum [MASK] , what are the [MASK] [MASK] and [MASK] of all those with less than 4 [MASK] ?","['Among', 'the', '[MASK]', 'that', 'do', 'not', 'have', 'the', 'minimum', '[MASK]', ',', 'what', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'all', 'those', 'with', 'less', 'than', '4', '[MASK]', '?']","select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;","['car_names', 'cars_data', 'cars_data', 'cylinders', 'make', 'horsepower', 'id', 'makeid']","[('car_names', 't2'), ('cars_data', ''), ('cars_data', 't1')]","['cylinders', 'make', 'horsepower', 'id', 'makeid']","min,as,join,from,and,select,where",True,"['where', 'max']",0.2,0.5
2462,2462,What is the average rating stars and title for the oldest movie?,What is the average [MASK] [MASK] and [MASK] for the oldest [MASK],"['What', 'is', 'the', 'average', '[MASK]', '[MASK]', 'and', '[MASK]', 'for', 'the', 'oldest', '[MASK]']","SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)","['Rating', 'Movie', 'Movie', 'title', 'YEAR', 'stars', 'mID', 'year']","[('Rating', 'T1'), ('Movie', ''), ('Movie', 'T2')]","['title', 'YEAR', 'stars', 'mID', 'year']","where,min,as,join,avg,select,from",True,"['where', 'avg']",0.4,1.0
6370,6370,What is the velocity of the pilot named 'Thompson'?,What is the [MASK] of the [MASK] named 'Thompson'?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'named', ""'Thompson'?""]",SELECT avg(velocity) FROM flight WHERE pilot  =  'Thompson',"['flight', 'velocity', 'pilot']","[('flight', '')]","['velocity', 'pilot']","select,where,from,avg",False,['where'],0.5,1.0
5571,5571,Count the number of products with the 'hot' charactersitic.,Count the number of [MASK] with the 'hot' [MASK],"['Count', 'the', 'number', 'of', '[MASK]', 'with', 'the', ""'hot'"", '[MASK]']","SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  ""hot""","['CHARACTERISTICS', 'products', 'product_characteristics', 'characteristic_name', 'product_id', 'hot', 'characteristic_id']","[('CHARACTERISTICS', 't3'), ('products', 't1'), ('product_characteristics', 't2')]","['characteristic_name', 'product_id', 'hot', 'characteristic_id']","as,join,count,where,select,from",True,['count'],0.25,1.0
4866,4866,"What are the enrollments of schools whose denomination is not ""Catholic""?",What are the [MASK] of [MASK] whose [MASK] is not [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', 'is', 'not', '[MASK]']","SELECT Enrollment FROM school WHERE Denomination != ""Catholic""","['school', 'Catholic', 'Denomination', 'Enrollment']","[('school', '')]","['Catholic', 'Denomination', 'Enrollment']","select,from,where",False,['where'],1.0,1.0
6948,6948,What is the average length in feet of the bridges?,What is the average [MASK] in [MASK] of the [MASK],"['What', 'is', 'the', 'average', '[MASK]', 'in', '[MASK]', 'of', 'the', '[MASK]']",SELECT avg(length_feet) FROM bridge,"['bridge', 'length_feet']","[('bridge', '')]",['length_feet'],"select,from,avg",False,['avg'],1.0,1.0
7570,7570,When was the last transcript released?,When was the last [MASK] released?,"['When', 'was', 'the', 'last', '[MASK]', 'released?']",SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,"['Transcripts', 'transcript_date']","[('Transcripts', '')]",['transcript_date'],"limit,order,select,desc,from",False,['where'],0.0,0.0
5247,5247,"What types of vocals are used in the song ""Badlands""?",What [MASK] of [MASK] are used in the [MASK] [MASK],"['What', '[MASK]', 'of', '[MASK]', 'are', 'used', 'in', 'the', '[MASK]', '[MASK]']","SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Badlands""","['songs', 'vocals', 'songid', 'Badlands', 'title', 'TYPE']","[('songs', 'T2'), ('vocals', 'T1')]","['songid', 'Badlands', 'title', 'TYPE']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
2996,2996,What is the full name of the staff member who has rented a film to a customer with the first name April and the last name Burns?,What is the full [MASK] of the [MASK] member who has [MASK] a film to a [MASK] with the [MASK] [MASK] April and the [MASK] [MASK] Burns?,"['What', 'is', 'the', 'full', '[MASK]', 'of', 'the', '[MASK]', 'member', 'who', 'has', '[MASK]', 'a', 'film', 'to', 'a', '[MASK]', 'with', 'the', '[MASK]', '[MASK]', 'April', 'and', 'the', '[MASK]', '[MASK]', 'Burns?']","SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'","['customer', 'staff', 'rental', 'customer_id', 'staff_id', 'first_name', 'last_name']","[('customer', 'T3'), ('staff', 'T1'), ('rental', 'T2')]","['customer_id', 'staff_id', 'first_name', 'last_name']","distinct,as,join,and,where,select,from",True,"['distinct', 'as', 'join', 'where']",0.8,1.0
2917,2917,"Which authors have first name ""Amal""? List their last names.",Which [MASK] have first [MASK] [MASK] List their last [MASK],"['Which', '[MASK]', 'have', 'first', '[MASK]', '[MASK]', 'List', 'their', 'last', '[MASK]']","SELECT lname FROM authors WHERE fname  =  ""Amal""","['authors', 'fname', 'lname', 'Amal']","[('authors', '')]","['fname', 'lname', 'Amal']","select,from,where",False,"['limit', 'order', 'desc']",0.0,0.0
3323,3323,Find the first names and degree of all professors who are teaching some class in Computer Info. Systems department.,Find the first [MASK] and [MASK] of all [MASK] who are teaching some [MASK] in Computer Info. Systems [MASK],"['Find', 'the', 'first', '[MASK]', 'and', '[MASK]', 'of', 'all', '[MASK]', 'who', 'are', 'teaching', 'some', '[MASK]', 'in', 'Computer', 'Info.', 'Systems', '[MASK]']","SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'","['professor', 'employee', 'department', 'CLASS', 'emp_fname', 'prof_high_degree', 'prof_num', 'dept_code', 'dept_name', 'emp_num']","[('professor', 'T3'), ('employee', 'T2'), ('department', 'T4'), ('CLASS', 'T1')]","['emp_fname', 'prof_high_degree', 'prof_num', 'dept_code', 'dept_name', 'emp_num']","distinct,as,join,where,select,from",True,"['as', 'join']",0.5,1.0
2620,2620,Find the average and minimum price of the rooms in different decor.,Find the average and minimum [MASK] of the [MASK] in different [MASK],"['Find', 'the', 'average', 'and', 'minimum', '[MASK]', 'of', 'the', '[MASK]', 'in', 'different', '[MASK]']","SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;","['Rooms', 'decor', 'basePrice']","[('Rooms', '')]","['decor', 'basePrice']","min,group,avg,select,from",False,['avg'],0.3333333333333333,1.0
1997,1997,Show the company name and the main industry for all companies whose headquarters are not from USA.,Show the [MASK] name and the [MASK] [MASK] for all [MASK] whose [MASK] are not from USA.,"['Show', 'the', '[MASK]', 'name', 'and', 'the', '[MASK]', '[MASK]', 'for', 'all', '[MASK]', 'whose', '[MASK]', 'are', 'not', 'from', 'USA.']","SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'","['company', 'company', 'headquarters', 'main_industry']","[('company', '')]","['company', 'headquarters', 'main_industry']","select,from,where",False,['where'],1.0,1.0
4301,4301,"Count the number of members in club ""Bootup Baltimore"" whose age is above 18.",Count the [MASK] [MASK] [MASK] in [MASK] [MASK] [MASK] whose [MASK] is above 18.,"['Count', 'the', '[MASK]', '[MASK]', '[MASK]', 'in', '[MASK]', '[MASK]', '[MASK]', 'whose', '[MASK]', 'is', 'above', '18.']","SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.age  >  18","['student', 'member_of_club', 'club', 'Bootup Baltimore', 'clubname', 'clubid', 'age', 'stuid']","[('student', 't3'), ('member_of_club', 't2'), ('club', 't1')]","['Bootup Baltimore', 'clubname', 'clubid', 'age', 'stuid']","as,join,count,and,where,select,from",True,"['as', 'join', 'count', 'where']",0.8,1.0
5096,5096,How many customers do we have?,How many [MASK] do we have?,"['How', 'many', '[MASK]', 'do', 'we', 'have?']",SELECT count(*) FROM CUSTOMERS,['CUSTOMERS'],"[('CUSTOMERS', '')]",[],"select,count,from",False,['count'],1.0,1.0
3117,3117,What is the cell phone number of the student whose address has the lowest monthly rental?,What is the [MASK] phone [MASK] of the [MASK] whose [MASK] has the lowest [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'phone', '[MASK]', 'of', 'the', '[MASK]', 'whose', '[MASK]', 'has', 'the', 'lowest', '[MASK]', '[MASK]']",SELECT T2.cell_mobile_number FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id ORDER BY T1.monthly_rental ASC LIMIT 1,"['Student_Addresses', 'Students', 'student_id', 'cell_mobile_number', 'monthly_rental']","[('Student_Addresses', 'T1'), ('Students', 'T2')]","['student_id', 'cell_mobile_number', 'monthly_rental']","asc,as,join,limit,order,select,from",True,"['as', 'join', 'limit', 'order']",0.8,1.0
6816,6816,What are the countries of all airlines whose names start with Orbit?,What are the [MASK] of all [MASK] whose [MASK] start with Orbit?,"['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]', 'whose', '[MASK]', 'start', 'with', 'Orbit?']",SELECT country FROM airlines WHERE name LIKE 'Orbit%',"['airlines', 'country', 'name']","[('airlines', '')]","['country', 'name']","select,like,from,where",False,"['distinct', 'as', 'join']",0.0,0.0
1806,1806,Find the total saving balance for each account name.,Find the total [MASK] [MASK] for each [MASK] [MASK],"['Find', 'the', 'total', '[MASK]', '[MASK]', 'for', 'each', '[MASK]', '[MASK]']","SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name","['accounts', 'savings', 'custid', 'balance', 'name']","[('accounts', 'T1'), ('savings', 'T2')]","['custid', 'balance', 'name']","as,group,join,sum,select,from",True,"['sum', 'group']",0.5,1.0
4495,4495,Show the names of members and the decoration themes they have.,Show the [MASK] of [MASK] and the [MASK] [MASK] they have.,"['Show', 'the', '[MASK]', 'of', '[MASK]', 'and', 'the', '[MASK]', '[MASK]', 'they', 'have.']","SELECT T1.Name ,  T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID","['member', 'round', 'Name', 'Member_ID', 'Decoration_Theme']","[('member', 'T1'), ('round', 'T2')]","['Name', 'Member_ID', 'Decoration_Theme']","select,join,from,as",True,"['join', 'as']",1.0,1.0
1989,1989,Show the names of phones that are on market with number of shops greater than 50.,Show the [MASK] [MASK] [MASK] that are on [MASK] with number [MASK] [MASK] greater than 50.,"['Show', 'the', '[MASK]', '[MASK]', '[MASK]', 'that', 'are', 'on', '[MASK]', 'with', 'number', '[MASK]', '[MASK]', 'greater', 'than', '50.']",SELECT T3.Name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID WHERE T2.Num_of_shops  >  50,"['market', 'phone', 'phone_market', 'Name', 'Market_ID', 'Phone_ID', 'Num_of_shops']","[('market', 'T2'), ('phone', 'T3'), ('phone_market', 'T1')]","['Name', 'Market_ID', 'Phone_ID', 'Num_of_shops']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
1575,1575,Show the number of customers for each gender.,Show the number of [MASK] for each [MASK],"['Show', 'the', 'number', 'of', '[MASK]', 'for', 'each', '[MASK]']","SELECT gender ,  count(*) FROM Customers GROUP BY gender","['Customers', 'gender']","[('Customers', '')]",['gender'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
2599,2599,How many people in total can stay in the modern rooms of this inn?,How many people in total can stay in the modern [MASK] of this inn?,"['How', 'many', 'people', 'in', 'total', 'can', 'stay', 'in', 'the', 'modern', '[MASK]', 'of', 'this', 'inn?']",SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern';,"['Rooms', 'decor', 'maxOccupancy']","[('Rooms', '')]","['decor', 'maxOccupancy']","select,sum,from,where",False,"['where', 'count']",0.5,0.5
3950,3950,Find the names of all patients who have an undergoing treatment and are staying in room 111.,Find the [MASK] of all [MASK] who have an [MASK] [MASK] and are [MASK] in [MASK] 111.,"['Find', 'the', '[MASK]', 'of', 'all', '[MASK]', 'who', 'have', 'an', '[MASK]', '[MASK]', 'and', 'are', '[MASK]', 'in', '[MASK]', '111.']",SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111,"['patient', 'stay', 'undergoes', 'Stay', 'name', 'StayID', 'patient', 'room', 'SSN']","[('patient', 'T2'), ('stay', 'T3'), ('undergoes', 'T1')]","['Stay', 'name', 'StayID', 'patient', 'room', 'SSN']","distinct,as,join,where,select,from",True,"['as', 'join', 'where']",0.75,1.0
1198,1198,Show all distinct building descriptions.,Show all distinct [MASK] [MASK],"['Show', 'all', 'distinct', '[MASK]', '[MASK]']",SELECT DISTINCT building_description FROM Apartment_Buildings,"['Apartment_Buildings', 'building_description']","[('Apartment_Buildings', '')]",['building_description'],"distinct,select,from",False,['distinct'],1.0,1.0
2368,2368,"How many degrees were conferred in ""San Jose State University"" in 2000?","How many [MASK] were conferred in ""San [MASK] [MASK] [MASK] in 2000?","['How', 'many', '[MASK]', 'were', 'conferred', 'in', '""San', '[MASK]', '[MASK]', '[MASK]', 'in', '2000?']","SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  ""San Jose State University"" AND t2.year  =  2000","['campuses', 'degrees', 'San Jose State University', 'degrees', 'campus', 'id', 'year']","[('campuses', 'T1'), ('degrees', 'T2')]","['San Jose State University', 'degrees', 'campus', 'id', 'year']","as,join,from,and,select,where",True,"['as', 'join', 'and', 'where', 'sum']",1.0,0.8
3596,3596,What are the names of all singers that are from the UK and released a song in English?,What are the [MASK] of all singers that are from the UK and released a [MASK] in [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', 'singers', 'that', 'are', 'from', 'the', 'UK', 'and', 'released', 'a', '[MASK]', 'in', '[MASK]']","SELECT artist_name FROM artist WHERE country  =  ""UK"" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""english""","['song', 'artist', 'artist', 'english', 'country', 'languages', 'UK', 'artist_name']","[('song', 'T2'), ('artist', ''), ('artist', 'T1')]","['english', 'country', 'languages', 'UK', 'artist_name']","intersect,as,join,where,select,from",True,['where'],0.25,1.0
469,469,"Show first name, last name, age for all female students. Their sex is F.",Show first [MASK] last [MASK] [MASK] for all female [MASK] Their [MASK] is F.,"['Show', 'first', '[MASK]', 'last', '[MASK]', '[MASK]', 'for', 'all', 'female', '[MASK]', 'Their', '[MASK]', 'is', 'F.']","SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'","['Student', 'Age', 'Sex', 'Fname', 'Lname']","[('Student', '')]","['Age', 'Sex', 'Fname', 'Lname']","select,from,where",False,"['as', 'join', 'where']",1.0,0.3333333333333333
7341,7341,Show all template type codes and the number of documents using each type.,Show all [MASK] [MASK] [MASK] and the number of [MASK] using each [MASK],"['Show', 'all', '[MASK]', '[MASK]', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'using', 'each', '[MASK]']","SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","['Templates', 'Documents', 'template_type_code', 'template_id']","[('Templates', 'T1'), ('Documents', 'T2')]","['template_type_code', 'template_id']","as,group,join,count,select,from",True,"['count', 'group']",0.5,1.0
7908,7908,Show the names of students who have at least 2 likes.,Show the [MASK] of [MASK] who have at least 2 [MASK],"['Show', 'the', '[MASK]', 'of', '[MASK]', 'who', 'have', 'at', 'least', '2', '[MASK]']",SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,"['Highschooler', 'Likes', 'student_id', 'id', 'name']","[('Highschooler', 'T2'), ('Likes', 'T1')]","['student_id', 'id', 'name']","as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'count', 'having']",1.0,1.0
4956,4956,Find the name and training hours of players whose hours are below 1500.,Find the [MASK] and training hours of [MASK] whose hours are below 1500.,"['Find', 'the', '[MASK]', 'and', 'training', 'hours', 'of', '[MASK]', 'whose', 'hours', 'are', 'below', '1500.']","SELECT pName ,  HS FROM Player WHERE HS  <  1500","['Player', 'pName', 'HS']","[('Player', '')]","['pName', 'HS']","select,from,where",False,"['and', 'between', 'where']",1.0,0.3333333333333333
866,866,"Count the number of tracks that are of the media type ""AAC audio file"".","Count the number of [MASK] that are of the [MASK] [MASK] ""AAC [MASK] [MASK]","['Count', 'the', 'number', 'of', '[MASK]', 'that', 'are', 'of', 'the', '[MASK]', '[MASK]', '""AAC', '[MASK]', '[MASK]']","SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  ""AAC audio file""","['MEDIATYPE', 'TRACK', 'Name', 'MediaTypeId', 'AAC audio file']","[('MEDIATYPE', 'T1'), ('TRACK', 'T2')]","['Name', 'MediaTypeId', 'AAC audio file']","as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",1.0,1.0
6687,6687,What is the zip code of the customer Carole Bernhard?,What is the [MASK] [MASK] of the [MASK] [MASK] [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = ""Carole"" AND T1.last_name = ""Bernhard""","['Customers', 'Addresses', 'address_id', 'zip_postcode', 'customer_address_id', 'last_name', 'Bernhard', 'Carole', 'first_name']","[('Customers', 'T1'), ('Addresses', 'T2')]","['address_id', 'zip_postcode', 'customer_address_id', 'last_name', 'Bernhard', 'Carole', 'first_name']","as,join,from,and,select,where",True,"['as', 'join', 'where']",0.75,1.0
79,79,List the id of students who registered some courses and the number of their registered courses?,List the [MASK] of [MASK] who [MASK] some [MASK] and the number of their [MASK] [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'who', '[MASK]', 'some', '[MASK]', 'and', 'the', 'number', 'of', 'their', '[MASK]', '[MASK]']","SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id","['student_course_registrations', 'students', 'student_id']","[('student_course_registrations', 'T2'), ('students', 'T1')]",['student_id'],"as,group,join,count,select,from",True,[],,
533,533,Find the number of students who are older than 18 and do not have allergy to either food or animal.,Find the number of [MASK] who are older than 18 and do not have [MASK] to either [MASK] or [MASK],"['Find', 'the', 'number', 'of', '[MASK]', 'who', 'are', 'older', 'than', '18', 'and', 'do', 'not', 'have', '[MASK]', 'to', 'either', '[MASK]', 'or', '[MASK]']","SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""food"" OR T2.allergytype  =  ""animal"")","['Student', 'Has_allergy', 'Allergy_Type', 'Allergy', 'StuID', 'animal', 'allergytype', 'food', 'age']","[('Student', ''), ('Has_allergy', 'T1'), ('Allergy_Type', 'T2')]","['Allergy', 'StuID', 'animal', 'allergytype', 'food', 'age']","as,not,in,join,count,and,where,or,select,from",True,"['where', 'in', 'count', 'not']",0.5,1.0
1109,1109,"Return the colleges that have players who play the Midfielder position, as well as players who play the Defender position.",Return the [MASK] that have [MASK] who [MASK] the [MASK] [MASK] as well as [MASK] who [MASK] the [MASK] [MASK],"['Return', 'the', '[MASK]', 'that', 'have', '[MASK]', 'who', '[MASK]', 'the', '[MASK]', '[MASK]', 'as', 'well', 'as', '[MASK]', 'who', '[MASK]', 'the', '[MASK]', '[MASK]']","SELECT College FROM match_season WHERE POSITION  =  ""Midfielder"" INTERSECT SELECT College FROM match_season WHERE POSITION  =  ""Defender""","['match_season', 'College', 'Defender', 'Midfielder', 'POSITION']","[('match_season', '')]","['College', 'Defender', 'Midfielder', 'POSITION']","intersect,select,from,where",False,"['as', 'join', 'where']",0.5,0.3333333333333333
6601,6601,What are all locations of train stations?,What are all [MASK] of train [MASK],"['What', 'are', 'all', '[MASK]', 'of', 'train', '[MASK]']",SELECT DISTINCT LOCATION FROM station,"['station', 'LOCATION']","[('station', '')]",['LOCATION'],"distinct,select,from",False,['distinct'],1.0,1.0
2338,2338,"What is the campus fee of ""San Francisco State University"" in year 1996?","What is the [MASK] [MASK] of ""San [MASK] [MASK] [MASK] in [MASK] 1996?","['What', 'is', 'the', '[MASK]', '[MASK]', 'of', '""San', '[MASK]', '[MASK]', '[MASK]', 'in', '[MASK]', '1996?']","SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  ""San Francisco State University"" AND T2.year  =  1996","['campuses', 'csu_fees', 'campusfee', 'campus', 'id', 'San Francisco State University', 'year']","[('campuses', 'T1'), ('csu_fees', 'T2')]","['campusfee', 'campus', 'id', 'San Francisco State University', 'year']","as,join,from,and,select,where",True,"['as', 'join', 'and', 'where']",1.0,1.0
7439,7439,Find the highest rank of losers in all matches.,Find the highest [MASK] of [MASK] in all [MASK],"['Find', 'the', 'highest', '[MASK]', 'of', '[MASK]', 'in', 'all', '[MASK]']",SELECT min(loser_rank) FROM matches,"['matches', 'loser_rank']","[('matches', '')]",['loser_rank'],"select,min,from",False,"['as', 'join', 'limit', 'order', 'desc']",0.0,0.0
4466,4466,Who has friends that are older than the average age? Print their friends and their ages as well,Who has [MASK] that are older than the average age? Print their [MASK] and their [MASK] as well,"['Who', 'has', '[MASK]', 'that', 'are', 'older', 'than', 'the', 'average', 'age?', 'Print', 'their', '[MASK]', 'and', 'their', '[MASK]', 'as', 'well']","SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)","['Person', 'PersonFriend', 'person', 'friend', 'age', 'name']","[('Person', 'T1'), ('PersonFriend', 'T2'), ('person', '')]","['friend', 'age', 'name']","distinct,as,avg,join,where,select,from",True,"['distinct', 'as', 'avg', 'join', 'where']",1.0,1.0
4361,4361,"What are the ids, types, and details of the organization with the most research staff?","What are the ids, [MASK] and [MASK] of the [MASK] with the most [MASK] [MASK]","['What', 'are', 'the', 'ids,', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'most', '[MASK]', '[MASK]']","SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1","['Research_Staff', 'Organisations', 'organisation_type', 'organisation_details', 'employer_organisation_id', 'organisation_id']","[('Research_Staff', 'T2'), ('Organisations', 'T1')]","['organisation_type', 'organisation_details', 'employer_organisation_id', 'organisation_id']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
5708,5708,Find the name of the dorm with the largest capacity.,Find the [MASK] of the [MASK] with the largest [MASK],"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'largest', '[MASK]']",SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1,"['dorm', 'dorm_name', 'student_capacity']","[('dorm', '')]","['dorm_name', 'student_capacity']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
5597,5597,"Give the names, details, and data types of characteristics that are not found in any product.",Give the [MASK] [MASK] and [MASK] [MASK] of [MASK] that are not found in any [MASK],"['Give', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', '[MASK]', 'that', 'are', 'not', 'found', 'in', 'any', '[MASK]']","SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id","['product_characteristics', 'CHARACTERISTICS', 'CHARACTERISTICS', 'characteristic_name', 'characteristic_data_type', 'characteristic_id', 'other_characteristic_details']","[('product_characteristics', 't2'), ('CHARACTERISTICS', ''), ('CHARACTERISTICS', 't1')]","['characteristic_name', 'characteristic_data_type', 'characteristic_id', 'other_characteristic_details']","as,except,join,select,from",True,['except'],0.3333333333333333,1.0
164,164,What is the id of the trip that started from the station with the highest dock count?,What is the [MASK] of the [MASK] that [MASK] from the [MASK] with the highest [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', '[MASK]', 'from', 'the', '[MASK]', 'with', 'the', 'highest', '[MASK]', '[MASK]']",SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1,"['station', 'trip', 'start_station_id', 'dock_count', 'id']","[('station', 'T2'), ('trip', 'T1')]","['start_station_id', 'dock_count', 'id']","as,join,limit,order,select,desc,from",True,"['limit', 'order', 'desc']",0.6,1.0
4014,4014,List the nations that have more than two ships.,List the [MASK] that have more than two [MASK],"['List', 'the', '[MASK]', 'that', 'have', 'more', 'than', 'two', '[MASK]']",SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2,"['ship', 'Nationality']","[('ship', '')]",['Nationality'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
7266,7266,Find the cities that have more than one employee under age 30.,Find the [MASK] that have more than one [MASK] under [MASK] 30.,"['Find', 'the', '[MASK]', 'that', 'have', 'more', 'than', 'one', '[MASK]', 'under', '[MASK]', '30.']",SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,"['employee', 'city', 'age']","[('employee', '')]","['city', 'age']","group,count,having,where,select,from",False,"['as', 'group', 'join', 'count', 'having']",0.75,0.6
4569,4569,Please show each industry and the corresponding number of companies in that industry.,Please show each [MASK] and the corresponding number of [MASK] in that [MASK],"['Please', 'show', 'each', '[MASK]', 'and', 'the', 'corresponding', 'number', 'of', '[MASK]', 'in', 'that', '[MASK]']","SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry","['Companies', 'Industry']","[('Companies', '')]",['Industry'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
875,875,Please list the name and id of all artists that have at least 3 albums in alphabetical order.,Please list the [MASK] and [MASK] of all [MASK] that have at least 3 [MASK] in alphabetical order.,"['Please', 'list', 'the', '[MASK]', 'and', '[MASK]', 'of', 'all', '[MASK]', 'that', 'have', 'at', 'least', '3', '[MASK]', 'in', 'alphabetical', 'order.']","SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name","['ARTIST', 'ALBUM', 'Name', 'ArtistId', 'ArtistID']","[('ARTIST', 'T2'), ('ALBUM', 'T1')]","['Name', 'ArtistId', 'ArtistID']","as,group,join,count,order,having,select,from",True,['order'],0.16666666666666666,1.0
6341,6341,Return the party email that has used party services the greatest number of times.,Return the [MASK] [MASK] that has used [MASK] [MASK] the greatest number of times.,"['Return', 'the', '[MASK]', '[MASK]', 'that', 'has', 'used', '[MASK]', '[MASK]', 'the', 'greatest', 'number', 'of', 'times.']",SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1,"['party_services', 'parties', 'customer_id', 'party_id', 'party_email']","[('party_services', 't2'), ('parties', 't1')]","['customer_id', 'party_id', 'party_email']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc', 'as', 'join']",1.0,1.0
185,185,What are the dates that had the top 5 cloud cover rates? Also tell me the cloud cover rate.,What are the [MASK] that had the top 5 [MASK] [MASK] rates? Also tell me the [MASK] [MASK] rate.,"['What', 'are', 'the', '[MASK]', 'that', 'had', 'the', 'top', '5', '[MASK]', '[MASK]', 'rates?', 'Also', 'tell', 'me', 'the', '[MASK]', '[MASK]', 'rate.']","SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5","['weather', 'cloud_cover', 'date']","[('weather', '')]","['cloud_cover', 'date']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
2165,2165,What are the forename and surname of the driver who has the smallest laptime?,What are the [MASK] and [MASK] of the [MASK] who has the smallest [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'who', 'has', 'the', 'smallest', '[MASK]']","SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1","['laptimes', 'drivers', 'forename', 'milliseconds', 'driverid', 'surname']","[('laptimes', 'T2'), ('drivers', 'T1')]","['forename', 'milliseconds', 'driverid', 'surname']","as,join,limit,order,select,from",True,"['asc', 'limit', 'order']",0.5,0.6666666666666666
2469,2469,What are the names of all movies that were created after the most recent Steven Spielberg film?,What are the names of all [MASK] that were created after the most recent [MASK] [MASK] film?,"['What', 'are', 'the', 'names', 'of', 'all', '[MASK]', 'that', 'were', 'created', 'after', 'the', 'most', 'recent', '[MASK]', '[MASK]', 'film?']","SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  ""Steven Spielberg"")","['Movie', 'Steven Spielberg', 'director', 'YEAR', 'title']","[('Movie', '')]","['Steven Spielberg', 'director', 'YEAR', 'title']","select,max,from,where",False,['where'],0.5,1.0
1475,1475,"List the distinct names of the instructors, ordered by name.",List the distinct [MASK] of the [MASK] ordered by [MASK],"['List', 'the', 'distinct', '[MASK]', 'of', 'the', '[MASK]', 'ordered', 'by', '[MASK]']",SELECT DISTINCT name FROM  instructor ORDER BY name,"['instructor', 'name']","[('instructor', '')]",['name'],"distinct,select,order,from",False,"['distinct', 'order']",1.0,1.0
6400,6400,Count the number of documents.,Count the number of [MASK],"['Count', 'the', 'number', 'of', '[MASK]']",SELECT count(*) FROM Documents,['Documents'],"[('Documents', '')]",[],"select,count,from",False,['count'],1.0,1.0
135,135,Which bike traveled the most often in zip code 94002?,Which [MASK] traveled the most often in [MASK] [MASK] 94002?,"['Which', '[MASK]', 'traveled', 'the', 'most', 'often', 'in', '[MASK]', '[MASK]', '94002?']",SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1,"['trip', 'zip_code', 'bike_id']","[('trip', '')]","['zip_code', 'bike_id']","group,limit,count,order,where,select,desc,from",False,"['group', 'limit', 'count', 'order', 'where', 'desc']",1.0,1.0
2419,2419,What is the sex of the candidate who had the highest unsure rate?,What is the [MASK] of the [MASK] who had the highest [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'had', 'the', 'highest', '[MASK]', '[MASK]']",SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1,"['candidate', 'people', 'people_id', 'sex', 'unsure_rate']","[('candidate', 't2'), ('people', 't1')]","['people_id', 'sex', 'unsure_rate']","as,group,join,limit,order,avg,select,desc,from",True,"['limit', 'order', 'desc']",0.42857142857142855,1.0
3936,3936,What are the unique block codes that have available rooms?,What are the unique [MASK] [MASK] that have [MASK] [MASK],"['What', 'are', 'the', 'unique', '[MASK]', '[MASK]', 'that', 'have', '[MASK]', '[MASK]']",SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0,"['room', 'unavailable', 'blockcode']","[('room', '')]","['unavailable', 'blockcode']","distinct,select,from,where",False,"['distinct', 'as', 'join']",0.5,0.3333333333333333
7159,7159,How many cars have a larger accelerate than the car with the largest horsepower?,How many [MASK] have a larger [MASK] than the [MASK] with the largest [MASK],"['How', 'many', '[MASK]', 'have', 'a', 'larger', '[MASK]', 'than', 'the', '[MASK]', 'with', 'the', 'largest', '[MASK]']",SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,"['CARS_DATA', 'Horsepower', 'Accelerate']","[('CARS_DATA', '')]","['Horsepower', 'Accelerate']","limit,count,order,where,select,desc,from",False,"['limit', 'order', 'desc']",0.6,1.0
7021,7021,How many concerts occurred in 2014 or 2015?,How many [MASK] occurred in 2014 or 2015?,"['How', 'many', '[MASK]', 'occurred', 'in', '2014', 'or', '2015?']",SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,"['concert', 'YEAR']","[('concert', '')]",['YEAR'],"count,where,or,select,from",False,"['count', 'where', 'or']",1.0,1.0
5950,5950,"List all the possible ways to get to attractions, together with the number of attractions accessible by these methods.",List all the possible ways [MASK] [MASK] [MASK] [MASK] [MASK] with the number of [MASK] accessible by these methods.,"['List', 'all', 'the', 'possible', 'ways', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'with', 'the', 'number', 'of', '[MASK]', 'accessible', 'by', 'these', 'methods.']","SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There","['Tourist_Attractions', 'How_to_Get_There']","[('Tourist_Attractions', '')]",['How_to_Get_There'],"select,count,from,group",False,[],,
4422,4422,What is average age for different job title?,What is average [MASK] for different [MASK] title?,"['What', 'is', 'average', '[MASK]', 'for', 'different', '[MASK]', 'title?']","SELECT avg(age) ,  job FROM Person GROUP BY job","['Person', 'job', 'age']","[('Person', '')]","['job', 'age']","group,select,from,avg",False,"['group', 'avg']",1.0,1.0
3655,3655,What is the average height of the players from the college named 'Yale University'?,What is the average [MASK] of the [MASK] from the [MASK] [MASK] 'Yale University'?,"['What', 'is', 'the', 'average', '[MASK]', 'of', 'the', '[MASK]', 'from', 'the', '[MASK]', '[MASK]', ""'Yale"", ""University'?""]",SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';,"['college', 'player_college', 'player', 'college_id', 'height', 'name_full', 'player_id']","[('college', 'T3'), ('player_college', 'T2'), ('player', 'T1')]","['college_id', 'height', 'name_full', 'player_id']","where,as,join,avg,select,from",True,['avg'],0.25,1.0
7010,7010,Show all countries and the number of singers in each country.,Show all [MASK] and the number of [MASK] in each [MASK],"['Show', 'all', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'in', 'each', '[MASK]']","SELECT country ,  count(*) FROM singer GROUP BY country","['singer', 'country']","[('singer', '')]",['country'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
4414,4414,How old is the doctor named Zach?,How old is the doctor [MASK] Zach?,"['How', 'old', 'is', 'the', 'doctor', '[MASK]', 'Zach?']",SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach',"['Person', 'job', 'age', 'name']","[('Person', '')]","['job', 'age', 'name']","select,and,from,where",False,"['and', 'where', 'max']",1.0,0.6666666666666666
7807,7807,Count the number of countries in Asia.,[MASK] the number of [MASK] in [MASK],"['[MASK]', 'the', 'number', 'of', '[MASK]', 'in', '[MASK]']","SELECT count(*) FROM country WHERE continent  =  ""Asia""","['country', 'Asia', 'continent']","[('country', '')]","['Asia', 'continent']","select,count,from,where",False,['count'],0.5,1.0
2891,2891,"Which papers did the author ""Olin Shivers"" write? Give me the paper titles.",Which [MASK] did the [MASK] [MASK] [MASK] write? Give me the [MASK] [MASK],"['Which', '[MASK]', 'did', 'the', '[MASK]', '[MASK]', '[MASK]', 'write?', 'Give', 'me', 'the', '[MASK]', '[MASK]']","SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  ""Olin"" AND t1.lname  =  ""Shivers""","['papers', 'authors', 'authorship', 'Olin', 'paperid', 'title', 'authid', 'lname', 'Shivers', 'fname']","[('papers', 't3'), ('authors', 't1'), ('authorship', 't2')]","['Olin', 'paperid', 'title', 'authid', 'lname', 'Shivers', 'fname']","as,join,from,and,select,where",True,"['as', 'join', 'where']",0.75,1.0
2097,2097,List the names of pilots that do not have any record.,List the [MASK] of [MASK] that do not have any [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'that', 'do', 'not', 'have', 'any', '[MASK]']",SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record),"['pilot', 'pilot_record', 'Pilot_name', 'Pilot_ID']","[('pilot', ''), ('pilot_record', '')]","['Pilot_name', 'Pilot_ID']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
7540,7540,What is the program id and the summary of the degree that has the most students enrolled?,What is the [MASK] [MASK] and the [MASK] of the [MASK] that has the most [MASK] [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'and', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'has', 'the', 'most', '[MASK]', '[MASK]']","SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","['Student_Enrolment', 'Degree_Programs', 'degree_summary_name', 'degree_program_id']","[('Student_Enrolment', 'T2'), ('Degree_Programs', 'T1')]","['degree_summary_name', 'degree_program_id']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'join', 'limit', 'order', 'desc']",0.7142857142857143,1.0
3869,3869,Find the claim id and the number of settlements made for the claim with the most recent settlement date.,Find the [MASK] [MASK] and the number of [MASK] made for the [MASK] with the most recent [MASK] [MASK],"['Find', 'the', '[MASK]', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'made', 'for', 'the', '[MASK]', 'with', 'the', 'most', 'recent', '[MASK]', '[MASK]']","SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1","['Settlements', 'Claims', 'Date_Claim_Settled', 'claim_id']","[('Settlements', 'T2'), ('Claims', 'T1')]","['Date_Claim_Settled', 'claim_id']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'order', 'desc', 'as', 'join', 'count']",1.0,1.0
2574,2574,Find all the rooms that have a price higher than 160 and can accommodate more than 2 people. Report room names and ids.,Find all the [MASK] that have a [MASK] higher than 160 and can accommodate more than 2 people. Report [MASK] [MASK] and ids.,"['Find', 'all', 'the', '[MASK]', 'that', 'have', 'a', '[MASK]', 'higher', 'than', '160', 'and', 'can', 'accommodate', 'more', 'than', '2', 'people.', 'Report', '[MASK]', '[MASK]', 'and', 'ids.']","SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;","['Rooms', 'RoomId', 'maxOccupancy', 'roomName', 'basePrice']","[('Rooms', '')]","['RoomId', 'maxOccupancy', 'roomName', 'basePrice']","select,and,from,where",False,"['group', 'count', 'having']",0.0,0.0
2500,2500,What are the names and years of the movies that has the top 3 highest rating star?,What are the names and [MASK] of the [MASK] that has the top 3 highest [MASK] [MASK],"['What', 'are', 'the', 'names', 'and', '[MASK]', 'of', 'the', '[MASK]', 'that', 'has', 'the', 'top', '3', 'highest', '[MASK]', '[MASK]']","SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3","['Rating', 'Movie', 'stars', 'mID', 'title', 'year']","[('Rating', 'T1'), ('Movie', 'T2')]","['stars', 'mID', 'title', 'year']","as,join,limit,order,select,desc,from",True,"['limit', 'order', 'desc']",0.6,1.0
7393,7393,Show different hometown of teachers and the number of teachers from each hometown.,Show different [MASK] of [MASK] and the number of [MASK] from [MASK] [MASK],"['Show', 'different', '[MASK]', 'of', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'from', '[MASK]', '[MASK]']","SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown","['teacher', 'Hometown']","[('teacher', '')]",['Hometown'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
2730,2730,Find the names of the regions which were affected by the storm that killed the greatest number of people.,Find the [MASK] of the [MASK] which were [MASK] by the [MASK] that killed the greatest [MASK] of people.,"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'which', 'were', '[MASK]', 'by', 'the', '[MASK]', 'that', 'killed', 'the', 'greatest', '[MASK]', 'of', 'people.']",SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1,"['affected_region', 'storm', 'region', 'region_id', 'Number_Deaths', 'region_name', 'storm_id']","[('affected_region', 'T1'), ('storm', 'T3'), ('region', 'T2')]","['region_id', 'Number_Deaths', 'region_name', 'storm_id']","as,join,limit,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,0.7142857142857143
4558,4558,What are the names of buildings sorted in descending order of building height?,What are the [MASK] of [MASK] sorted in [MASK] order of [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'sorted', 'in', '[MASK]', 'order', 'of', '[MASK]', '[MASK]']",SELECT name FROM buildings ORDER BY Height DESC,"['buildings', 'Height', 'name']","[('buildings', '')]","['Height', 'name']","select,order,desc,from",False,['order'],0.5,1.0
1228,1228,"Show the distinct apartment numbers of the apartments that have bookings with status code ""Confirmed"".",Show the distinct [MASK] [MASK] of the [MASK] that have [MASK] with [MASK] [MASK] [MASK],"['Show', 'the', 'distinct', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'that', 'have', '[MASK]', 'with', '[MASK]', '[MASK]', '[MASK]']","SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  ""Confirmed""","['Apartments', 'Apartment_Bookings', 'Confirmed', 'apt_number', 'booking_status_code', 'apt_id']","[('Apartments', 'T2'), ('Apartment_Bookings', 'T1')]","['Confirmed', 'apt_number', 'booking_status_code', 'apt_id']","distinct,as,join,where,select,from",True,"['distinct', 'as', 'join', 'where']",1.0,1.0
7079,7079,Find the number of pets for each student who has any pet and student id.,Find the number of [MASK] for each [MASK] who [MASK] any [MASK] and [MASK] id.,"['Find', 'the', 'number', 'of', '[MASK]', 'for', 'each', '[MASK]', 'who', '[MASK]', 'any', '[MASK]', 'and', '[MASK]', 'id.']","SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","['student', 'has_pet', 'stuid']","[('student', 'T1'), ('has_pet', 'T2')]",['stuid'],"as,group,join,count,select,from",True,"['count', 'group']",0.5,1.0
4645,4645,What are the phones of departments in Room 268?,What are the [MASK] of [MASK] in [MASK] 268?,"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'in', '[MASK]', '268?']",SELECT DPhone FROM DEPARTMENT WHERE Room  =  268,"['DEPARTMENT', 'DPhone', 'Room']","[('DEPARTMENT', '')]","['DPhone', 'Room']","select,from,where",False,['where'],1.0,1.0
5467,5467,Show all the distinct president votes made on 08/30/2015.,Show all the distinct [MASK] [MASK] made on [MASK],"['Show', 'all', 'the', 'distinct', '[MASK]', '[MASK]', 'made', 'on', '[MASK]']","SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  ""08/30/2015""","['VOTING_RECORD', 'Registration_Date', 'PRESIDENT_Vote', '08/30/2015']","[('VOTING_RECORD', '')]","['Registration_Date', 'PRESIDENT_Vote', '08/30/2015']","distinct,select,from,where",False,['distinct'],0.5,1.0
5588,5588,"Find the product names that are colored 'white' but do not have unit of measurement ""Handful"".",Find the [MASK] [MASK] that are [MASK] [MASK] but do not have [MASK] [MASK] [MASK] [MASK],"['Find', 'the', '[MASK]', '[MASK]', 'that', 'are', '[MASK]', '[MASK]', 'but', 'do', 'not', 'have', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  ""white"" AND t2.unit_of_measure != ""Handful""","['ref_product_categories', 'ref_colors', 'products', 'white', 'Handful', 'product_category_code', 'color_code', 'unit_of_measure', 'product_name', 'color_description']","[('ref_product_categories', 't2'), ('ref_colors', 't3'), ('products', 't1')]","['white', 'Handful', 'product_category_code', 'color_code', 'unit_of_measure', 'product_name', 'color_description']","as,join,from,and,select,where",True,['except'],0.0,0.0
647,647,Find number of tracks in each genre?,Find number of [MASK] in each [MASK],"['Find', 'number', 'of', '[MASK]', 'in', 'each', '[MASK]']","SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;","['genres', 'tracks', 'genre_id', 'id', 'name']","[('genres', 'T1'), ('tracks', 'T2')]","['genre_id', 'id', 'name']","as,group,join,count,select,from",True,"['group', 'count']",0.5,1.0
7462,7462,Which year had the most matches?,Which [MASK] had the most [MASK],"['Which', '[MASK]', 'had', 'the', 'most', '[MASK]']",SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,"['matches', 'YEAR']","[('matches', '')]",['YEAR'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
3105,3105,Find the ids and first names of the 3 teachers that have the most number of assessment notes?,Find the [MASK] and [MASK] [MASK] of the 3 [MASK] that have the most number of [MASK] [MASK],"['Find', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', '3', '[MASK]', 'that', 'have', 'the', 'most', 'number', 'of', '[MASK]', '[MASK]']","SELECT T1.teacher_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 3","['Teachers', 'Assessment_Notes', 'teacher_id', 'first_name']","[('Teachers', 'T2'), ('Assessment_Notes', 'T1')]","['teacher_id', 'first_name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
5929,5929,What are the visit date and details of the visitor whose detail is 'Vincent'?,What are the [MASK] [MASK] and [MASK] of the [MASK] whose [MASK] is [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'whose', '[MASK]', 'is', '[MASK]']","SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  ""Vincent""","['VISITS', 'VISITORS', 'Visit_Date', 'Vincent', 'Tourist_ID', 'Visit_Details', 'Tourist_Details']","[('VISITS', 'T2'), ('VISITORS', 'T1')]","['Visit_Date', 'Vincent', 'Tourist_ID', 'Visit_Details', 'Tourist_Details']","as,join,from,select,where",True,"['where', 'as', 'join']",1.0,1.0
4955,4955,How many hours do the players train on average?,How many hours do the [MASK] train on average?,"['How', 'many', 'hours', 'do', 'the', '[MASK]', 'train', 'on', 'average?']",SELECT avg(HS) FROM Player,"['Player', 'HS']","[('Player', '')]",['HS'],"select,from,avg",False,"['sum', 'where']",0.0,0.0
2295,2295,List the names of people that are not entrepreneurs.,List the [MASK] of [MASK] that are not [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'that', 'are', 'not', '[MASK]']",SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur),"['entrepreneur', 'people', 'Name', 'People_ID']","[('entrepreneur', ''), ('people', '')]","['Name', 'People_ID']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
3038,3038,Find the name of customers who do not have an saving account.,Find the [MASK] of [MASK] who do not have an saving account.,"['Find', 'the', '[MASK]', 'of', '[MASK]', 'who', 'do', 'not', 'have', 'an', 'saving', 'account.']",SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving',"['customer', 'cust_name', 'acc_type']","[('customer', '')]","['cust_name', 'acc_type']","select,except,from,where",False,"['except', 'where']",1.0,1.0
7897,7897,What are the names of students who have no friends?,What are the [MASK] of [MASK] who have no [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'who', 'have', 'no', '[MASK]']",SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,"['Friend', 'Highschooler', 'Highschooler', 'student_id', 'id', 'name']","[('Friend', 'T1'), ('Highschooler', 'T2'), ('Highschooler', '')]","['student_id', 'id', 'name']","as,except,join,select,from",True,"['where', 'in', 'not']",0.0,0.0
691,691,How many customers do we have?,How many [MASK] do we have?,"['How', 'many', '[MASK]', 'do', 'we', 'have?']",SELECT count(*) FROM Customers,['Customers'],"[('Customers', '')]",[],"select,count,from",False,['count'],1.0,1.0
1463,1463,"What are the building, room number, semester and year of courses in the Psychology department, sorted using course title?",What are the [MASK] [MASK] [MASK] [MASK] and [MASK] of [MASK] in the Psychology [MASK] sorted using [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'in', 'the', 'Psychology', '[MASK]', 'sorted', 'using', '[MASK]', '[MASK]']","SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title","['course', 'SECTION', 'dept_name', 'title', 'course_id', 'semester', 'room_number', 'building', 'year']","[('course', 'T1'), ('SECTION', 'T2')]","['dept_name', 'title', 'course_id', 'semester', 'room_number', 'building', 'year']","as,join,from,order,select,where",True,"['order', 'where', 'as', 'join']",1.0,1.0
7787,7787,Return the different names of cities that are in Asia and for which Chinese is the official language.,Return the different [MASK] of [MASK] that are in [MASK] and for which Chinese is the [MASK] [MASK],"['Return', 'the', 'different', '[MASK]', 'of', '[MASK]', 'that', 'are', 'in', '[MASK]', 'and', 'for', 'which', 'Chinese', 'is', 'the', '[MASK]', '[MASK]']","SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  ""Asia""","['country', 'countrylanguage', 'city', 'Language', 'Name', 'Asia', 'IsOfficial', 'Continent', 'Code', 'CountryCode']","[('country', 'T1'), ('countrylanguage', 'T2'), ('city', 'T3')]","['Language', 'Name', 'Asia', 'IsOfficial', 'Continent', 'Code', 'CountryCode']","distinct,as,join,and,where,select,from",True,['distinct'],0.2,1.0
5677,5677,What is the first name of the students who are in age 20 to 25 and living in PHL city?,What is the first [MASK] of the [MASK] who are in [MASK] 20 to 25 and living in PHL [MASK],"['What', 'is', 'the', 'first', '[MASK]', 'of', 'the', '[MASK]', 'who', 'are', 'in', '[MASK]', '20', 'to', '25', 'and', 'living', 'in', 'PHL', '[MASK]']",SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25,"['student', 'fname', 'age', 'city_code']","[('student', '')]","['fname', 'age', 'city_code']","and,between,where,select,from",False,['where'],0.3333333333333333,1.0
2028,2028,What are the names of the managers for gas stations that are operated by the ExxonMobil company?,What are the [MASK] of the [MASK] for [MASK] [MASK] that are operated by the ExxonMobil [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'for', '[MASK]', '[MASK]', 'that', 'are', 'operated', 'by', 'the', 'ExxonMobil', '[MASK]']",SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil',"['gas_station', 'company', 'station_company', 'manager_name', 'company', 'company_id', 'station_id']","[('gas_station', 'T3'), ('company', 'T2'), ('station_company', 'T1')]","['manager_name', 'company', 'company_id', 'station_id']","as,join,from,select,where",True,"['where', 'as', 'join']",1.0,1.0
4312,4312,"List the clubs that have at least a member with advisor ""1121"".","List the [MASK] that have at least a [MASK] with [MASK] ""1121"".","['List', 'the', '[MASK]', 'that', 'have', 'at', 'least', 'a', '[MASK]', 'with', '[MASK]', '""1121"".']",SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121,"['student', 'member_of_club', 'club', 'clubid', 'clubname', 'advisor', 'stuid']","[('student', 't3'), ('member_of_club', 't2'), ('club', 't1')]","['clubid', 'clubname', 'advisor', 'stuid']","distinct,as,join,where,select,from",True,['where'],0.25,1.0
7985,7985,"What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.","What are the [MASK] [MASK] [MASK] and [MASK] of the [MASK] that were [MASK] Note that 1 stands for yes, and 0 stands for no in the tables.","['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'that', 'were', '[MASK]', 'Note', 'that', '1', 'stands', 'for', 'yes,', 'and', '0', 'stands', 'for', 'no', 'in', 'the', 'tables.']","SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","['Dogs', 'weight', 'abandoned_yn', 'age', 'name']","[('Dogs', '')]","['weight', 'abandoned_yn', 'age', 'name']","select,from,where",False,['where'],1.0,1.0
1276,1276,"List the season, home team, away team of all the games.",List the [MASK] [MASK] [MASK] [MASK] [MASK] of all the [MASK],"['List', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'of', 'all', 'the', '[MASK]']","SELECT season ,  home_team ,  away_team FROM game","['game', 'season', 'away_team', 'home_team']","[('game', '')]","['season', 'away_team', 'home_team']","select,from",False,[],,
543,543,Find out 5 customers who most recently purchased something. List customers' first and last name.,Find out 5 [MASK] who most recently purchased something. List [MASK] [MASK] and [MASK] [MASK],"['Find', 'out', '5', '[MASK]', 'who', 'most', 'recently', 'purchased', 'something.', 'List', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]']","SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;","['customers', 'invoices', 'last_name', 'invoice_date', 'id', 'customer_id', 'first_name']","[('customers', 'T1'), ('invoices', 'T2')]","['last_name', 'invoice_date', 'id', 'customer_id', 'first_name']","as,join,limit,order,select,desc,from",True,"['as', 'join', 'where']",0.4,0.6666666666666666
2758,2758,Show the delegates and the names of county they belong to.,Show the [MASK] and the [MASK] of [MASK] they belong to.,"['Show', 'the', '[MASK]', 'and', 'the', '[MASK]', 'of', '[MASK]', 'they', 'belong', 'to.']","SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District","['election', 'county', 'County_id', 'Delegate', 'District', 'County_name']","[('election', 'T2'), ('county', 'T1')]","['County_id', 'Delegate', 'District', 'County_name']","select,join,from,as",True,"['join', 'as']",1.0,1.0
6141,6141,Find the names of customers who ordered both products Latte and Americano.,Find the [MASK] of [MASK] who [MASK] both [MASK] Latte and Americano.,"['Find', 'the', '[MASK]', 'of', '[MASK]', 'who', '[MASK]', 'both', '[MASK]', 'Latte', 'and', 'Americano.']",SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano',"['order_items', 'customers', 'customer_orders', 'products', 'product_details', 'customer_name', 'customer_id', 'product_id', 'order_id']","[('order_items', 't3'), ('customers', 't1'), ('customer_orders', 't2'), ('products', 't4')]","['product_details', 'customer_name', 'customer_id', 'product_id', 'order_id']","intersect,as,join,from,select,where",True,"['as', 'join', 'where', 'intersect']",1.0,1.0
5584,5584,"What is the unit of measurement of product named ""cumin""?",What is the [MASK] [MASK] [MASK] [MASK] [MASK] [MASK] [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  ""cumin""","['ref_product_categories', 'products', 'unit_of_measure', 'product_name', 'product_category_code', 'cumin']","[('ref_product_categories', 't2'), ('products', 't1')]","['unit_of_measure', 'product_name', 'product_category_code', 'cumin']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
5778,5778,Which products has been complained by the customer who has filed least amount of complaints?,Which [MASK] has been [MASK] by the [MASK] who has filed least amount of [MASK],"['Which', '[MASK]', 'has', 'been', '[MASK]', 'by', 'the', '[MASK]', 'who', 'has', 'filed', 'least', 'amount', 'of', '[MASK]']",SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1,"['products', 'customers', 'complaints', 'customer_id', 'product_id', 'product_name']","[('products', 't1'), ('customers', 't3'), ('complaints', 't2')]","['customer_id', 'product_id', 'product_name']","distinct,as,group,join,limit,count,order,select,from",True,"['limit', 'order', 'group', 'count']",0.5714285714285714,1.0
4066,4066,How many students does LORIA ONDERSMA teaches?,How many [MASK] does [MASK] [MASK] [MASK],"['How', 'many', '[MASK]', 'does', '[MASK]', '[MASK]', '[MASK]']","SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""LORIA"" AND T2.lastname  =  ""ONDERSMA""","['list', 'teachers', 'firstname', 'classroom', 'lastname', 'ONDERSMA', 'LORIA']","[('list', 'T1'), ('teachers', 'T2')]","['firstname', 'classroom', 'lastname', 'ONDERSMA', 'LORIA']","as,join,count,and,where,select,from",True,"['as', 'join', 'count', 'where']",0.8,1.0
2486,2486,"For all directors who directed more than one movie, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title.","For all [MASK] who [MASK] more than one [MASK] return the [MASK] of all [MASK] [MASK] by them, along with the [MASK] name. Sort by [MASK] name, then [MASK] [MASK]","['For', 'all', '[MASK]', 'who', '[MASK]', 'more', 'than', 'one', '[MASK]', 'return', 'the', '[MASK]', 'of', 'all', '[MASK]', '[MASK]', 'by', 'them,', 'along', 'with', 'the', '[MASK]', 'name.', 'Sort', 'by', '[MASK]', 'name,', 'then', '[MASK]', '[MASK]']","SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title","['Movie', 'Movie', 'director', 'title']","[('Movie', 'T1'), ('Movie', 'T2')]","['director', 'title']","as,join,from,order,select,where",True,"['as', 'join', 'where']",0.75,1.0
7401,7401,Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.,Show [MASK] of [MASK] and the [MASK] they are [MASK] to [MASK] in ascending alphabetical order of the [MASK] [MASK],"['Show', '[MASK]', 'of', '[MASK]', 'and', 'the', '[MASK]', 'they', 'are', '[MASK]', 'to', '[MASK]', 'in', 'ascending', 'alphabetical', 'order', 'of', 'the', '[MASK]', '[MASK]']","SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","['teacher', 'course_arrange', 'course', 'Name', 'Course_ID', 'Course', 'Teacher_ID']","[('teacher', 'T3'), ('course_arrange', 'T1'), ('course', 'T2')]","['Name', 'Course_ID', 'Course', 'Teacher_ID']","as,join,order,select,from",True,"['asc', 'as', 'join', 'order']",1.0,0.75
1985,1985,Show the most frequently used carrier of the phones.,Show the most frequently used [MASK] of the [MASK],"['Show', 'the', 'most', 'frequently', 'used', '[MASK]', 'of', 'the', '[MASK]']",SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC LIMIT 1,"['phone', 'Carrier']","[('phone', '')]",['Carrier'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
5364,5364,How many problems are there for product voluptatem?,How many [MASK] are there for [MASK] [MASK],"['How', 'many', '[MASK]', 'are', 'there', 'for', '[MASK]', '[MASK]']","SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = ""voluptatem""","['product', 'problems', 'voluptatem', 'product_id', 'product_name']","[('product', 'T1'), ('problems', 'T2')]","['voluptatem', 'product_id', 'product_name']","as,join,count,where,select,from",True,"['count', 'where']",0.5,1.0
2908,2908,"Find the first names of all the authors who have written a paper with title containing the word ""Functional"".",Find the first [MASK] of all the [MASK] who have written a [MASK] with [MASK] containing the word [MASK],"['Find', 'the', 'first', '[MASK]', 'of', 'all', 'the', '[MASK]', 'who', 'have', 'written', 'a', '[MASK]', 'with', '[MASK]', 'containing', 'the', 'word', '[MASK]']","SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE ""%Functional%""","['papers', 'authors', 'authorship', '%Functional%', 'paperid', 'title', 'authid', 'fname']","[('papers', 't3'), ('authors', 't1'), ('authorship', 't2')]","['%Functional%', 'paperid', 'title', 'authid', 'fname']","like,as,join,from,select,where",True,"['like', 'as', 'join', 'where']",1.0,1.0
2998,2998,Which store has most the customers?,Which [MASK] has most the [MASK],"['Which', '[MASK]', 'has', 'most', 'the', '[MASK]']",SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1,"['customer', 'store_id']","[('customer', '')]",['store_id'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
2374,2374,"What is the number of faculty lines in campus ""Long Beach State University"" in 2002?",What is the number of [MASK] lines in [MASK] [MASK] [MASK] [MASK] [MASK] in 2002?,"['What', 'is', 'the', 'number', 'of', '[MASK]', 'lines', 'in', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'in', '2002?']","SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  ""Long Beach State University""","['faculty', 'campuses', 'faculty', 'campus', 'id', 'Long Beach State University', 'year']","[('faculty', 'T1'), ('campuses', 'T2')]","['faculty', 'campus', 'id', 'Long Beach State University', 'year']","as,join,from,and,select,where",True,"['where', 'sum']",0.25,0.5
226,226,Show different publishers together with the number of publications they have.,Show different [MASK] together with the number of [MASK] they have.,"['Show', 'different', '[MASK]', 'together', 'with', 'the', 'number', 'of', '[MASK]', 'they', 'have.']","SELECT Publisher ,  COUNT(*) FROM publication GROUP BY Publisher","['publication', 'Publisher']","[('publication', '')]",['Publisher'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
7667,7667,What is the money rank of the tallest poker player?,What is the [MASK] [MASK] of the tallest [MASK] [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', 'tallest', '[MASK]', '[MASK]']",SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,"['poker_player', 'people', 'People_ID', 'Height', 'Money_Rank']","[('poker_player', 'T2'), ('people', 'T1')]","['People_ID', 'Height', 'Money_Rank']","as,join,limit,order,select,desc,from",True,"['limit', 'order', 'desc']",0.6,1.0
553,553,List every album ordered by album title in ascending order.,List every [MASK] ordered by [MASK] [MASK] in ascending order.,"['List', 'every', '[MASK]', 'ordered', 'by', '[MASK]', '[MASK]', 'in', 'ascending', 'order.']",SELECT title FROM albums ORDER BY title;,"['albums', 'title']","[('albums', '')]",['title'],"select,order,from",False,"['order', 'asc']",1.0,0.5
4157,4157,Return the title of the film with the highest high estimate?,Return the [MASK] of the [MASK] with the [MASK] [MASK] [MASK],"['Return', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', '[MASK]', '[MASK]', '[MASK]']",SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1,"['film', 'film_market_estimation', 'Film_ID', 'high_estimate', 'title']","[('film', 'T1'), ('film_market_estimation', 'T2')]","['Film_ID', 'high_estimate', 'title']","as,join,limit,order,select,desc,from",True,['where'],0.0,0.0
2932,2932,What is the phone number and postal code of the address 1031 Daugavpils Parkway?,What is the [MASK] number and [MASK] [MASK] of the [MASK] 1031 Daugavpils Parkway?,"['What', 'is', 'the', '[MASK]', 'number', 'and', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', '1031', 'Daugavpils', 'Parkway?']","SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'","['address', 'phone', 'postal_code', 'address']","[('address', '')]","['phone', 'postal_code', 'address']","select,from,where",False,['where'],1.0,1.0
5538,5538,"Which category does the product named ""flax"" belong to?",Which [MASK] does the [MASK] [MASK] [MASK] belong to?,"['Which', '[MASK]', 'does', 'the', '[MASK]', '[MASK]', '[MASK]', 'belong', 'to?']","SELECT product_category_code FROM products WHERE product_name  =  ""flax""","['products', 'product_name', 'product_category_code', 'flax']","[('products', '')]","['product_name', 'product_category_code', 'flax']","select,from,where",False,['where'],1.0,1.0
6178,6178,"What are the famous titles and ages of each artist, listed in descending order by age?",What are the [MASK] [MASK] and [MASK] of each [MASK] listed in descending order by age?,"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'each', '[MASK]', 'listed', 'in', 'descending', 'order', 'by', 'age?']","SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC","['artist', 'Age', 'Famous_Title']","[('artist', '')]","['Age', 'Famous_Title']","select,order,desc,from",False,"['order', 'desc']",1.0,1.0
1732,1732,List the names of players that do not have coaches.,List the [MASK] of [MASK] that do not have [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'that', 'do', 'not', 'have', '[MASK]']",SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM player_coach),"['player_coach', 'player', 'Player_ID', 'Player_name']","[('player_coach', ''), ('player', '')]","['Player_ID', 'Player_name']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
2059,2059,What is the name of party with most number of members?,What is the [MASK] of [MASK] with most [MASK] of [MASK],"['What', 'is', 'the', '[MASK]', 'of', '[MASK]', 'with', 'most', '[MASK]', 'of', '[MASK]']",SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1,"['party', 'Member', 'party_id', 'party_name']","[('party', 'T2'), ('Member', 'T1')]","['party_id', 'party_name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
2020,2020,What are the headquarters that have both a company in the banking and 'oil and gas' industries?,What are the [MASK] that have both a [MASK] in the banking and 'oil and gas' [MASK],"['What', 'are', 'the', '[MASK]', 'that', 'have', 'both', 'a', '[MASK]', 'in', 'the', 'banking', 'and', ""'oil"", 'and', ""gas'"", '[MASK]']",SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas',"['company', 'main_industry', 'headquarters']","[('company', '')]","['main_industry', 'headquarters']","intersect,and,where,select,from",False,"['intersect', 'and', 'where']",1.0,1.0
4003,4003,What are the types and nationalities of every ship?,What are the [MASK] and [MASK] of every [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', 'every', '[MASK]']","SELECT TYPE ,  Nationality FROM ship","['ship', 'Nationality', 'TYPE']","[('ship', '')]","['Nationality', 'TYPE']","select,from",False,[],,
6299,6299,Which cities have regional population above 8000000 or below 5000000?,Which [MASK] have [MASK] [MASK] above 8000000 or below 5000000?,"['Which', '[MASK]', 'have', '[MASK]', '[MASK]', 'above', '8000000', 'or', 'below', '5000000?']",SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000,"['city', 'city', 'regional_population']","[('city', '')]","['city', 'regional_population']","select,union,from,where",False,['where'],0.5,1.0
3868,3868,How many settlements were made on the claim with the most recent claim settlement date? List the number and the claim id.,How many [MASK] were made on the [MASK] with the most recent [MASK] [MASK] [MASK] List the number and the [MASK] id.,"['How', 'many', '[MASK]', 'were', 'made', 'on', 'the', '[MASK]', 'with', 'the', 'most', 'recent', '[MASK]', '[MASK]', '[MASK]', 'List', 'the', 'number', 'and', 'the', '[MASK]', 'id.']","SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1","['Settlements', 'Claims', 'Date_Claim_Settled', 'claim_id']","[('Settlements', 'T2'), ('Claims', 'T1')]","['Date_Claim_Settled', 'claim_id']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
7612,7612,"What is the title of all the cartools that are on the TV Channel with the series name ""Sky Radio""?","What is the [MASK] of all the [MASK] that are on the TV [MASK] with the [MASK] [MASK] ""Sky [MASK]","['What', 'is', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', 'that', 'are', 'on', 'the', 'TV', '[MASK]', 'with', 'the', '[MASK]', '[MASK]', '""Sky', '[MASK]']","SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","['Cartoon', 'TV_Channel', 'Sky Radio', 'Title', 'series_name', 'id', 'Channel']","[('Cartoon', 'T2'), ('TV_Channel', 'T1')]","['Sky Radio', 'Title', 'series_name', 'id', 'Channel']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
7484,7484,What are the names and ranks of the three youngest winners across all matches?,What are the [MASK] and [MASK] of the three youngest [MASK] across all [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', 'three', 'youngest', '[MASK]', 'across', 'all', '[MASK]']","SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","['matches', 'winner_rank', 'winner_name', 'winner_age']","[('matches', '')]","['winner_rank', 'winner_name', 'winner_age']","distinct,limit,order,select,from",False,"['limit', 'order']",0.6666666666666666,1.0
1839,1839,List the names of the browser that are compatible with both 'CACHEbox' and 'Fasterfox'.,List the [MASK] of the [MASK] that are [MASK] with both 'CACHEbox' and 'Fasterfox'.,"['List', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'are', '[MASK]', 'with', 'both', ""'CACHEbox'"", 'and', ""'Fasterfox'.""]",SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox',"['web_client_accelerator', 'browser', 'accelerator_compatible_browser', 'browser_id', 'id', 'accelerator_id', 'name']","[('web_client_accelerator', 'T1'), ('browser', 'T3'), ('accelerator_compatible_browser', 'T2')]","['browser_id', 'id', 'accelerator_id', 'name']","intersect,as,join,from,select,where",True,[],,
5085,5085,Which locations contains both shops that opened after the year 2012 and shops that opened before 2008?,Which [MASK] contains both [MASK] that [MASK] after the [MASK] 2012 and [MASK] that [MASK] before 2008?,"['Which', '[MASK]', 'contains', 'both', '[MASK]', 'that', '[MASK]', 'after', 'the', '[MASK]', '2012', 'and', '[MASK]', 'that', '[MASK]', 'before', '2008?']",SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008,"['shop', 'LOCATION', 'Open_Year']","[('shop', '')]","['LOCATION', 'Open_Year']","intersect,select,from,where",False,"['intersect', 'where']",1.0,1.0
7647,7647,How many poker players are there?,How many [MASK] [MASK] are there?,"['How', 'many', '[MASK]', '[MASK]', 'are', 'there?']",SELECT count(*) FROM poker_player,['poker_player'],"[('poker_player', '')]",[],"select,count,from",False,['count'],1.0,1.0
2107,2107,What is the role of the employee named Koby?,What is the [MASK] of the [MASK] [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = ""Koby"";","['Employees', 'ROLES', 'role_code', 'role_description', 'employee_name', 'Koby']","[('Employees', 'T2'), ('ROLES', 'T1')]","['role_code', 'role_description', 'employee_name', 'Koby']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
3941,3941,List the names of all the physicians who prescribe Thesisin as medication.,List the [MASK] of all the [MASK] who [MASK] [MASK] as [MASK],"['List', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', 'who', '[MASK]', '[MASK]', 'as', '[MASK]']","SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  ""Thesisin""","['physician', 'prescribes', 'medication', 'employeeid', 'physician', 'name', 'Thesisin', 'code', 'medication']","[('physician', 'T1'), ('prescribes', 'T2'), ('medication', 'T3')]","['employeeid', 'physician', 'name', 'Thesisin', 'code', 'medication']","distinct,as,join,where,select,from",True,"['as', 'join', 'where']",0.75,1.0
3933,3933,How many rooms does each block floor have?,How many [MASK] does each [MASK] [MASK] have?,"['How', 'many', '[MASK]', 'does', 'each', '[MASK]', '[MASK]', 'have?']","SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor","['BLOCK', 'room', 'blockfloor', 'blockcode']","[('BLOCK', 'T1'), ('room', 'T2')]","['blockfloor', 'blockcode']","as,group,join,count,and,select,from",True,"['count', 'group']",0.4,1.0
661,661,Show the names of editors that are on the committee of journals with sales bigger than 3000.,Show the [MASK] of [MASK] that are on the [MASK] of [MASK] with [MASK] bigger than 3000.,"['Show', 'the', '[MASK]', 'of', '[MASK]', 'that', 'are', 'on', 'the', '[MASK]', 'of', '[MASK]', 'with', '[MASK]', 'bigger', 'than', '3000.']",SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID WHERE T3.Sales  >  3000,"['editor', 'journal_committee', 'journal', 'Name', 'Editor_ID', 'Sales', 'Journal_ID']","[('editor', 'T2'), ('journal_committee', 'T1'), ('journal', 'T3')]","['Name', 'Editor_ID', 'Sales', 'Journal_ID']","as,join,from,select,where",True,"['where', 'as', 'join']",1.0,1.0
1635,1635,Show the name and opening year for three churches that opened most recently.,Show the [MASK] and [MASK] year for three [MASK] that [MASK] most recently.,"['Show', 'the', '[MASK]', 'and', '[MASK]', 'year', 'for', 'three', '[MASK]', 'that', '[MASK]', 'most', 'recently.']","SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3","['church', 'open_date', 'name']","[('church', '')]","['open_date', 'name']","limit,order,select,desc,from",False,[],,
348,348,What are the ids of all aircrafts that can cover a distance of more than 1000?,What are the [MASK] of all [MASK] that can cover a [MASK] of more than 1000?,"['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]', 'that', 'can', 'cover', 'a', '[MASK]', 'of', 'more', 'than', '1000?']",SELECT aid FROM Aircraft WHERE distance  >  1000,"['Aircraft', 'aid', 'distance']","[('Aircraft', '')]","['aid', 'distance']","select,from,where",False,"['as', 'join', 'where', 'count']",1.0,0.25
5670,5670,Find the name of dorms that can accommodate more than 300 students.,Find the [MASK] of [MASK] that can accommodate more than 300 [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', 'that', 'can', 'accommodate', 'more', 'than', '300', '[MASK]']",SELECT dorm_name FROM dorm WHERE student_capacity  >  300,"['dorm', 'dorm_name', 'student_capacity']","[('dorm', '')]","['dorm_name', 'student_capacity']","select,from,where",False,"['where', 'as', 'join']",1.0,0.3333333333333333
297,297,"Find the name of the user who tweeted more than once, and number of tweets tweeted by them.","Find the [MASK] of the [MASK] who [MASK] more than once, and number of [MASK] [MASK] by them.","['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', '[MASK]', 'more', 'than', 'once,', 'and', 'number', 'of', '[MASK]', '[MASK]', 'by', 'them.']","SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1","['user_profiles', 'tweets', 'uid', 'name']","[('user_profiles', 'T1'), ('tweets', 'T2')]","['uid', 'name']","as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'count', 'having']",1.0,1.0
6310,6310,List all the types of forms.,List all the [MASK] of [MASK],"['List', 'all', 'the', '[MASK]', 'of', '[MASK]']",SELECT DISTINCT form_type_code FROM forms,"['forms', 'form_type_code']","[('forms', '')]",['form_type_code'],"distinct,select,from",False,[],,
5976,5976,What are the names of all the video games and their types in alphabetical order?,What are the [MASK] of all the [MASK] [MASK] and their [MASK] in alphabetical order?,"['What', 'are', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', '[MASK]', 'and', 'their', '[MASK]', 'in', 'alphabetical', 'order?']","SELECT gname ,  gtype FROM Video_games ORDER BY gname","['Video_games', 'gname', 'gtype']","[('Video_games', '')]","['gname', 'gtype']","select,order,from",False,['order'],1.0,1.0
7509,7509,How many courses in total are listed?,How many [MASK] in total are listed?,"['How', 'many', '[MASK]', 'in', 'total', 'are', 'listed?']",SELECT count(*) FROM Courses,['Courses'],"[('Courses', '')]",[],"select,count,from",False,['count'],1.0,1.0
2583,2583,"Return the name, rate, check in and check out date for the room with the highest rate.",Return the [MASK] [MASK] [MASK] in and [MASK] out date for the [MASK] with the highest [MASK],"['Return', 'the', '[MASK]', '[MASK]', '[MASK]', 'in', 'and', '[MASK]', 'out', 'date', 'for', 'the', '[MASK]', 'with', 'the', 'highest', '[MASK]']","SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;","['Reservations', 'Rooms', 'roomName', 'Rate', 'RoomId', 'CheckOut', 'CheckIn', 'Room']","[('Reservations', 'T1'), ('Rooms', 'T2')]","['roomName', 'Rate', 'RoomId', 'CheckOut', 'CheckIn', 'Room']","as,group,join,limit,order,select,desc,from",True,"['limit', 'order', 'desc']",0.5,1.0
3618,3618,What are the ids of all songs that have higher resolution of the average resolution in the modern genre?,What are the [MASK] of all [MASK] that have higher [MASK] of the average [MASK] in the [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]', 'that', 'have', 'higher', '[MASK]', 'of', 'the', 'average', '[MASK]', 'in', 'the', '[MASK]', '[MASK]']","SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  ""modern"")","['song', 'genre_is', 'f_id', 'resolution', 'modern']","[('song', '')]","['genre_is', 'f_id', 'resolution', 'modern']","select,avg,from,where",False,"['avg', 'where']",1.0,1.0
4300,4300,"How many members of ""Bootup Baltimore"" are older than 18?",How many [MASK] [MASK] [MASK] [MASK] are older than 18?,"['How', 'many', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'are', 'older', 'than', '18?']","SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.age  >  18","['student', 'member_of_club', 'club', 'Bootup Baltimore', 'clubname', 'clubid', 'age', 'stuid']","[('student', 't3'), ('member_of_club', 't2'), ('club', 't1')]","['Bootup Baltimore', 'clubname', 'clubid', 'age', 'stuid']","as,join,count,and,where,select,from",True,"['count', 'where']",0.4,1.0
5829,5829,Which college has the most authors with submissions?,Which [MASK] has the most authors with [MASK],"['Which', '[MASK]', 'has', 'the', 'most', 'authors', 'with', '[MASK]']",SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1,"['submission', 'College']","[('submission', '')]",['College'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
5002,5002,Find the name and hours of the students whose tryout decision is yes.,Find the [MASK] and hours of the [MASK] whose [MASK] [MASK] is yes.,"['Find', 'the', '[MASK]', 'and', 'hours', 'of', 'the', '[MASK]', 'whose', '[MASK]', '[MASK]', 'is', 'yes.']","SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'","['tryout', 'player', 'pID', 'pName', 'decision', 'HS']","[('tryout', 'T2'), ('player', 'T1')]","['pID', 'pName', 'decision', 'HS']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
5009,5009,In which state is the college that Charles attends?,In which [MASK] is the [MASK] that Charles attends?,"['In', 'which', '[MASK]', 'is', 'the', '[MASK]', 'that', 'Charles', 'attends?']",SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles',"['college', 'tryout', 'player', 'pID', 'pName', 'state', 'cName']","[('college', 'T1'), ('tryout', 'T2'), ('player', 'T3')]","['pID', 'pName', 'state', 'cName']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
3677,3677,What is the total salary paid by team Boston Red Stockings in 2010?,What is the total [MASK] paid by [MASK] Boston Red Stockings in 2010?,"['What', 'is', 'the', 'total', '[MASK]', 'paid', 'by', '[MASK]', 'Boston', 'Red', 'Stockings', 'in', '2010?']",SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2010,"['team', 'salary', 'team_id', 'name', 'salary', 'year', 'team_id_br']","[('team', 'T2'), ('salary', 'T1')]","['team_id', 'name', 'salary', 'year', 'team_id_br']","as,join,sum,and,where,select,from",True,"['as', 'join', 'sum', 'and', 'where', 'between']",1.0,0.8333333333333334
2402,2402,"Please list support, consider, and oppose rates for each candidate in ascending order by unsure rate.",Please list [MASK] [MASK] and [MASK] [MASK] for each [MASK] in ascending order by [MASK] [MASK],"['Please', 'list', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'each', '[MASK]', 'in', 'ascending', 'order', 'by', '[MASK]', '[MASK]']","SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate","['candidate', 'unsure_rate', 'Support_rate', 'Oppose_rate', 'Consider_rate']","[('candidate', '')]","['unsure_rate', 'Support_rate', 'Oppose_rate', 'Consider_rate']","select,order,from",False,"['asc', 'order']",1.0,0.5
6330,6330,Find the name of all the cities and states.,Find the name of all the [MASK] and [MASK],"['Find', 'the', 'name', 'of', 'all', 'the', '[MASK]', 'and', '[MASK]']",SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses,"['addresses', 'state_province_county', 'town_city']","[('addresses', '')]","['state_province_county', 'town_city']","select,from,union",False,"['distinct', 'where']",0.0,0.0
6921,6921,Find the ids of orders which are shipped after 2000-01-01.,Find the [MASK] of [MASK] which are [MASK] after [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', 'which', 'are', '[MASK]', 'after', '[MASK]']","SELECT order_id FROM shipments WHERE shipment_date > ""2000-01-01""","['shipments', 'shipment_date', 'order_id', '2000-01-01']","[('shipments', '')]","['shipment_date', 'order_id', '2000-01-01']","select,from,where",False,['where'],1.0,1.0
7960,7960,List the last name of the owner owning the youngest dog.,List the [MASK] [MASK] of the [MASK] owning the youngest dog.,"['List', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'owning', 'the', 'youngest', 'dog.']",SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),"['Dogs', 'Owners', 'Dogs', 'owner_id', 'age', 'last_name']","[('Dogs', 'T2'), ('Owners', 'T1'), ('Dogs', '')]","['owner_id', 'age', 'last_name']","as,join,from,select,where,max",True,['max'],0.25,1.0
7687,7687,How many states are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM area_code_state,['area_code_state'],"[('area_code_state', '')]",[],"select,count,from",False,['count'],1.0,1.0
1033,1033,Find the name of the company that has the least number of phone models. List the company name and the number of phone model produced by that company.,Find the [MASK] of the [MASK] that has the least number of [MASK] models. List the [MASK] [MASK] and the number of [MASK] model produced by that [MASK],"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'has', 'the', 'least', 'number', 'of', '[MASK]', 'models.', 'List', 'the', '[MASK]', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'model', 'produced', 'by', 'that', '[MASK]']","SELECT Company_name ,  count(*) FROM phone GROUP BY Company_name ORDER BY count(*) ASC LIMIT 1;","['phone', 'Company_name']","[('phone', '')]",['Company_name'],"asc,group,limit,count,order,select,from",False,"['as', 'group', 'join', 'limit', 'count', 'order', 'asc']",1.0,0.7142857142857143
6154,6154,What are the dates of ceremony and results for each music festival?,What are the [MASK] [MASK] [MASK] and [MASK] for each [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'for', 'each', '[MASK]', '[MASK]']","SELECT Date_of_ceremony ,  RESULT FROM music_festival","['music_festival', 'Date_of_ceremony', 'RESULT']","[('music_festival', '')]","['Date_of_ceremony', 'RESULT']","select,from",False,[],,
4687,4687,Find the department name and room of the course INTRODUCTION TO COMPUTER SCIENCE.,Find the [MASK] [MASK] and [MASK] of the [MASK] [MASK] TO [MASK] [MASK],"['Find', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'TO', '[MASK]', '[MASK]']","SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  ""INTRODUCTION TO COMPUTER SCIENCE""","['DEPARTMENT', 'COURSE', 'Dname', 'CName', 'DNO', 'INTRODUCTION TO COMPUTER SCIENCE', 'Room']","[('DEPARTMENT', 'T2'), ('COURSE', 'T1')]","['Dname', 'CName', 'DNO', 'INTRODUCTION TO COMPUTER SCIENCE', 'Room']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
5400,5400,How many branches where have more than average number of memberships are there?,How many [MASK] where have more than average [MASK] of [MASK] are there?,"['How', 'many', '[MASK]', 'where', 'have', 'more', 'than', 'average', '[MASK]', 'of', '[MASK]', 'are', 'there?']",SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch),"['branch', 'membership_amount']","[('branch', '')]",['membership_amount'],"where,count,avg,select,from",False,"['avg', 'count', 'where']",1.0,1.0
3702,3702,Find the team that attended the least number of home games in 1980.,Find the [MASK] that [MASK] the least number of [MASK] [MASK] in 1980.,"['Find', 'the', '[MASK]', 'that', '[MASK]', 'the', 'least', 'number', 'of', '[MASK]', '[MASK]', 'in', '1980.']",SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;,"['team', 'home_game', 'team_id', 'name', 'attendance', 'year', 'team_id_br']","[('team', 'T2'), ('home_game', 'T1')]","['team_id', 'name', 'attendance', 'year', 'team_id_br']","asc,as,join,limit,from,order,select,where",True,"['asc', 'as', 'join', 'limit', 'order']",0.8333333333333334,1.0
3817,3817,"List the subject ID, name of subject and the number of courses available for each subject in ascending order of the course counts.","List the [MASK] ID, [MASK] of [MASK] and the number of [MASK] available for each [MASK] in ascending order of the [MASK] counts.","['List', 'the', '[MASK]', 'ID,', '[MASK]', 'of', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'available', 'for', 'each', '[MASK]', 'in', 'ascending', 'order', 'of', 'the', '[MASK]', 'counts.']","SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC","['Subjects', 'Courses', 'subject_name', 'subject_id']","[('Subjects', 'T2'), ('Courses', 'T1')]","['subject_name', 'subject_id']","asc,as,group,join,count,order,select,from",True,"['count', 'group', 'as', 'join']",0.6666666666666666,1.0
5866,5866,Show the average transaction amount for different transaction types.,Show the average [MASK] [MASK] for different [MASK] [MASK],"['Show', 'the', 'average', '[MASK]', '[MASK]', 'for', 'different', '[MASK]', '[MASK]']","SELECT transaction_type_code ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code","['TRANSACTIONS', 'amount_of_transaction', 'transaction_type_code']","[('TRANSACTIONS', '')]","['amount_of_transaction', 'transaction_type_code']","group,select,from,avg",False,"['group', 'avg']",1.0,1.0
1233,1233,"What are the guest first name, start date, and end date of each apartment booking?",What are the [MASK] [MASK] [MASK] [MASK] [MASK] and end [MASK] of each [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', 'end', '[MASK]', 'of', 'each', '[MASK]', '[MASK]']","SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id","['Guests', 'Apartment_Bookings', 'guest_first_name', 'booking_start_date', 'guest_id']","[('Guests', 'T2'), ('Apartment_Bookings', 'T1')]","['guest_first_name', 'booking_start_date', 'guest_id']","select,join,from,as",True,"['join', 'as']",1.0,1.0
7615,7615,List top 3 highest Rating  TV series. List the TV series's Episode and Rating.,List top 3 highest [MASK] TV [MASK] List the TV [MASK] [MASK] and [MASK],"['List', 'top', '3', 'highest', '[MASK]', 'TV', '[MASK]', 'List', 'the', 'TV', '[MASK]', '[MASK]', 'and', '[MASK]']","SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","['TV_series', 'Rating', 'Episode']","[('TV_series', '')]","['Rating', 'Episode']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
6699,6699,How many lessons have been cancelled?,How many [MASK] have been [MASK],"['How', 'many', '[MASK]', 'have', 'been', '[MASK]']","SELECT count(*) FROM Lessons WHERE lesson_status_code = ""Cancelled"";","['Lessons', 'lesson_status_code', 'Cancelled']","[('Lessons', '')]","['lesson_status_code', 'Cancelled']","select,count,from,where",False,"['distinct', 'count']",0.5,0.5
6433,6433,List ids and details for all projects.,List [MASK] and [MASK] for all [MASK],"['List', '[MASK]', 'and', '[MASK]', 'for', 'all', '[MASK]']","SELECT project_id ,  project_details FROM Projects","['Projects', 'project_details', 'project_id']","[('Projects', '')]","['project_details', 'project_id']","select,from",False,"['join', 'as']",,
3800,3800,List each test result and its count in descending order of count.,List each [MASK] [MASK] and its count in descending order of count.,"['List', 'each', '[MASK]', '[MASK]', 'and', 'its', 'count', 'in', 'descending', 'order', 'of', 'count.']","SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC","['Student_Tests_Taken', 'test_result']","[('Student_Tests_Taken', '')]",['test_result'],"group,count,order,select,desc,from",False,"['group', 'count', 'order', 'desc']",1.0,1.0
6571,6571,What are the average prices and cases of wines produced in the year of 2009 and made of Zinfandel grape?,What are the average [MASK] and [MASK] of [MASK] produced in the [MASK] of 2009 and made of [MASK] [MASK],"['What', 'are', 'the', 'average', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'produced', 'in', 'the', '[MASK]', 'of', '2009', 'and', 'made', 'of', '[MASK]', '[MASK]']","SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  ""Zinfandel""","['WINE', 'Zinfandel', 'YEAR', 'Price', 'Grape', 'Cases']","[('WINE', '')]","['Zinfandel', 'YEAR', 'Price', 'Grape', 'Cases']","from,and,avg,select,where",False,"['where', 'as', 'join', 'avg']",0.6666666666666666,0.5
1585,1585,Show ids for all transactions whose amounts are greater than the average.,Show [MASK] for all [MASK] whose [MASK] are greater than the average.,"['Show', '[MASK]', 'for', 'all', '[MASK]', 'whose', '[MASK]', 'are', 'greater', 'than', 'the', 'average.']",SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions),"['Financial_transactions', 'transaction_amount', 'transaction_id']","[('Financial_transactions', '')]","['transaction_amount', 'transaction_id']","select,avg,from,where",False,"['avg', 'where']",1.0,1.0
5913,5913,What are the star rating descriptions of the hotels with price above 10000?,What are the [MASK] [MASK] [MASK] of the [MASK] with [MASK] above 10000?,"['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'with', '[MASK]', 'above', '10000?']",SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000,"['HOTELS', 'Ref_Hotel_Star_Ratings', 'star_rating_code', 'star_rating_description', 'price_range']","[('HOTELS', 'T1'), ('Ref_Hotel_Star_Ratings', 'T2')]","['star_rating_code', 'star_rating_description', 'price_range']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
1946,1946,What are the title and director of each film?,What are the [MASK] and [MASK] of each [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', 'each', '[MASK]']","SELECT title ,  directed_by FROM film","['film', 'directed_by', 'title']","[('film', '')]","['directed_by', 'title']","select,from",False,[],,
6233,6233,Give the classes that have more than two captains.,Give the [MASK] that have more than two [MASK],"['Give', 'the', '[MASK]', 'that', 'have', 'more', 'than', 'two', '[MASK]']",SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2,"['captain', 'CLASS']","[('captain', '')]",['CLASS'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
1591,1591,Show the account id with most number of transactions.,Show the [MASK] [MASK] with most number of [MASK],"['Show', 'the', '[MASK]', '[MASK]', 'with', 'most', 'number', 'of', '[MASK]']",SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1,"['Financial_transactions', 'account_id']","[('Financial_transactions', '')]",['account_id'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
4217,4217,"What are the employee ids of the employees whose role name is ""Human Resource"" or ""Manager""?",What are the [MASK] [MASK] of the [MASK] whose [MASK] [MASK] is [MASK] [MASK] or [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'whose', '[MASK]', '[MASK]', 'is', '[MASK]', '[MASK]', 'or', '[MASK]']","SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  ""Human Resource"" OR T2.role_name  =  ""Manager""","['Employees', 'ROLES', 'role_code', 'Human Resource', 'employee_id', 'Manager', 'role_name']","[('Employees', 'T1'), ('ROLES', 'T2')]","['role_code', 'Human Resource', 'employee_id', 'Manager', 'role_name']","as,join,from,or,select,where",True,"['or', 'where']",0.5,1.0
656,656,Please show the most common age of editors.,Please show the most common [MASK] of [MASK],"['Please', 'show', 'the', 'most', 'common', '[MASK]', 'of', '[MASK]']",SELECT Age FROM editor GROUP BY Age ORDER BY COUNT(*) DESC LIMIT 1,"['editor', 'Age']","[('editor', '')]",['Age'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
5887,5887,What are the price ranges of hotels?,What are the [MASK] [MASK] of [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'of', '[MASK]']",SELECT price_range FROM HOTELS,"['HOTELS', 'price_range']","[('HOTELS', '')]",['price_range'],"select,from",False,"['join', 'as']",,
2199,2199,List the forenames of all distinct drivers in alphabetical order?,List the [MASK] of all distinct [MASK] in alphabetical order?,"['List', 'the', '[MASK]', 'of', 'all', 'distinct', '[MASK]', 'in', 'alphabetical', 'order?']",SELECT DISTINCT forename FROM drivers ORDER BY forename ASC,"['drivers', 'forename']","[('drivers', '')]",['forename'],"distinct,asc,order,select,from",False,"['distinct', 'order']",0.6666666666666666,1.0
7730,7730,What is the average GNP and total population in all nations whose government is US territory?,What is the average GNP and total [MASK] in all [MASK] whose [MASK] is US [MASK],"['What', 'is', 'the', 'average', 'GNP', 'and', 'total', '[MASK]', 'in', 'all', '[MASK]', 'whose', '[MASK]', 'is', 'US', '[MASK]']","SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""","['country', 'US Territory', 'GNP', 'population', 'GovernmentForm']","[('country', '')]","['US Territory', 'GNP', 'population', 'GovernmentForm']","sum,from,avg,select,where",False,"['sum', 'avg', 'where']",1.0,1.0
3184,3184,What is the school code of the accounting department?,What is the [MASK] [MASK] of the [MASK] [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', '[MASK]']","SELECT school_code FROM department WHERE dept_name  =  ""Accounting""","['department', 'school_code', 'Accounting', 'dept_name']","[('department', '')]","['school_code', 'Accounting', 'dept_name']","select,from,where",False,"['as', 'join', 'where']",1.0,0.3333333333333333
6203,6203,How many roller coasters are there?,How many [MASK] [MASK] are there?,"['How', 'many', '[MASK]', '[MASK]', 'are', 'there?']",SELECT count(*) FROM roller_coaster,['roller_coaster'],"[('roller_coaster', '')]",[],"select,count,from",False,['count'],1.0,1.0
1896,1896,List all the names of schools with an endowment amount smaller than or equal to 10.,List all the [MASK] of [MASK] with an [MASK] [MASK] smaller than or equal to 10.,"['List', 'all', 'the', '[MASK]', 'of', '[MASK]', 'with', 'an', '[MASK]', '[MASK]', 'smaller', 'than', 'or', 'equal', 'to', '10.']",SELECT T2.school_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T1.school_id HAVING sum(T1.amount)  <=  10,"['endowment', 'school', 'school_name', 'amount', 'school_id']","[('endowment', 'T1'), ('school', 'T2')]","['school_name', 'amount', 'school_id']","as,group,join,sum,having,select,from",True,"['where', 'as', 'join']",0.4,0.6666666666666666
6034,6034,How many different students play games?,How many different [MASK] [MASK] [MASK],"['How', 'many', 'different', '[MASK]', '[MASK]', '[MASK]']",SELECT count(DISTINCT StuID) FROM Plays_games,"['Plays_games', 'StuID']","[('Plays_games', '')]",['StuID'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
3558,3558,What countries are the female artists who sung in the language Bangla from?,What [MASK] are the [MASK] [MASK] who sung in the [MASK] [MASK] from?,"['What', '[MASK]', 'are', 'the', '[MASK]', '[MASK]', 'who', 'sung', 'in', 'the', '[MASK]', '[MASK]', 'from?']","SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  ""Female"" AND T2.languages  =  ""bangla""","['song', 'artist', 'bangla', 'country', 'Female', 'languages', 'gender', 'artist_name']","[('song', 'T2'), ('artist', 'T1')]","['bangla', 'country', 'Female', 'languages', 'gender', 'artist_name']","as,join,from,and,select,where",True,"['or', 'where', 'as', 'join']",0.75,0.75
4226,4226,Show the location codes and the number of documents in each location.,Show the [MASK] [MASK] and the number of [MASK] in each [MASK],"['Show', 'the', '[MASK]', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'in', 'each', '[MASK]']","SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code","['Document_locations', 'location_code']","[('Document_locations', '')]",['location_code'],"select,count,from,group",False,"['count', 'group', 'as', 'join']",1.0,0.5
5581,5581,What is the description of the product category with the code 'Spices'?,What is the [MASK] of the [MASK] [MASK] with the [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'with', 'the', '[MASK]', '[MASK]']","SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  ""Spices""","['ref_product_categories', 'product_category_description', 'Spices', 'product_category_code']","[('ref_product_categories', '')]","['product_category_description', 'Spices', 'product_category_code']","select,from,where",False,['where'],1.0,1.0
1722,1722,"List the name and residence for players whose occupation is not ""Researcher"".",List the [MASK] and [MASK] for [MASK] whose [MASK] is not [MASK],"['List', 'the', '[MASK]', 'and', '[MASK]', 'for', '[MASK]', 'whose', '[MASK]', 'is', 'not', '[MASK]']","SELECT Player_name ,  residence FROM player WHERE Occupation != ""Researcher""","['player', 'Researcher', 'Occupation', 'residence', 'Player_name']","[('player', '')]","['Researcher', 'Occupation', 'residence', 'Player_name']","select,from,where",False,['where'],1.0,1.0
6994,6994,List all company names with a book published by Alyson.,List all [MASK] [MASK] with a [MASK] [MASK] by Alyson.,"['List', 'all', '[MASK]', '[MASK]', 'with', 'a', '[MASK]', '[MASK]', 'by', 'Alyson.']",SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson',"['book_club', 'culture_company', 'book_club_id', 'publisher', 'company_name']","[('book_club', 'T2'), ('culture_company', 'T1')]","['book_club_id', 'publisher', 'company_name']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
133,133,Which start station had the most trips starting from August? Give me the name and id of the station.,Which [MASK] [MASK] had the most [MASK] [MASK] from August? Give me the [MASK] and [MASK] of the [MASK],"['Which', '[MASK]', '[MASK]', 'had', 'the', 'most', '[MASK]', '[MASK]', 'from', 'August?', 'Give', 'me', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]']","SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE ""8/%"" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1","['trip', '8/%', 'start_station_name', 'start_date', 'start_station_id']","[('trip', '')]","['8/%', 'start_station_name', 'start_date', 'start_station_id']","like,group,limit,count,order,where,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",0.7142857142857143,1.0
4096,4096,How many companies are headquartered in the US?,How many [MASK] are [MASK] in the US?,"['How', 'many', '[MASK]', 'are', '[MASK]', 'in', 'the', 'US?']",SELECT count(*) FROM company WHERE Headquarters  =  'USA',"['company', 'Headquarters']","[('company', '')]",['Headquarters'],"select,count,from,where",False,"['count', 'where']",1.0,1.0
6615,6615,Show the station name with greatest number of trains.,Show the [MASK] [MASK] with greatest number of [MASK],"['Show', 'the', '[MASK]', '[MASK]', 'with', 'greatest', 'number', 'of', '[MASK]']",SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1,"['station', 'train_station', 'station_id', 'name']","[('station', 'T2'), ('train_station', 'T1')]","['station_id', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc']",0.7142857142857143,1.0
4347,4347,What is the total amount of grant money given to each organization and what is its id?,What is the total [MASK] of [MASK] money given to each [MASK] and what is its id?,"['What', 'is', 'the', 'total', '[MASK]', 'of', '[MASK]', 'money', 'given', 'to', 'each', '[MASK]', 'and', 'what', 'is', 'its', 'id?']","SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id","['Grants', 'grant_amount', 'organisation_id']","[('Grants', '')]","['grant_amount', 'organisation_id']","select,sum,from,group",False,"['as', 'join', 'sum', 'and', 'where']",0.5,0.2
5165,5165,What are the names of the clients who do not have any booking?,What are the [MASK] of the [MASK] who do not have any [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'do', 'not', 'have', 'any', '[MASK]']",SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID,"['Clients', 'Clients', 'Bookings', 'Customer_Name', 'Customer_ID', 'Client_ID']","[('Clients', ''), ('Clients', 'T2'), ('Bookings', 'T1')]","['Customer_Name', 'Customer_ID', 'Client_ID']","as,except,join,select,from",True,"['where', 'in', 'not']",0.0,0.0
1887,1887,"List the name, location, mascot for all schools.",List the [MASK] [MASK] [MASK] for all [MASK],"['List', 'the', '[MASK]', '[MASK]', '[MASK]', 'for', 'all', '[MASK]']","SELECT school_name ,  LOCATION ,  mascot FROM school","['school', 'mascot', 'LOCATION', 'school_name']","[('school', '')]","['mascot', 'LOCATION', 'school_name']","select,from",False,[],,
4795,4795,Find the name of the most expensive hardware product.,Find the [MASK] of the most expensive hardware [MASK],"['Find', 'the', '[MASK]', 'of', 'the', 'most', 'expensive', 'hardware', '[MASK]']",SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1,"['products', 'product_price', 'product_name', 'product_type_code']","[('products', '')]","['product_price', 'product_name', 'product_type_code']","limit,order,where,select,desc,from",False,"['limit', 'order', 'desc']",0.75,1.0
7335,7335,What the smallest version number and its template type code?,What the smallest [MASK] [MASK] and its [MASK] [MASK] [MASK],"['What', 'the', 'smallest', '[MASK]', '[MASK]', 'and', 'its', '[MASK]', '[MASK]', '[MASK]']","SELECT min(Version_Number) ,  template_type_code FROM Templates","['Templates', 'template_type_code', 'Version_Number']","[('Templates', '')]","['template_type_code', 'Version_Number']","select,min,from",False,"['limit', 'order']",0.0,0.0
577,577,How many customers live in Prague city?,How many [MASK] live in [MASK] [MASK],"['How', 'many', '[MASK]', 'live', 'in', '[MASK]', '[MASK]']","SELECT count(*) FROM customers WHERE city = ""Prague"";","['customers', 'city', 'Prague']","[('customers', '')]","['city', 'Prague']","select,count,from,where",False,"['count', 'where']",1.0,1.0
3143,3143,Which part fault requires the most number of skills to fix? List part id and name.,Which [MASK] [MASK] [MASK] the most number of [MASK] [MASK] fix? List [MASK] [MASK] and [MASK],"['Which', '[MASK]', '[MASK]', '[MASK]', 'the', 'most', 'number', 'of', '[MASK]', '[MASK]', 'fix?', 'List', '[MASK]', '[MASK]', 'and', '[MASK]']","SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1","['Parts', 'Skills_Required_To_Fix', 'Part_Faults', 'part_name', 'part_fault_id', 'part_id']","[('Parts', 'T1'), ('Skills_Required_To_Fix', 'T3'), ('Part_Faults', 'T2')]","['part_name', 'part_fault_id', 'part_id']","as,group,join,limit,count,order,select,desc,from",True,"['limit', 'order', 'desc', 'group', 'join', 'count']",0.8571428571428571,1.0
238,238,What are the characters and duration of actors?,What are the [MASK] and [MASK] of [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', '[MASK]']","SELECT Character ,  Duration FROM actor","['actor', 'Duration', 'Character']","[('actor', '')]","['Duration', 'Character']","select,from",False,[],,
5531,5531,"What are the names, color descriptions, and product descriptions for products in the 'Herbs' category?",What are the [MASK] [MASK] [MASK] and [MASK] [MASK] for [MASK] in the [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', '[MASK]', 'in', 'the', '[MASK]', '[MASK]']","SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  ""Herbs""","['Ref_colors', 'products', 'product_description', 'product_category_code', 'Herbs', 'color_code', 'product_name', 'color_description']","[('Ref_colors', 'T2'), ('products', 'T1')]","['product_description', 'product_category_code', 'Herbs', 'color_code', 'product_name', 'color_description']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
2370,2370,"What are the degrees conferred in ""San Francisco State University"" in 2001.","What are the [MASK] conferred in ""San [MASK] [MASK] [MASK] in 2001.","['What', 'are', 'the', '[MASK]', 'conferred', 'in', '""San', '[MASK]', '[MASK]', '[MASK]', 'in', '2001.']","SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  ""San Francisco State University"" AND t2.year  =  2001","['campuses', 'degrees', 'degrees', 'campus', 'id', 'San Francisco State University', 'year']","[('campuses', 'T1'), ('degrees', 'T2')]","['degrees', 'campus', 'id', 'San Francisco State University', 'year']","as,join,from,and,select,where",True,"['as', 'join', 'and', 'where']",1.0,1.0
6145,6145,List the age of all music artists.,List the [MASK] of all music [MASK],"['List', 'the', '[MASK]', 'of', 'all', 'music', '[MASK]']",SELECT Age FROM artist,"['artist', 'Age']","[('artist', '')]",['Age'],"select,from",False,[],,
7295,7295,How many different store locations are there?,How many different store [MASK] are there?,"['How', 'many', 'different', 'store', '[MASK]', 'are', 'there?']",SELECT count(DISTINCT LOCATION) FROM shop,"['shop', 'LOCATION']","[('shop', '')]",['LOCATION'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
956,956,What is the type of interaction for the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?,What is the [MASK] of [MASK] for the [MASK] [MASK] 'ALA synthase' and the [MASK] [MASK] 'Aripiprazole'?,"['What', 'is', 'the', '[MASK]', 'of', '[MASK]', 'for', 'the', '[MASK]', '[MASK]', ""'ALA"", ""synthase'"", 'and', 'the', '[MASK]', '[MASK]', ""'Aripiprazole'?""]",SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole',"['medicine_enzyme_interaction', 'enzyme', 'medicine', 'medicine_id', 'enzyme_id', 'interaction_type', 'name', 'id']","[('medicine_enzyme_interaction', 'T1'), ('enzyme', 'T3'), ('medicine', 'T2')]","['medicine_id', 'enzyme_id', 'interaction_type', 'name', 'id']","as,join,from,and,select,where",True,"['as', 'join', 'and', 'where']",1.0,1.0
5572,5572,List the all the distinct names of the products with the characteristic name 'warm'.,List the all the [MASK] [MASK] of the [MASK] with the [MASK] [MASK] [MASK],"['List', 'the', 'all', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  ""warm""","['CHARACTERISTICS', 'products', 'product_characteristics', 'characteristic_name', 'warm', 'characteristic_id', 'product_id', 'product_name']","[('CHARACTERISTICS', 't3'), ('products', 't1'), ('product_characteristics', 't2')]","['characteristic_name', 'warm', 'characteristic_id', 'product_id', 'product_name']","distinct,as,join,where,select,from",True,[],,
5158,5158,Show all cities where at least one customer lives in but no performer lives in.,Show all [MASK] where at least one [MASK] lives in but no [MASK] lives in.,"['Show', 'all', '[MASK]', 'where', 'at', 'least', 'one', '[MASK]', 'lives', 'in', 'but', 'no', '[MASK]', 'lives', 'in.']",SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID,"['Performers', 'Customers', 'Addresses', 'City_Town', 'Address_ID']","[('Performers', 'T2'), ('Customers', 'T2'), ('Addresses', 'T1')]","['City_Town', 'Address_ID']","as,except,join,select,from",True,['distinct'],0.0,0.0
6327,6327,Count the number of services.,Count the number of [MASK],"['Count', 'the', 'number', 'of', '[MASK]']",SELECT count(*) FROM services,['services'],"[('services', '')]",[],"select,count,from",False,['count'],1.0,1.0
1953,1953,"Show cinema name, film title, date, and price for each record in schedule.",Show [MASK] [MASK] [MASK] [MASK] [MASK] and [MASK] for each record in [MASK],"['Show', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'for', 'each', 'record', 'in', '[MASK]']","SELECT T3.name ,  T2.title ,  T1.date ,  T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id JOIN cinema AS T3 ON T1.cinema_id  =  T3.cinema_id","['film', 'schedule', 'cinema', 'film_id', 'title', 'date', 'name', 'cinema_id', 'price']","[('film', 'T2'), ('schedule', 'T1'), ('cinema', 'T3')]","['film_id', 'title', 'date', 'name', 'cinema_id', 'price']","select,join,from,as",True,[],,
5999,5999,How many sports do we have?,How many [MASK] do we have?,"['How', 'many', '[MASK]', 'do', 'we', 'have?']",SELECT count(DISTINCT sportname) FROM Sportsinfo,"['Sportsinfo', 'sportname']","[('Sportsinfo', '')]",['sportname'],"distinct,select,count,from",False,['count'],0.5,1.0
3289,3289,How many professors who are from either Accounting or Biology department?,How many [MASK] who are from either Accounting or Biology [MASK],"['How', 'many', '[MASK]', 'who', 'are', 'from', 'either', 'Accounting', 'or', 'Biology', '[MASK]']",SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology',"['department', 'professor', 'dept_code', 'dept_name']","[('department', 'T2'), ('professor', 'T1')]","['dept_code', 'dept_name']","as,join,count,where,or,select,from",True,"['as', 'join', 'count', 'where']",0.8,1.0
7486,7486,Find the number of left handed winners who participated in the WTA Championships.,Find the number of left [MASK] [MASK] who [MASK] in the WTA Championships.,"['Find', 'the', 'number', 'of', 'left', '[MASK]', '[MASK]', 'who', '[MASK]', 'in', 'the', 'WTA', 'Championships.']",SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',"['matches', 'winner_hand', 'tourney_name', 'winner_name']","[('matches', '')]","['winner_hand', 'tourney_name', 'winner_name']","distinct,count,and,where,select,from",False,['count'],0.25,1.0
1878,1878,"Show the teams that have both wrestlers eliminated by ""Orton"" and wrestlers eliminated by ""Benjamin"".",Show the [MASK] that have both wrestlers [MASK] [MASK] [MASK] and wrestlers [MASK] [MASK] [MASK],"['Show', 'the', '[MASK]', 'that', 'have', 'both', 'wrestlers', '[MASK]', '[MASK]', '[MASK]', 'and', 'wrestlers', '[MASK]', '[MASK]', '[MASK]']","SELECT Team FROM Elimination WHERE Eliminated_By  =  ""Orton"" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By  =  ""Benjamin""","['Elimination', 'Orton', 'Eliminated_By', 'Team', 'Benjamin']","[('Elimination', '')]","['Orton', 'Eliminated_By', 'Team', 'Benjamin']","intersect,select,from,where",False,"['intersect', 'where']",1.0,1.0
6450,6450,"Return the budget type codes, budget type descriptions and document ids for documents with expenses.",Return the [MASK] [MASK] [MASK] [MASK] [MASK] [MASK] and [MASK] [MASK] for [MASK] [MASK] [MASK],"['Return', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', '[MASK]', '[MASK]', '[MASK]']","SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code","['Documents_with_expenses', 'Ref_budget_codes', 'document_id', 'budget_type_description', 'budget_type_code']","[('Documents_with_expenses', 'T1'), ('Ref_budget_codes', 'T2')]","['document_id', 'budget_type_description', 'budget_type_code']","select,join,from,as",True,['where'],0.0,0.0
729,729,Show all card type codes.,Show all [MASK] [MASK] [MASK],"['Show', 'all', '[MASK]', '[MASK]', '[MASK]']",SELECT DISTINCT card_type_code FROM Customers_Cards,"['Customers_Cards', 'card_type_code']","[('Customers_Cards', '')]",['card_type_code'],"distinct,select,from",False,['distinct'],1.0,1.0
5560,5560,"List all the characteristic names and data types of product ""cumin"".",List all the [MASK] [MASK] and [MASK] [MASK] of [MASK] [MASK],"['List', 'all', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', '[MASK]', '[MASK]']","SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""cumin""","['CHARACTERISTICS', 'products', 'product_characteristics', 'characteristic_name', 'characteristic_data_type', 'characteristic_id', 'cumin', 'product_id', 'product_name']","[('CHARACTERISTICS', 't3'), ('products', 't1'), ('product_characteristics', 't2')]","['characteristic_name', 'characteristic_data_type', 'characteristic_id', 'cumin', 'product_id', 'product_name']","as,join,from,select,where",True,[],,
7359,7359,How many paragraphs for the document with name 'Summer Show'?,How many [MASK] for the [MASK] with [MASK] 'Summer Show'?,"['How', 'many', '[MASK]', 'for', 'the', '[MASK]', 'with', '[MASK]', ""'Summer"", ""Show'?""]",SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show',"['Paragraphs', 'Documents', 'document_ID', 'document_name']","[('Paragraphs', 'T1'), ('Documents', 'T2')]","['document_ID', 'document_name']","as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",1.0,1.0
1009,1009,Find how many school locations have the word 'NY'.,Find how many school [MASK] have the word 'NY'.,"['Find', 'how', 'many', 'school', '[MASK]', 'have', 'the', 'word', ""'NY'.""]","SELECT count(*) FROM university WHERE LOCATION LIKE ""%NY%""","['university', '%NY%', 'LOCATION']","[('university', '')]","['%NY%', 'LOCATION']","like,count,where,select,from",False,"['count', 'where']",0.6666666666666666,1.0
549,549,List the top 5 genres by number of tracks. List genres name and total tracks.,List the top 5 [MASK] by number of [MASK] List [MASK] [MASK] and total [MASK],"['List', 'the', 'top', '5', '[MASK]', 'by', 'number', 'of', '[MASK]', 'List', '[MASK]', '[MASK]', 'and', 'total', '[MASK]']","SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;","['genres', 'tracks', 'genre_id', 'id', 'name']","[('genres', 'T1'), ('tracks', 'T2')]","['genre_id', 'id', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['limit', 'order', 'desc']",0.42857142857142855,1.0
5433,5433,What are the cities that have a branch that opened in 2001 and a branch with more than 100 members?,What are the [MASK] that have a [MASK] that [MASK] in 2001 and a [MASK] with more than 100 [MASK],"['What', 'are', 'the', '[MASK]', 'that', 'have', 'a', '[MASK]', 'that', '[MASK]', 'in', '2001', 'and', 'a', '[MASK]', 'with', 'more', 'than', '100', '[MASK]']",SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100,"['branch', 'city', 'open_year', 'membership_amount']","[('branch', '')]","['city', 'open_year', 'membership_amount']","select,and,from,where",False,"['as', 'join', 'where']",0.5,0.3333333333333333
5065,5065,What are the open dates and years for the shop named Apple?,What are the [MASK] [MASK] and [MASK] for the [MASK] [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'for', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  ""Apple""","['shop', 'Shop_Name', 'Apple', 'Open_Date', 'Open_Year']","[('shop', '')]","['Shop_Name', 'Apple', 'Open_Date', 'Open_Year']","select,from,where",False,['where'],1.0,1.0
1359,1359,What are the names and budgets of departments with budgets greater than the average?,What are the [MASK] and [MASK] of [MASK] with [MASK] greater than the average?,"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'with', '[MASK]', 'greater', 'than', 'the', 'average?']","SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)","['department', 'budget', 'dept_name']","[('department', '')]","['budget', 'dept_name']","select,avg,from,where",False,"['avg', 'where']",1.0,1.0
5820,5820,"Show the names of authors from college ""Florida"" or ""Temple""",Show the names of [MASK] from [MASK] [MASK] or [MASK],"['Show', 'the', 'names', 'of', '[MASK]', 'from', '[MASK]', '[MASK]', 'or', '[MASK]']","SELECT Author FROM submission WHERE College  =  ""Florida"" OR College  =  ""Temple""","['submission', 'College', 'Temple', 'Author', 'Florida']","[('submission', '')]","['College', 'Temple', 'Author', 'Florida']","or,select,from,where",False,"['or', 'where']",1.0,1.0
3108,3108,What are the id and first name of the student whose addresses have the highest average monthly rental?,What are the [MASK] and [MASK] [MASK] of the [MASK] whose [MASK] have the highest average [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'whose', '[MASK]', 'have', 'the', 'highest', 'average', '[MASK]', '[MASK]']","SELECT T1.student_id ,  T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1","['Student_Addresses', 'Students', 'student_id', 'first_name', 'monthly_rental']","[('Student_Addresses', 'T1'), ('Students', 'T2')]","['student_id', 'first_name', 'monthly_rental']","as,group,join,limit,order,avg,select,desc,from",True,"['as', 'join', 'limit', 'order', 'desc', 'avg']",0.8571428571428571,1.0
4206,4206,What is the role code with the largest number of employees?,What is the [MASK] [MASK] with the largest number of [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'with', 'the', 'largest', 'number', 'of', '[MASK]']",SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1,"['Employees', 'role_code']","[('Employees', '')]",['role_code'],"group,limit,count,order,select,desc,from",False,"['limit', 'order', 'desc']",0.6,1.0
159,159,On which day and in which zip code was the min dew point lower than any day in zip code 94107?,On which day and in which [MASK] [MASK] was the [MASK] [MASK] [MASK] lower than any day in [MASK] [MASK] 94107?,"['On', 'which', 'day', 'and', 'in', 'which', '[MASK]', '[MASK]', 'was', 'the', '[MASK]', '[MASK]', '[MASK]', 'lower', 'than', 'any', 'day', 'in', '[MASK]', '[MASK]', '94107?']","SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)","['weather', 'min_dew_point_f', 'date', 'zip_code']","[('weather', '')]","['min_dew_point_f', 'date', 'zip_code']","select,min,from,where",False,"['where', 'and']",0.5,0.5
2936,2936,How many addresses are in the district of California?,How many [MASK] are in the [MASK] of California?,"['How', 'many', '[MASK]', 'are', 'in', 'the', '[MASK]', 'of', 'California?']",SELECT count(*) FROM address WHERE district  =  'California',"['address', 'district']","[('address', '')]",['district'],"select,count,from,where",False,"['count', 'where']",1.0,1.0
609,609,What is the total amount of money spent by Lucas Mancini?,What is the [MASK] amount of money spent by [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'amount', 'of', 'money', 'spent', 'by', '[MASK]', '[MASK]']","SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = ""Lucas"" AND T1.last_name = ""Mancini"";","['customers', 'invoices', 'total', 'Mancini', 'last_name', 'Lucas', 'id', 'customer_id', 'first_name']","[('customers', 'T1'), ('invoices', 'T2')]","['total', 'Mancini', 'last_name', 'Lucas', 'id', 'customer_id', 'first_name']","as,join,sum,and,where,select,from",True,"['sum', 'and', 'where', 'as', 'join']",1.0,1.0
5011,5011,What is the average and maximum number of hours students who made the team practiced?,What is the average and maximum number of hours [MASK] who made the team practiced?,"['What', 'is', 'the', 'average', 'and', 'maximum', 'number', 'of', 'hours', '[MASK]', 'who', 'made', 'the', 'team', 'practiced?']","SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'","['tryout', 'player', 'pID', 'HS', 'decision']","[('tryout', 'T2'), ('player', 'T1')]","['pID', 'HS', 'decision']","where,as,join,avg,select,from,max",True,"['avg', 'max']",0.4,1.0
291,291,Find the name and email of the user followed by the least number of people.,Find the [MASK] and [MASK] of the [MASK] [MASK] by the least number of people.,"['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'by', 'the', 'least', 'number', 'of', 'people.']","SELECT name ,  email FROM user_profiles ORDER BY followers LIMIT 1","['user_profiles', 'followers', 'email', 'name']","[('user_profiles', '')]","['followers', 'email', 'name']","select,limit,order,from",False,"['as', 'group', 'join', 'limit', 'count', 'order', 'asc']",1.0,0.2857142857142857
2974,2974,Where is store 1 located?,Where is [MASK] 1 located?,"['Where', 'is', '[MASK]', '1', 'located?']",SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1,"['address', 'store', 'address_id', 'store_id', 'address']","[('address', 'T2'), ('store', 'T1')]","['address_id', 'store_id', 'address']","as,join,from,select,where",True,"['join', 'where']",0.6666666666666666,1.0
745,745,Show the account id and the number of transactions for each account,Show the [MASK] [MASK] and the number of [MASK] for each [MASK],"['Show', 'the', '[MASK]', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'for', 'each', '[MASK]']","SELECT account_id ,  count(*) FROM Financial_transactions GROUP BY account_id","['Financial_transactions', 'account_id']","[('Financial_transactions', '')]",['account_id'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
5734,5734,Find the number of students whose age is older than the average age for each gender.,Find the number of [MASK] whose [MASK] is older than the average [MASK] for each gender.,"['Find', 'the', 'number', 'of', '[MASK]', 'whose', '[MASK]', 'is', 'older', 'than', 'the', 'average', '[MASK]', 'for', 'each', 'gender.']","SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex","['student', 'sex', 'age']","[('student', '')]","['sex', 'age']","where,group,count,avg,select,from",False,"['group', 'avg', 'where']",0.75,1.0
775,775,Show all track names that have had no races.,Show all [MASK] [MASK] that have had no [MASK],"['Show', 'all', '[MASK]', '[MASK]', 'that', 'have', 'had', 'no', '[MASK]']",SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race),"['race', 'track', 'track_id', 'name']","[('race', ''), ('track', '')]","['track_id', 'name']","where,in,not,select,from",False,['except'],0.0,0.0
2746,2746,Show the delegate from district 1 in election.,Show the [MASK] from [MASK] 1 in [MASK],"['Show', 'the', '[MASK]', 'from', '[MASK]', '1', 'in', '[MASK]']",SELECT Delegate FROM election WHERE District  =  1,"['election', 'Delegate', 'District']","[('election', '')]","['Delegate', 'District']","select,from,where",False,"['where', 'as', 'join']",1.0,0.3333333333333333
7166,7166,"For all of the 4 cylinder cars, which model has the most horsepower?","For all of the 4 [MASK] cars, which [MASK] has the most [MASK]","['For', 'all', 'of', 'the', '4', '[MASK]', 'cars,', 'which', '[MASK]', 'has', 'the', 'most', '[MASK]']",SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,"['CAR_NAMES', 'CARS_DATA', 'Model', 'Id', 'horsepower', 'MakeId', 'Cylinders']","[('CAR_NAMES', 'T1'), ('CARS_DATA', 'T2')]","['Model', 'Id', 'horsepower', 'MakeId', 'Cylinders']","as,join,limit,from,order,select,desc,where",True,"['group', 'limit', 'count', 'order', 'desc']",0.5,0.6
8029,8029,What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?,What are the [MASK] that are shared by [MASK] with a [MASK] [MASK] before 1945 and after 1955?,"['What', 'are', 'the', '[MASK]', 'that', 'are', 'shared', 'by', '[MASK]', 'with', 'a', '[MASK]', '[MASK]', 'before', '1945', 'and', 'after', '1955?']",SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,"['singer', 'Citizenship', 'Birth_Year']","[('singer', '')]","['Citizenship', 'Birth_Year']","intersect,select,from,where",False,"['where', 'or']",0.5,0.5
4673,4673,Find the name of the department that has no students minored in?,Find the [MASK] of the [MASK] that has no [MASK] [MASK] in?,"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'has', 'no', '[MASK]', '[MASK]', 'in?']",SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO,"['DEPARTMENT', 'MINOR_IN', 'DEPARTMENT', 'DName', 'DNO']","[('DEPARTMENT', 'T1'), ('MINOR_IN', 'T2'), ('DEPARTMENT', '')]","['DName', 'DNO']","as,except,join,select,from",True,"['except', 'where']",0.3333333333333333,0.5
1457,1457,What are the names of students who have taken the prerequisite for the course International Finance?,What are the [MASK] of [MASK] who have [MASK] the [MASK] for the [MASK] International Finance?,"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'who', 'have', '[MASK]', 'the', '[MASK]', 'for', 'the', '[MASK]', 'International', 'Finance?']",SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance'),"['student', 'course', 'prereq', 'takes', 'title', 'course_id', 'name', 'id', 'prereq_id']","[('student', 'T1'), ('course', 'T3'), ('prereq', 'T4'), ('takes', 'T2')]","['title', 'course_id', 'name', 'id', 'prereq_id']","as,in,join,from,select,where",True,"['as', 'in', 'join', 'where']",1.0,1.0
3235,3235,How many sections does course ACCT-211 has?,How many [MASK] does [MASK] ACCT-211 has?,"['How', 'many', '[MASK]', 'does', '[MASK]', 'ACCT-211', 'has?']",SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211',"['CLASS', 'class_section', 'crs_code']","[('CLASS', '')]","['class_section', 'crs_code']","distinct,count,where,select,from",False,"['as', 'join', 'count', 'where']",0.6666666666666666,0.5
263,263,Who is the nominee who has been nominated for the most musicals?,Who is the [MASK] who has been [MASK] for the most [MASK],"['Who', 'is', 'the', '[MASK]', 'who', 'has', 'been', '[MASK]', 'for', 'the', 'most', '[MASK]']",SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1,"['musical', 'Nominee']","[('musical', '')]",['Nominee'],"group,limit,count,order,select,desc,from",False,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,0.7142857142857143
1255,1255,"Return each apartment type code with the number of apartments having that apartment type, in ascending order of the number of apartments.",Return each [MASK] [MASK] [MASK] with the number of [MASK] having that [MASK] [MASK] in ascending order of the number of [MASK],"['Return', 'each', '[MASK]', '[MASK]', '[MASK]', 'with', 'the', 'number', 'of', '[MASK]', 'having', 'that', '[MASK]', '[MASK]', 'in', 'ascending', 'order', 'of', 'the', 'number', 'of', '[MASK]']","SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC","['Apartments', 'apt_type_code']","[('Apartments', '')]",['apt_type_code'],"asc,group,count,order,select,from",False,"['order', 'asc']",0.5,1.0
4398,4398,How many friends does Dan have?,How many [MASK] does Dan have?,"['How', 'many', '[MASK]', 'does', 'Dan', 'have?']",SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan',"['Person', 'PersonFriend', 'friend', 'name']","[('Person', 'T1'), ('PersonFriend', 'T2')]","['friend', 'name']","as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",1.0,1.0
1771,1771,From which hometowns did both people older than 23 and younger than 20 come from?,From which [MASK] did both [MASK] older than 23 and younger than 20 come from?,"['From', 'which', '[MASK]', 'did', 'both', '[MASK]', 'older', 'than', '23', 'and', 'younger', 'than', '20', 'come', 'from?']",SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20,"['people', 'Hometown', 'Age']","[('people', '')]","['Hometown', 'Age']","intersect,select,from,where",False,['where'],0.5,1.0
4084,4084,Which classroom has the most students?,Which [MASK] has the most [MASK],"['Which', '[MASK]', 'has', 'the', 'most', '[MASK]']",SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1,"['list', 'classroom']","[('list', '')]",['classroom'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
2975,2975,Return the address of store 1.,Return the [MASK] of [MASK] 1.,"['Return', 'the', '[MASK]', 'of', '[MASK]', '1.']",SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1,"['address', 'store', 'address_id', 'store_id', 'address']","[('address', 'T2'), ('store', 'T1')]","['address_id', 'store_id', 'address']","as,join,from,select,where",True,"['join', 'as']",0.6666666666666666,1.0
1199,1199,Give me a list of all the distinct building descriptions.,Give me a list of all the distinct [MASK] [MASK],"['Give', 'me', 'a', 'list', 'of', 'all', 'the', 'distinct', '[MASK]', '[MASK]']",SELECT DISTINCT building_description FROM Apartment_Buildings,"['Apartment_Buildings', 'building_description']","[('Apartment_Buildings', '')]",['building_description'],"distinct,select,from",False,['distinct'],1.0,1.0
7489,7489,Find the number of players for each hand type.,Find the number of [MASK] for each [MASK] type.,"['Find', 'the', 'number', 'of', '[MASK]', 'for', 'each', '[MASK]', 'type.']","SELECT count(*) ,  hand FROM players GROUP BY hand","['players', 'hand']","[('players', '')]",['hand'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
4245,4245,What are the ids of all the employees who have destroyed documents?,What are the [MASK] of all the [MASK] who have [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', 'who', 'have', '[MASK]', '[MASK]']",SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed,"['Documents_to_be_destroyed', 'Destroyed_by_Employee_ID']","[('Documents_to_be_destroyed', '')]",['Destroyed_by_Employee_ID'],"distinct,select,from",False,['distinct'],1.0,1.0
4910,4910,Which district has the least area?,Which [MASK] has the least [MASK],"['Which', '[MASK]', 'has', 'the', 'least', '[MASK]']",SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1,"['district', 'district_name', 'city_area']","[('district', '')]","['district_name', 'city_area']","asc,limit,order,select,from",False,"['group', 'limit', 'count', 'order']",0.6666666666666666,0.5
4167,4167,What are all the document type codes and document type names?,What are all the [MASK] [MASK] [MASK] and [MASK] [MASK] [MASK],"['What', 'are', 'all', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', '[MASK]']","SELECT document_type_code ,  document_type_name FROM Ref_document_types","['Ref_document_types', 'document_type_name', 'document_type_code']","[('Ref_document_types', '')]","['document_type_name', 'document_type_code']","select,from",False,[],,
6599,6599,How many train stations are there?,How many train [MASK] are there?,"['How', 'many', 'train', '[MASK]', 'are', 'there?']",SELECT count(*) FROM station,['station'],"[('station', '')]",[],"select,count,from",False,['count'],1.0,1.0
89,89,What is the id of the student who most recently registered course 301?,What is the [MASK] [MASK] the [MASK] who most recently registered [MASK] 301?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'the', '[MASK]', 'who', 'most', 'recently', 'registered', '[MASK]', '301?']",SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1,"['student_course_attendance', 'course_id', 'student_id', 'date_of_attendance']","[('student_course_attendance', '')]","['course_id', 'student_id', 'date_of_attendance']","limit,order,where,select,desc,from",False,"['limit', 'order', 'where', 'desc']",1.0,1.0
4213,4213,Show the name and description of the role played by the employee named Ebba.,Show the [MASK] and [MASK] of the [MASK] [MASK] by the [MASK] [MASK] [MASK],"['Show', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'by', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  ""Ebba""","['Employees', 'ROLES', 'role_code', 'Ebba', 'employee_name', 'role_description', 'role_name']","[('Employees', 'T1'), ('ROLES', 'T2')]","['role_code', 'Ebba', 'employee_name', 'role_description', 'role_name']","as,join,from,select,where",True,"['where', 'as', 'join']",1.0,1.0
1511,1511,Which type of policy is most frequently used? Give me the policy type code.,Which [MASK] of [MASK] is most frequently used? Give me the [MASK] [MASK] [MASK],"['Which', '[MASK]', 'of', '[MASK]', 'is', 'most', 'frequently', 'used?', 'Give', 'me', 'the', '[MASK]', '[MASK]', '[MASK]']",SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1,"['policies', 'policy_type_code']","[('policies', '')]",['policy_type_code'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
2369,2369,How many degrees were conferred at San Jose State University in 2000?,How many [MASK] were conferred at San [MASK] [MASK] [MASK] in 2000?,"['How', 'many', '[MASK]', 'were', 'conferred', 'at', 'San', '[MASK]', '[MASK]', '[MASK]', 'in', '2000?']","SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  ""San Jose State University"" AND t2.year  =  2000","['campuses', 'degrees', 'San Jose State University', 'degrees', 'campus', 'id', 'year']","[('campuses', 'T1'), ('degrees', 'T2')]","['San Jose State University', 'degrees', 'campus', 'id', 'year']","as,join,from,and,select,where",True,"['as', 'join', 'and', 'where', 'sum']",1.0,0.8
7118,7118,What is the average miles per gallon of all the cards with 4 cylinders?,What is the average miles per gallon of all the cards with 4 [MASK],"['What', 'is', 'the', 'average', 'miles', 'per', 'gallon', 'of', 'all', 'the', 'cards', 'with', '4', '[MASK]']",SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;,"['CARS_DATA', 'Cylinders', 'mpg']","[('CARS_DATA', '')]","['Cylinders', 'mpg']","select,where,from,avg",False,['avg'],0.5,1.0
7578,7578,What are the different addresses that have students living there?,What are the [MASK] [MASK] that have [MASK] living there?,"['What', 'are', 'the', '[MASK]', '[MASK]', 'that', 'have', '[MASK]', 'living', 'there?']",SELECT count(DISTINCT current_address_id) FROM Students,"['Students', 'current_address_id']","[('Students', '')]",['current_address_id'],"distinct,select,count,from",False,['where'],0.0,0.0
459,459,How many students are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM Student,['Student'],"[('Student', '')]",[],"select,count,from",False,['count'],1.0,1.0
2217,2217,Find the names of Japanese constructors that have once earned more than 5 points?,Find the [MASK] of [MASK] [MASK] that have once earned more than 5 [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', 'that', 'have', 'once', 'earned', 'more', 'than', '5', '[MASK]']","SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5","['constructorstandings', 'constructors', 'points', 'name', 'nationality', 'constructorid', 'Japanese']","[('constructorstandings', 'T2'), ('constructors', 'T1')]","['points', 'name', 'nationality', 'constructorid', 'Japanese']","as,join,from,and,select,where",True,"['as', 'join', 'where']",0.75,1.0
4324,4324,What is the total grant amount of the organisations described as research?,What is the total [MASK] [MASK] of the [MASK] [MASK] as research?,"['What', 'is', 'the', 'total', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'as', 'research?']",SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research',"['Organisations', 'Grants', 'organisation_Types', 'organisation_type', 'organisation_type_description', 'grant_amount', 'organisation_id']","[('Organisations', 'T2'), ('Grants', 'T1'), ('organisation_Types', 'T3')]","['organisation_type', 'organisation_type_description', 'grant_amount', 'organisation_id']","as,join,sum,where,select,from",True,"['as', 'join', 'sum', 'where']",1.0,1.0
3645,3645,How many parks are there in the state of NY?,How many [MASK] are there in the [MASK] of NY?,"['How', 'many', '[MASK]', 'are', 'there', 'in', 'the', '[MASK]', 'of', 'NY?']",SELECT count(*) FROM park WHERE state  =  'NY';,"['park', 'state']","[('park', '')]",['state'],"select,count,from,where",False,"['count', 'where']",1.0,1.0
4337,4337,What is the response received date for the document described as Regular that was granted more than 100 dollars?,What is the [MASK] [MASK] [MASK] for the [MASK] [MASK] as Regular that was [MASK] more than 100 dollars?,"['What', 'is', 'the', '[MASK]', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', '[MASK]', 'as', 'Regular', 'that', 'was', '[MASK]', 'more', 'than', '100', 'dollars?']",SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100,"['Documents', 'Document_Types', 'Grants', 'document_type_code', 'response_received_date', 'document_description', 'grant_amount', 'grant_id']","[('Documents', 'T1'), ('Document_Types', 'T2'), ('Grants', 'T3')]","['document_type_code', 'response_received_date', 'document_description', 'grant_amount', 'grant_id']","as,join,from,or,select,where",True,"['as', 'join', 'where']",0.75,1.0
6842,6842,What is the name of the country with the most number of home airlines?,What is the name of the [MASK] with the most number of home [MASK],"['What', 'is', 'the', 'name', 'of', 'the', '[MASK]', 'with', 'the', 'most', 'number', 'of', 'home', '[MASK]']",SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1,"['airlines', 'country']","[('airlines', '')]",['country'],"group,limit,count,order,select,desc,from",False,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,0.7142857142857143
4937,4937,What is the most common maximum page size?,What is the most common maximum [MASK] [MASK],"['What', 'is', 'the', 'most', 'common', 'maximum', '[MASK]', '[MASK]']",SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1,"['product', 'max_page_size']","[('product', '')]",['max_page_size'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
1937,1937,Find the distinct locations that has a cinema.,Find the distinct [MASK] that has a [MASK],"['Find', 'the', 'distinct', '[MASK]', 'that', 'has', 'a', '[MASK]']",SELECT DISTINCT LOCATION FROM cinema,"['cinema', 'LOCATION']","[('cinema', '')]",['LOCATION'],"distinct,select,from",False,"['distinct', 'as', 'join']",1.0,0.3333333333333333
4840,4840,How old is the youngest winning pilot and what is their name?,How old is the youngest [MASK] [MASK] and what is their [MASK],"['How', 'old', 'is', 'the', 'youngest', '[MASK]', '[MASK]', 'and', 'what', 'is', 'their', '[MASK]']","SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1","['pilot', 'MATCH', 'pilot_id', 'winning_pilot', 'age', 'name']","[('pilot', 't1'), ('MATCH', 't2')]","['pilot_id', 'winning_pilot', 'age', 'name']","as,join,limit,order,select,from",True,"['limit', 'order']",0.5,1.0
6846,6846,How many airlines operate out of each country in descending order?,How many [MASK] operate out of each [MASK] in descending order?,"['How', 'many', '[MASK]', 'operate', 'out', 'of', 'each', '[MASK]', 'in', 'descending', 'order?']","SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC","['airlines', 'country']","[('airlines', '')]",['country'],"group,count,order,select,desc,from",False,"['group', 'count', 'order', 'desc']",1.0,1.0
7099,7099,Find the name of the makers that produced some cars in the year of 1970?,Find the [MASK] of the [MASK] that produced some [MASK] in the [MASK] of 1970?,"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'produced', 'some', '[MASK]', 'in', 'the', '[MASK]', 'of', '1970?']",SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,"['CAR_MAKERS', 'CAR_NAMES', 'CARS_DATA', 'MODEL_LIST', 'Maker', 'model', 'Id', 'id', 'MakeId', 'year']","[('CAR_MAKERS', 'T1'), ('CAR_NAMES', 'T3'), ('CARS_DATA', 'T4'), ('MODEL_LIST', 'T2')]","['Maker', 'model', 'Id', 'id', 'MakeId', 'year']","distinct,as,join,where,select,from",True,"['as', 'join', 'where']",0.75,1.0
6728,6728,Count the number of female Professors we have.,Count the number of female [MASK] we have.,"['Count', 'the', 'number', 'of', 'female', '[MASK]', 'we', 'have.']","SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  ""Professor""","['Faculty', 'Sex', 'Rank', 'Professor']","[('Faculty', '')]","['Sex', 'Rank', 'Professor']","count,and,where,select,from",False,"['count', 'and', 'where']",1.0,1.0
3027,3027,In how many different cities are banks located?,In how many different [MASK] are [MASK] located?,"['In', 'how', 'many', 'different', '[MASK]', 'are', '[MASK]', 'located?']",SELECT count(DISTINCT city) FROM bank,"['bank', 'city']","[('bank', '')]",['city'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
4094,4094,Find the number of students in one classroom.,Find the number of [MASK] in one [MASK],"['Find', 'the', 'number', 'of', '[MASK]', 'in', 'one', '[MASK]']","SELECT count(*) ,  classroom FROM list GROUP BY classroom","['list', 'classroom']","[('list', '')]",['classroom'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
6836,6836,"For the airline ids with the top 10 most routes operated, what are their names?","For the [MASK] [MASK] with the top 10 most [MASK] operated, what are their [MASK]","['For', 'the', '[MASK]', '[MASK]', 'with', 'the', 'top', '10', 'most', '[MASK]', 'operated,', 'what', 'are', 'their', '[MASK]']","SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10","['routes', 'airlines', 'alid', 'name']","[('routes', 'T2'), ('airlines', 'T1')]","['alid', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
2318,2318,List the names of perpetrators in descending order of the year.,List the [MASK] of [MASK] in descending order of the [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'in', 'descending', 'order', 'of', 'the', '[MASK]']",SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Year DESC,"['perpetrator', 'people', 'Name', 'People_ID', 'Year']","[('perpetrator', 'T2'), ('people', 'T1')]","['Name', 'People_ID', 'Year']","as,join,order,select,desc,from",True,"['order', 'desc']",0.5,1.0
3183,3183,What is the code of the school where the accounting department belongs to?,What is the [MASK] of the [MASK] where the [MASK] [MASK] belongs to?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'where', 'the', '[MASK]', '[MASK]', 'belongs', 'to?']","SELECT school_code FROM department WHERE dept_name  =  ""Accounting""","['department', 'school_code', 'Accounting', 'dept_name']","[('department', '')]","['school_code', 'Accounting', 'dept_name']","select,from,where",False,"['as', 'join', 'where']",1.0,0.3333333333333333
6739,6739,Show all the buildings that have at least 10 professors.,Show all the [MASK] that have at least 10 [MASK],"['Show', 'all', 'the', '[MASK]', 'that', 'have', 'at', 'least', '10', '[MASK]']","SELECT building FROM Faculty WHERE rank  =  ""Professor"" GROUP BY building HAVING count(*)  >=  10","['Faculty', 'Professor', 'rank', 'building']","[('Faculty', '')]","['Professor', 'rank', 'building']","group,count,having,where,select,from",False,"['as', 'group', 'join', 'count', 'having']",0.75,0.6
4881,4881,Which schools have more than 1 player? Give me the school locations.,Which [MASK] have more than 1 [MASK] Give me the [MASK] [MASK],"['Which', '[MASK]', 'have', 'more', 'than', '1', '[MASK]', 'Give', 'me', 'the', '[MASK]', '[MASK]']",SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1,"['school', 'player', 'School_ID', 'Location']","[('school', 'T2'), ('player', 'T1')]","['School_ID', 'Location']","as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'count', 'having']",1.0,1.0
3588,3588,"What is the name of the artist, for each language, that has the most songs with a higher resolution than 500?",What is the [MASK] of the [MASK] for each [MASK] that has the most [MASK] with a higher [MASK] than 500?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'for', 'each', '[MASK]', 'that', 'has', 'the', 'most', '[MASK]', 'with', 'a', 'higher', '[MASK]', 'than', '500?']",SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1,"['song', 'resolution', 'languages', 'artist_name']","[('song', '')]","['resolution', 'languages', 'artist_name']","group,limit,count,order,where,select,desc,from",False,"['or', 'where']",0.16666666666666666,0.5
496,496,What are the average ages for male and female students?,What are the average [MASK] for male and female [MASK],"['What', 'are', 'the', 'average', '[MASK]', 'for', 'male', 'and', 'female', '[MASK]']","SELECT avg(age) ,  sex FROM Student GROUP BY sex","['Student', 'sex', 'age']","[('Student', '')]","['sex', 'age']","group,select,from,avg",False,"['avg', 'where']",0.5,0.5
5961,5961,What are the names of tourist attractions that can be reached by bus or is at address 254 Ottilie Junction?,What are the [MASK] of [MASK] [MASK] that can be reached by [MASK] or is at [MASK] 254 [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', 'that', 'can', 'be', 'reached', 'by', '[MASK]', 'or', 'is', 'at', '[MASK]', '254', '[MASK]', '[MASK]']","SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  ""254 Ottilie Junction"" OR T2.How_to_Get_There  =  ""bus""","['Tourist_Attractions', 'Locations', 'How_to_Get_There', 'Name', 'Location_ID', 'bus', 'Address', '254 Ottilie Junction']","[('Tourist_Attractions', 'T2'), ('Locations', 'T1')]","['How_to_Get_There', 'Name', 'Location_ID', 'bus', 'Address', '254 Ottilie Junction']","as,join,from,or,select,where",True,"['as', 'join', 'or', 'where']",1.0,1.0
5618,5618,"Find all 200 meter and 300 meter results of swimmers with nationality ""Australia"".","Find all [MASK] [MASK] and [MASK] [MASK] results of [MASK] with [MASK] ""Australia"".","['Find', 'all', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'results', 'of', '[MASK]', 'with', '[MASK]', '""Australia"".']","SELECT meter_200 ,  meter_300 FROM swimmer WHERE nationality  =  'Australia'","['swimmer', 'meter_300', 'nationality', 'meter_200']","[('swimmer', '')]","['meter_300', 'nationality', 'meter_200']","select,from,where",False,"['as', 'join', 'where']",1.0,0.3333333333333333
220,220,List the publisher of the publication with the highest price.,List the [MASK] of the [MASK] with the highest [MASK],"['List', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'highest', '[MASK]']",SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1,"['publication', 'Price', 'Publisher']","[('publication', '')]","['Price', 'Publisher']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
4500,4500,"What are the names of all the documents, as well as the access counts of each, ordered alphabetically?","What are the [MASK] of all the [MASK] as well as the [MASK] [MASK] of each, ordered alphabetically?","['What', 'are', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', 'as', 'well', 'as', 'the', '[MASK]', '[MASK]', 'of', 'each,', 'ordered', 'alphabetically?']","SELECT document_name ,  access_count FROM documents ORDER BY document_name","['documents', 'document_name', 'access_count']","[('documents', '')]","['document_name', 'access_count']","select,order,from",False,['order'],1.0,1.0
5456,5456,What are the majors of male (sex is M) students?,What are the [MASK] of male (sex is M) [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'male', '(sex', 'is', 'M)', '[MASK]']","SELECT Major FROM STUDENT WHERE Sex  =  ""M""","['STUDENT', 'Major', 'Sex', 'M']","[('STUDENT', '')]","['Major', 'Sex', 'M']","select,from,where",False,"['where', 'as', 'join', 'count', 'and']",1.0,0.2
2925,2925,Count the number of different last names actors have.,Count the number of different [MASK] [MASK] [MASK] have.,"['Count', 'the', 'number', 'of', 'different', '[MASK]', '[MASK]', '[MASK]', 'have.']",SELECT count(DISTINCT last_name) FROM actor,"['actor', 'last_name']","[('actor', '')]",['last_name'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
920,920,Which customers do not have a first notification of loss record? Give me the customer names.,Which [MASK] do not have a [MASK] [MASK] [MASK] [MASK] record? Give me the [MASK] [MASK],"['Which', '[MASK]', 'do', 'not', 'have', 'a', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'record?', 'Give', 'me', 'the', '[MASK]', '[MASK]']",SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id,"['customers', 'customers', 'first_notification_of_loss', 'customer_id', 'customer_name']","[('customers', ''), ('customers', 't1'), ('first_notification_of_loss', 't2')]","['customer_id', 'customer_name']","as,except,join,select,from",True,"['where', 'in', 'not']",0.0,0.0
7480,7480,How many total tours were there for each ranking date?,How many total [MASK] were there for each [MASK] [MASK],"['How', 'many', 'total', '[MASK]', 'were', 'there', 'for', 'each', '[MASK]', '[MASK]']","SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","['rankings', 'ranking_date', 'tours']","[('rankings', '')]","['ranking_date', 'tours']","select,sum,from,group",False,"['count', 'group', 'as', 'join']",0.5,0.25
984,984,What is the founded year of the non public school that was founded most recently?,What is the [MASK] year of the non public school that was [MASK] most recently?,"['What', 'is', 'the', '[MASK]', 'year', 'of', 'the', 'non', 'public', 'school', 'that', 'was', '[MASK]', 'most', 'recently?']",SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1,"['university', 'affiliation', 'founded']","[('university', '')]","['affiliation', 'founded']","limit,order,where,select,desc,from",False,"['limit', 'order', 'desc']",0.75,1.0
7504,7504,List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta',List the [MASK] and [MASK] the [MASK] that has [MASK] the [MASK] [MASK] 'Lettice' and the [MASK] [MASK] 'HMS Atalanta',"['List', 'the', '[MASK]', 'and', '[MASK]', 'the', '[MASK]', 'that', 'has', '[MASK]', 'the', '[MASK]', '[MASK]', ""'Lettice'"", 'and', 'the', '[MASK]', '[MASK]', ""'HMS"", ""Atalanta'""]","SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'","['battle', 'ship', 'date', 'lost_in_battle', 'id', 'name']","[('battle', 'T1'), ('ship', 'T2')]","['date', 'lost_in_battle', 'id', 'name']","intersect,as,join,from,select,where",True,"['as', 'join', 'where']",0.75,1.0
5429,5429,What is the name and opening year for the branch that registered the most members in 2016?,What is the [MASK] and [MASK] [MASK] for the [MASK] that [MASK] the most [MASK] in 2016?,"['What', 'is', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', 'that', '[MASK]', 'the', 'most', '[MASK]', 'in', '2016?']","SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1","['membership_register_branch', 'branch', 'register_year', 'branch_id', 'open_year', 'name']","[('membership_register_branch', 'T1'), ('branch', 'T2')]","['register_year', 'branch_id', 'open_year', 'name']","as,group,join,limit,from,count,order,select,desc,where",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc', 'where']",1.0,1.0
1915,1915,List the names of buildings with at least 200 feet of height and with at least 20 floors.,List the [MASK] of [MASK] with at least 200 [MASK] of [MASK] and with at least 20 [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'with', 'at', 'least', '200', '[MASK]', 'of', '[MASK]', 'and', 'with', 'at', 'least', '20', '[MASK]']",SELECT name FROM building WHERE height_feet  >=  200 AND floors  >=  20,"['building', 'floors', 'height_feet', 'name']","[('building', '')]","['floors', 'height_feet', 'name']","select,and,from,where",False,"['count', 'where']",0.5,0.5
7305,7305,How many different templates do all document use?,How many different [MASK] do all [MASK] use?,"['How', 'many', 'different', '[MASK]', 'do', 'all', '[MASK]', 'use?']",SELECT count(DISTINCT template_id) FROM Documents,"['Documents', 'template_id']","[('Documents', '')]",['template_id'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
312,312,Find the catalog publisher that has the most catalogs.,Find the [MASK] [MASK] that has the most [MASK],"['Find', 'the', '[MASK]', '[MASK]', 'that', 'has', 'the', 'most', '[MASK]']",SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1,"['catalogs', 'catalog_publisher']","[('catalogs', '')]",['catalog_publisher'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
7747,7747,Give the names of nations that speak both English and French.,Give the [MASK] of nations that speak both [MASK] and [MASK],"['Give', 'the', '[MASK]', 'of', 'nations', 'that', 'speak', 'both', '[MASK]', 'and', '[MASK]']","SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""","['country', 'countrylanguage', 'CountryCode', 'Name', 'English', 'Code', 'French', 'Language']","[('country', 'T1'), ('countrylanguage', 'T2')]","['CountryCode', 'Name', 'English', 'Code', 'French', 'Language']","intersect,as,join,from,select,where",True,"['intersect', 'as', 'join', 'where']",1.0,1.0
6651,6651,How many employees live in Georgia?,How many [MASK] live in [MASK],"['How', 'many', '[MASK]', 'live', 'in', '[MASK]']","SELECT count(*) FROM Addresses WHERE state_province_county = ""Georgia"";","['Addresses', 'Georgia', 'state_province_county']","[('Addresses', '')]","['Georgia', 'state_province_county']","select,count,from,where",False,"['count', 'where']",1.0,1.0
3213,3213,Which school has the smallest amount of professors?,Which [MASK] has the smallest amount of [MASK],"['Which', '[MASK]', 'has', 'the', 'smallest', 'amount', 'of', '[MASK]']",SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1,"['professor', 'department', 'dept_code', 'school_code']","[('professor', 'T2'), ('department', 'T1')]","['dept_code', 'school_code']","as,group,join,limit,count,order,select,from",True,"['limit', 'order', 'as', 'group', 'join', 'count']",1.0,1.0
2441,2441,Who directed Avatar?,Who [MASK] Avatar?,"['Who', '[MASK]', 'Avatar?']",SELECT director FROM Movie WHERE title  = 'Avatar',"['Movie', 'director', 'title']","[('Movie', '')]","['director', 'title']","select,from,where",False,"['where', 'as']",1.0,0.5
3454,3454,What is the average salary of employees who have a commission percentage that is not null?,What is the average [MASK] of [MASK] who have a [MASK] percentage that is not [MASK],"['What', 'is', 'the', 'average', '[MASK]', 'of', '[MASK]', 'who', 'have', 'a', '[MASK]', 'percentage', 'that', 'is', 'not', '[MASK]']","SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != ""null"" GROUP BY department_id","['employees', 'salary', 'null', 'commission_pct', 'department_id']","[('employees', '')]","['salary', 'null', 'commission_pct', 'department_id']","group,from,avg,select,where",False,"['as', 'in', 'join', 'avg', 'where', 'not']",0.6666666666666666,0.3333333333333333
3828,3828,"What are the enrollment dates of all the tests that have result ""Pass""?","What are the [MASK] [MASK] [MASK] all the [MASK] that have [MASK] ""Pass""?","['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', 'all', 'the', '[MASK]', 'that', 'have', '[MASK]', '""Pass""?']","SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  ""Pass""","['Student_Tests_Taken', 'Student_Course_Enrolment', 'test_result', 'date_of_enrolment', 'Pass', 'registration_id']","[('Student_Tests_Taken', 'T2'), ('Student_Course_Enrolment', 'T1')]","['test_result', 'date_of_enrolment', 'Pass', 'registration_id']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
6553,6553,What are the numbers of wines for different grapes?,What are the numbers of [MASK] for different [MASK],"['What', 'are', 'the', 'numbers', 'of', '[MASK]', 'for', 'different', '[MASK]']","SELECT count(*) ,  Grape FROM WINE GROUP BY Grape","['WINE', 'Grape']","[('WINE', '')]",['Grape'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
677,677,Show all customer ids and the number of accounts for each customer.,Show all [MASK] [MASK] and the number of [MASK] for each [MASK],"['Show', 'all', '[MASK]', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'for', 'each', '[MASK]']","SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id","['Accounts', 'customer_id']","[('Accounts', '')]",['customer_id'],"select,count,from,group",False,"['group', 'count']",1.0,1.0
7096,7096,What is the model of the car with the smallest amount of horsepower?,What is the [MASK] of the [MASK] with the smallest amount of [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'smallest', 'amount', 'of', '[MASK]']",SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,"['CAR_NAMES', 'CARS_DATA', 'MakeId', 'Id', 'Model', 'horsepower']","[('CAR_NAMES', 'T1'), ('CARS_DATA', 'T2')]","['MakeId', 'Id', 'Model', 'horsepower']","asc,as,join,limit,order,select,from",True,"['asc', 'limit', 'order']",0.6,1.0
165,165,Count the number of trips that did not end in San Francisco city.,Count the number of [MASK] that did not [MASK] in San [MASK] [MASK],"['Count', 'the', 'number', 'of', '[MASK]', 'that', 'did', 'not', '[MASK]', 'in', 'San', '[MASK]', '[MASK]']","SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city !=  ""San Francisco""","['station', 'trip', 'end_station_id', 'city', 'San Francisco', 'id']","[('station', 'T2'), ('trip', 'T1')]","['end_station_id', 'city', 'San Francisco', 'id']","as,join,count,where,select,from",True,"['where', 'in', 'count', 'not']",0.5,0.5
4424,4424,What is average age of male for different job title?,What is average [MASK] of male for different [MASK] title?,"['What', 'is', 'average', '[MASK]', 'of', 'male', 'for', 'different', '[MASK]', 'title?']","SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job","['Person', 'job', 'gender', 'age']","[('Person', '')]","['job', 'gender', 'age']","group,from,avg,select,where",False,"['group', 'avg', 'where']",1.0,1.0
5132,5132,What are the phones and emails of workshop groups in which services are performed?,What are the [MASK] and [MASK] of [MASK] [MASK] in which [MASK] are performed?,"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', '[MASK]', 'in', 'which', '[MASK]', 'are', 'performed?']","SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID","['Drama_Workshop_Groups', 'Services', 'Workshop_Group_ID', 'Store_Phone', 'Store_Email_Address']","[('Drama_Workshop_Groups', 'T1'), ('Services', 'T2')]","['Workshop_Group_ID', 'Store_Phone', 'Store_Email_Address']","select,join,from,as",True,[],,
2133,2133,how many female dependents are there?,how many female [MASK] are there?,"['how', 'many', 'female', '[MASK]', 'are', 'there?']",SELECT count(*) FROM dependent WHERE sex  =  'F',"['dependent', 'sex']","[('dependent', '')]",['sex'],"select,count,from,where",False,"['count', 'and', 'where']",1.0,0.6666666666666666
2131,2131,List all department names ordered by their starting date.,List all [MASK] [MASK] ordered by their [MASK] [MASK],"['List', 'all', '[MASK]', '[MASK]', 'ordered', 'by', 'their', '[MASK]', '[MASK]']",SELECT dname FROM department ORDER BY mgr_start_date,"['department', 'mgr_start_date', 'dname']","[('department', '')]","['mgr_start_date', 'dname']","select,order,from",False,"['asc', 'order']",1.0,0.5
2254,2254,What are the names of the technicians by ascending order of quality rank for the machine they are assigned?,What are the [MASK] of the [MASK] by ascending order of [MASK] [MASK] for the [MASK] they are [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'by', 'ascending', 'order', 'of', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', 'they', 'are', '[MASK]']",SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank,"['technician', 'machine', 'repair_assignment', 'Name', 'machine_id', 'technician_ID', 'quality_rank']","[('technician', 'T3'), ('machine', 'T2'), ('repair_assignment', 'T1')]","['Name', 'machine_id', 'technician_ID', 'quality_rank']","as,join,order,select,from",True,"['asc', 'order']",0.3333333333333333,0.5
4199,4199,"What are the name, role code, and date of birth of the employee named 'Armani'?",What are the [MASK] [MASK] [MASK] and [MASK] [MASK] [MASK] [MASK] the [MASK] [MASK] 'Armani'?,"['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'the', '[MASK]', '[MASK]', ""'Armani'?""]","SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'","['Employees', 'role_code', 'date_of_birth', 'employee_name', 'employee_Name']","[('Employees', '')]","['role_code', 'date_of_birth', 'employee_name', 'employee_Name']","select,from,where",False,['where'],1.0,1.0
3266,3266,"What is the first and last name of the youngest student with a GPA above 3, and what is their GPA?","What is the first and last [MASK] of the youngest [MASK] with a GPA above 3, and what is their GPA?","['What', 'is', 'the', 'first', 'and', 'last', '[MASK]', 'of', 'the', 'youngest', '[MASK]', 'with', 'a', 'GPA', 'above', '3,', 'and', 'what', 'is', 'their', 'GPA?']","SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1","['student', 'stu_gpa', 'stu_dob', 'stu_lname', 'stu_fname']","[('student', '')]","['stu_gpa', 'stu_dob', 'stu_lname', 'stu_fname']","limit,order,where,select,desc,from",False,"['limit', 'order', 'where', 'desc']",1.0,1.0
734,734,What are the different types of transactions?,What are the different [MASK] of [MASK],"['What', 'are', 'the', 'different', '[MASK]', 'of', '[MASK]']",SELECT DISTINCT transaction_type FROM Financial_Transactions,"['Financial_Transactions', 'transaction_type']","[('Financial_Transactions', '')]",['transaction_type'],"distinct,select,from",False,['distinct'],1.0,1.0
3737,3737,"What is the list of program names, sorted by the order of launch date?",What is the list of [MASK] [MASK] sorted by the order of [MASK] date?,"['What', 'is', 'the', 'list', 'of', '[MASK]', '[MASK]', 'sorted', 'by', 'the', 'order', 'of', '[MASK]', 'date?']",SELECT name FROM program ORDER BY launch,"['program', 'launch', 'name']","[('program', '')]","['launch', 'name']","select,order,from",False,"['asc', 'order']",1.0,0.5
5300,5300,Find the name of companies whose revenue is greater than the average revenue of all companies.,Find the [MASK] of companies whose [MASK] is greater than the average [MASK] of all companies.,"['Find', 'the', '[MASK]', 'of', 'companies', 'whose', '[MASK]', 'is', 'greater', 'than', 'the', 'average', '[MASK]', 'of', 'all', 'companies.']",SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers),"['manufacturers', 'revenue', 'name']","[('manufacturers', '')]","['revenue', 'name']","select,avg,from,where",False,"['avg', 'where']",1.0,1.0
694,694,"What are the ids, full names, and phones of each customer?","What are the ids, full [MASK] and [MASK] of each [MASK]","['What', 'are', 'the', 'ids,', 'full', '[MASK]', 'and', '[MASK]', 'of', 'each', '[MASK]']","SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers","['Customers', 'customer_id', 'customer_first_name', 'customer_last_name', 'customer_phone']","[('Customers', '')]","['customer_id', 'customer_first_name', 'customer_last_name', 'customer_phone']","select,from",False,[],,
3237,3237,Find the total credits of all classes offered by each department.,Find the total [MASK] of all [MASK] offered by each [MASK],"['Find', 'the', 'total', '[MASK]', 'of', 'all', '[MASK]', 'offered', 'by', 'each', '[MASK]']","SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code","['CLASS', 'course', 'dept_code', 'crs_code', 'crs_credit']","[('CLASS', 'T2'), ('course', 'T1')]","['dept_code', 'crs_code', 'crs_credit']","as,group,join,sum,select,from",True,"['group', 'sum']",0.5,1.0
3915,3915,What are the name and primarily affiliated department name of each physician?,What are the [MASK] and [MASK] [MASK] [MASK] [MASK] of each [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'of', 'each', '[MASK]']","SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1","['affiliated_with', 'department', 'physician', 'EmployeeID', 'physician', 'PrimaryAffiliation', 'DepartmentID', 'name', 'department']","[('affiliated_with', 'T2'), ('department', 'T3'), ('physician', 'T1')]","['EmployeeID', 'physician', 'PrimaryAffiliation', 'DepartmentID', 'name', 'department']","as,join,from,select,where",True,[],,
4593,4593,Show the names of products and the number of events they are in.,Show the [MASK] of [MASK] and the number of [MASK] they are in.,"['Show', 'the', '[MASK]', 'of', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'they', 'are', 'in.']","SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name","['Products_in_Events', 'Products', 'Product_Name', 'Product_ID']","[('Products_in_Events', 'T2'), ('Products', 'T1')]","['Product_Name', 'Product_ID']","as,group,join,count,select,from",True,"['as', 'group', 'join', 'count']",1.0,1.0
5436,5436,What is the sum of total pounds of purchase in year 2018 for all branches in London?,What is the sum of [MASK] [MASK] of [MASK] in [MASK] 2018 for all [MASK] in London?,"['What', 'is', 'the', 'sum', 'of', '[MASK]', '[MASK]', 'of', '[MASK]', 'in', '[MASK]', '2018', 'for', 'all', '[MASK]', 'in', 'London?']",SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  'London' AND T1.year  =  2018,"['purchase', 'branch', 'city', 'total_pounds', 'branch_id', 'year']","[('purchase', 'T1'), ('branch', 'T2')]","['city', 'total_pounds', 'branch_id', 'year']","as,join,sum,and,where,select,from",True,"['as', 'join', 'where']",0.6,1.0
5261,5261,"What is the vocal type of the band mate whose first name is ""Marianne"" played the most?",What is the [MASK] [MASK] of the [MASK] [MASK] whose [MASK] [MASK] is [MASK] [MASK] the most?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'whose', '[MASK]', '[MASK]', 'is', '[MASK]', '[MASK]', 'the', 'most?']","SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  ""Marianne"" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1","['vocals', 'band', 'Marianne', 'bandmate', 'firstname', 'id', 'TYPE']","[('vocals', 'T1'), ('band', 'T2')]","['Marianne', 'bandmate', 'firstname', 'id', 'TYPE']","as,group,join,limit,from,count,order,select,desc,where",True,"['limit', 'order', 'desc', 'as', 'group', 'join']",0.75,1.0
4056,4056,Report the first name and last name of all the students.,Report the [MASK] [MASK] and [MASK] [MASK] of all the [MASK],"['Report', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'all', 'the', '[MASK]']","SELECT DISTINCT firstname ,  lastname FROM list","['list', 'firstname', 'lastname']","[('list', '')]","['firstname', 'lastname']","distinct,select,from",False,['distinct'],1.0,1.0
1348,1348,Find the name of the courses that do not have any prerequisite?,Find the name of the [MASK] that do not have any [MASK],"['Find', 'the', 'name', 'of', 'the', '[MASK]', 'that', 'do', 'not', 'have', 'any', '[MASK]']",SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq),"['course', 'prereq', 'course_id', 'title']","[('course', ''), ('prereq', '')]","['course_id', 'title']","where,in,not,select,from",False,"['where', 'except']",0.3333333333333333,0.5
6471,6471,Find the total hours of all projects.,Find the total [MASK] of all [MASK],"['Find', 'the', 'total', '[MASK]', 'of', 'all', '[MASK]']",SELECT sum(hours) FROM projects,"['projects', 'hours']","[('projects', '')]",['hours'],"select,sum,from",False,['sum'],1.0,1.0
6974,6974,Show all book categories and the number of books in each category.,Show all [MASK] [MASK] and the number of [MASK] in each [MASK],"['Show', 'all', '[MASK]', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'in', 'each', '[MASK]']","SELECT category ,  count(*) FROM book_club GROUP BY category","['book_club', 'category']","[('book_club', '')]",['category'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
6804,6804,What are the names of the airports in the city of Goroka?,What are the [MASK] of the [MASK] in the [MASK] of Goroka?,"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'in', 'the', '[MASK]', 'of', 'Goroka?']",SELECT name FROM airports WHERE city  =  'Goroka',"['airports', 'city', 'name']","[('airports', '')]","['city', 'name']","select,from,where",False,['where'],1.0,1.0
4442,4442,Find the name and age of the person who is a friend of Dan or Alice.,Find the [MASK] and [MASK] of the [MASK] who is a [MASK] of Dan or Alice.,"['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'who', 'is', 'a', '[MASK]', 'of', 'Dan', 'or', 'Alice.']","SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'","['Person', 'PersonFriend', 'friend', 'age', 'name']","[('Person', 'T1'), ('PersonFriend', 'T2')]","['friend', 'age', 'name']","distinct,as,join,where,or,select,from",True,"['intersect', 'as', 'join', 'where']",0.6,0.75
5948,5948,Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.,Which [MASK] [MASK] does the most [MASK] [MASK] belong to? Tell me its [MASK] [MASK] [MASK] and [MASK],"['Which', '[MASK]', '[MASK]', 'does', 'the', 'most', '[MASK]', '[MASK]', 'belong', 'to?', 'Tell', 'me', 'its', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]']","SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1","['Ref_Attraction_Types', 'Tourist_Attractions', 'Attraction_Type_Code', 'Attraction_Type_Description']","[('Ref_Attraction_Types', 'T1'), ('Tourist_Attractions', 'T2')]","['Attraction_Type_Code', 'Attraction_Type_Description']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
3999,3999,What is the number of ships?,What is the number of [MASK],"['What', 'is', 'the', 'number', 'of', '[MASK]']",SELECT count(*) FROM ship,['ship'],"[('ship', '')]",[],"select,count,from",False,['count'],1.0,1.0
2258,2258,What are the names of the technicians  and how many machines are they assigned to repair?,What are the [MASK] of the [MASK] and how many machines are they [MASK] to [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'and', 'how', 'many', 'machines', 'are', 'they', '[MASK]', 'to', '[MASK]']","SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name","['technician', 'repair_assignment', 'Name', 'technician_ID']","[('technician', 'T2'), ('repair_assignment', 'T1')]","['Name', 'technician_ID']","as,group,join,count,select,from",True,"['group', 'count']",0.5,1.0
2615,2615,Which room has the highest base price?,Which [MASK] has the highest [MASK] [MASK],"['Which', '[MASK]', 'has', 'the', 'highest', '[MASK]', '[MASK]']","SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;","['Rooms', 'RoomId', 'roomName', 'basePrice']","[('Rooms', '')]","['RoomId', 'roomName', 'basePrice']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
6286,6286,Which city has the highest temperature in February?,Which [MASK] has the highest [MASK] in February?,"['Which', '[MASK]', 'has', 'the', 'highest', '[MASK]', 'in', 'February?']",SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1,"['temperature', 'city', 'city', 'Feb', 'city_id']","[('temperature', 'T2'), ('city', 'T1')]","['city', 'Feb', 'city_id']","as,join,limit,order,select,desc,from",True,"['as', 'join', 'limit', 'order', 'desc']",1.0,1.0
514,514,Which allergy is the most common?,Which [MASK] is the most common?,"['Which', '[MASK]', 'is', 'the', 'most', 'common?']",SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1,"['Has_allergy', 'Allergy']","[('Has_allergy', '')]",['Allergy'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
5124,5124,What is the name of the marketing region that the store Rob Dinning belongs to?,What is the [MASK] of the [MASK] [MASK] that the [MASK] Rob [MASK] belongs to?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'that', 'the', '[MASK]', 'Rob', '[MASK]', 'belongs', 'to?']","SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  ""Rob Dinning""","['Marketing_Regions', 'Stores', 'Store_Name', 'Rob Dinning', 'Marketing_Region_Code', 'Marketing_Region_Name']","[('Marketing_Regions', 'T1'), ('Stores', 'T2')]","['Store_Name', 'Rob Dinning', 'Marketing_Region_Code', 'Marketing_Region_Name']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
7212,7212,How many flights fly from Aberdeen to Ashley?,How many [MASK] fly from [MASK] to [MASK],"['How', 'many', '[MASK]', 'fly', 'from', '[MASK]', 'to', '[MASK]']","SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""","['AIRPORTS', 'FLIGHTS', 'AIRPORTS', 'AirportCode', 'Ashley', 'DestAirport', 'SourceAirport', 'Aberdeen', 'City']","[('AIRPORTS', 'T3'), ('FLIGHTS', 'T1'), ('AIRPORTS', 'T2')]","['AirportCode', 'Ashley', 'DestAirport', 'SourceAirport', 'Aberdeen', 'City']","as,join,count,and,where,select,from",True,"['as', 'join', 'count', 'where']",0.8,1.0
4960,4960,What are the unique types of player positions in the tryout?,What are the unique types of [MASK] positions in the [MASK],"['What', 'are', 'the', 'unique', 'types', 'of', '[MASK]', 'positions', 'in', 'the', '[MASK]']",SELECT count(DISTINCT pPos) FROM tryout,"['tryout', 'pPos']","[('tryout', '')]",['pPos'],"distinct,select,count,from",False,['distinct'],0.5,1.0
7035,7035,List singer names and number of concerts for each singer.,List [MASK] [MASK] and number of [MASK] for each [MASK],"['List', '[MASK]', '[MASK]', 'and', 'number', 'of', '[MASK]', 'for', 'each', '[MASK]']","SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","['singer', 'singer_in_concert', 'singer_id', 'name']","[('singer', 'T2'), ('singer_in_concert', 'T1')]","['singer_id', 'name']","as,group,join,count,select,from",True,"['count', 'group', 'as', 'join']",1.0,1.0
5322,5322,Select the names of all the products in the store.,Select the [MASK] of all the [MASK] in the store.,"['Select', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', 'in', 'the', 'store.']",SELECT Name FROM Products,"['Products', 'Name']","[('Products', '')]",['Name'],"select,from",False,[],,
2862,2862,How many papers are published in total?,How many [MASK] are published in total?,"['How', 'many', '[MASK]', 'are', 'published', 'in', 'total?']",SELECT count(*) FROM papers,['papers'],"[('papers', '')]",[],"select,count,from",False,"['as', 'join', 'count', 'where']",1.0,0.25
7475,7475,find the code of the country where has the greatest number of players.,find the [MASK] of the [MASK] where has the greatest number of [MASK],"['find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'where', 'has', 'the', 'greatest', 'number', 'of', '[MASK]']",SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,"['players', 'country_code']","[('players', '')]",['country_code'],"group,limit,count,order,select,desc,from",False,"['limit', 'order', 'desc', 'group', 'count']",1.0,1.0
3949,3949,Which patient is undergoing the most recent treatment?,Which [MASK] is [MASK] the most recent [MASK],"['Which', '[MASK]', 'is', '[MASK]', 'the', 'most', 'recent', '[MASK]']",SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1,"['undergoes', 'patient', 'dateundergoes']","[('undergoes', '')]","['patient', 'dateundergoes']","select,limit,order,from",False,"['limit', 'order', 'desc']",1.0,0.6666666666666666
3430,3430,"What are the job ids and dates of hire for employees hired after November 5th, 2007 and before July 5th, 2009?","What are the [MASK] [MASK] and [MASK] of [MASK] for [MASK] [MASK] after November 5th, 2007 and before July 5th, 2009?","['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'for', '[MASK]', '[MASK]', 'after', 'November', '5th,', '2007', 'and', 'before', 'July', '5th,', '2009?']","SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'","['employees', 'hire_date', 'job_id']","[('employees', '')]","['hire_date', 'job_id']","and,between,where,select,from",False,"['intersect', 'where']",0.3333333333333333,0.5
4659,4659,List all information about courses sorted by credits in the ascending order.,List all information about [MASK] sorted by [MASK] in the ascending order.,"['List', 'all', 'information', 'about', '[MASK]', 'sorted', 'by', '[MASK]', 'in', 'the', 'ascending', 'order.']",SELECT * FROM COURSE ORDER BY Credits,"['COURSE', 'Credits']","[('COURSE', '')]",['Credits'],"select,order,from",False,['order'],1.0,1.0
7833,7833,"Return the maximum and minimum shares for performances that do not have the type ""Live final"".",Return the maximum and minimum [MASK] for [MASK] that do not have the [MASK] [MASK] [MASK],"['Return', 'the', 'maximum', 'and', 'minimum', '[MASK]', 'for', '[MASK]', 'that', 'do', 'not', 'have', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != ""Live final""","['performance', 'SHARE', 'Live final', 'TYPE']","[('performance', '')]","['SHARE', 'Live final', 'TYPE']","min,from,select,where,max",False,"['min', 'max']",0.6666666666666666,1.0
6515,6515,Find name of the project that needs the least amount of time to finish and the name of scientists who worked on it.,Find [MASK] of the [MASK] that needs the least amount of time to finish and the [MASK] of [MASK] who worked on it.,"['Find', '[MASK]', 'of', 'the', '[MASK]', 'that', 'needs', 'the', 'least', 'amount', 'of', 'time', 'to', 'finish', 'and', 'the', '[MASK]', 'of', '[MASK]', 'who', 'worked', 'on', 'it.']","SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)","['projects', 'scientists', 'projects', 'assignedto', 'project', 'name', 'hours', 'code', 'scientist', 'SSN']","[('projects', ''), ('scientists', 'T3'), ('projects', 'T2'), ('assignedto', 'T1')]","['project', 'name', 'hours', 'code', 'scientist', 'SSN']","min,as,join,from,select,where",True,"['as', 'join', 'limit', 'order']",0.5,0.5
7325,7325,How many templates have template type code CV?,How many [MASK] have [MASK] [MASK] [MASK] CV?,"['How', 'many', '[MASK]', 'have', '[MASK]', '[MASK]', '[MASK]', 'CV?']","SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""","['Templates', 'CV', 'template_type_code']","[('Templates', '')]","['CV', 'template_type_code']","select,count,from,where",False,"['count', 'where']",1.0,1.0
1011,1011,Find the team names of the universities whose enrollments are smaller than the average enrollment size.,Find the [MASK] [MASK] of the [MASK] whose [MASK] are smaller than the average [MASK] size.,"['Find', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'whose', '[MASK]', 'are', 'smaller', 'than', 'the', 'average', '[MASK]', 'size.']",SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university),"['university', 'basketball_match', 'university', 'team_name', 'enrollment', 'school_id']","[('university', ''), ('basketball_match', 't2'), ('university', 't1')]","['team_name', 'enrollment', 'school_id']","as,join,from,avg,select,where",True,"['avg', 'where']",0.5,1.0
5399,5399,Which products have problems reported by both the staff named Lacey Bosco and the staff named Kenton Champlin?,Which [MASK] have [MASK] [MASK] [MASK] both the [MASK] [MASK] [MASK] [MASK] and the [MASK] [MASK] [MASK] [MASK],"['Which', '[MASK]', 'have', '[MASK]', '[MASK]', '[MASK]', 'both', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = ""Lacey"" AND T3.staff_last_name = ""Bosco"" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = ""Kenton"" AND T3.staff_last_name = ""Champlin""","['product', 'problems', 'staff', 'Champlin', 'reported_by_staff_id', 'staff_id', 'staff_first_name', 'staff_last_name', 'Lacey', 'product_id', 'product_name', 'Kenton', 'Bosco']","[('product', 'T2'), ('problems', 'T1'), ('staff', 'T3')]","['Champlin', 'reported_by_staff_id', 'staff_id', 'staff_first_name', 'staff_last_name', 'Lacey', 'product_id', 'product_name', 'Kenton', 'Bosco']","intersect,as,join,and,where,select,from",True,"['intersect', 'where', 'as', 'join']",0.8,1.0
890,890,Find the titles of albums that contain tracks of both the Reggae and Rock genres.,Find the [MASK] of [MASK] that contain [MASK] of both the Reggae and Rock [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', 'that', 'contain', '[MASK]', 'of', 'both', 'the', 'Reggae', 'and', 'Rock', '[MASK]']",SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock',"['Track', 'Genre', 'Album', 'Name', 'GenreID', 'AlbumId', 'Title']","[('Track', 'T2'), ('Genre', 'T3'), ('Album', 'T1')]","['Name', 'GenreID', 'AlbumId', 'Title']","intersect,as,join,from,select,where",True,"['intersect', 'as', 'join', 'where']",1.0,1.0
2791,2791,Which party has the largest number of delegates?,Which [MASK] has the largest number of delegates?,"['Which', '[MASK]', 'has', 'the', 'largest', 'number', 'of', 'delegates?']",SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1,"['party', 'election', 'Party', 'Party_ID']","[('party', 'T2'), ('election', 'T1')]","['Party', 'Party_ID']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'join', 'group', 'limit', 'count', 'order', 'desc']",1.0,1.0
5357,5357,"For the problem with id 10, return the ids and dates of its problem logs.","For the [MASK] with [MASK] 10, return the [MASK] and [MASK] of its [MASK] logs.","['For', 'the', '[MASK]', 'with', '[MASK]', '10,', 'return', 'the', '[MASK]', 'and', '[MASK]', 'of', 'its', '[MASK]', 'logs.']","SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10","['problem_log', 'log_entry_date', 'problem_id', 'problem_log_id']","[('problem_log', '')]","['log_entry_date', 'problem_id', 'problem_log_id']","select,from,where",False,['where'],1.0,1.0
7946,7946,"List the date of each treatment, together with the first name of the professional who operated it.",List the [MASK] [MASK] each [MASK] together with the [MASK] [MASK] [MASK] the [MASK] who operated it.,"['List', 'the', '[MASK]', '[MASK]', 'each', '[MASK]', 'together', 'with', 'the', '[MASK]', '[MASK]', '[MASK]', 'the', '[MASK]', 'who', 'operated', 'it.']","SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","['Treatments', 'Professionals', 'professional_id', 'date_of_treatment', 'first_name']","[('Treatments', 'T1'), ('Professionals', 'T2')]","['professional_id', 'date_of_treatment', 'first_name']","select,join,from,as",True,"['join', 'as']",1.0,1.0
6827,6827,Find the number of routes whose destination airports are in Canada.,Find the number of [MASK] whose destination [MASK] are in Canada.,"['Find', 'the', 'number', 'of', '[MASK]', 'whose', 'destination', '[MASK]', 'are', 'in', 'Canada.']",SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada',"['airports', 'routes', 'dst_apid', 'country', 'apid']","[('airports', 'T1'), ('routes', 'T2')]","['dst_apid', 'country', 'apid']","as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",1.0,1.0
3460,3460,What are the employee ids for employees who have held two or more jobs?,What are the [MASK] [MASK] for [MASK] who have held two or more jobs?,"['What', 'are', 'the', '[MASK]', '[MASK]', 'for', '[MASK]', 'who', 'have', 'held', 'two', 'or', 'more', 'jobs?']",SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2,"['job_history', 'employee_id']","[('job_history', '')]",['employee_id'],"group,count,having,select,from",False,"['group', 'count', 'having', 'as', 'join']",1.0,0.6
4728,4728,Count the number of stores the chain South has.,Count the number of [MASK] the [MASK] [MASK] has.,"['Count', 'the', 'number', 'of', '[MASK]', 'the', '[MASK]', '[MASK]', 'has.']","SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  ""South""","['department_stores', 'department_store_chain', 'dept_store_chain_name', 'dept_store_chain_id', 'South']","[('department_stores', 'T1'), ('department_store_chain', 'T2')]","['dept_store_chain_name', 'dept_store_chain_id', 'South']","as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",1.0,1.0
3965,3965,Find the ids of the nurses who are on call in block floor 1 and block code 1.,Find the [MASK] of the [MASK] who are [MASK] [MASK] in [MASK] [MASK] 1 and [MASK] [MASK] 1.,"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'are', '[MASK]', '[MASK]', 'in', '[MASK]', '[MASK]', '1', 'and', '[MASK]', '[MASK]', '1.']",SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1,"['on_call', 'blockfloor', 'nurse', 'blockcode']","[('on_call', '')]","['blockfloor', 'nurse', 'blockcode']","select,and,from,where",False,"['as', 'join', 'where']",0.5,0.3333333333333333
194,194,What are all the different start station names for a trip that lasted less than 100?,What are all the different [MASK] [MASK] [MASK] for a [MASK] that lasted less than 100?,"['What', 'are', 'all', 'the', 'different', '[MASK]', '[MASK]', '[MASK]', 'for', 'a', '[MASK]', 'that', 'lasted', 'less', 'than', '100?']",SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100,"['trip', 'start_station_name', 'duration']","[('trip', '')]","['start_station_name', 'duration']","distinct,select,from,where",False,['where'],0.5,1.0
513,513,Which allergy has most number of students affected?,Which [MASK] [MASK] most number of [MASK] affected?,"['Which', '[MASK]', '[MASK]', 'most', 'number', 'of', '[MASK]', 'affected?']",SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1,"['Has_allergy', 'Allergy']","[('Has_allergy', '')]",['Allergy'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
1638,1638,"Show the minimum, maximum, and average age for all people.","Show the minimum, maximum, and average [MASK] for all [MASK]","['Show', 'the', 'minimum,', 'maximum,', 'and', 'average', '[MASK]', 'for', 'all', '[MASK]']","SELECT min(age) ,  max(age) ,  avg(age) FROM people","['people', 'age']","[('people', '')]",['age'],"min,avg,select,from,max",False,"['min', 'avg', 'max']",1.0,1.0
1455,1455,How many students and instructors are in each department?,How many [MASK] and [MASK] are in each [MASK],"['How', 'many', '[MASK]', 'and', '[MASK]', 'are', 'in', 'each', '[MASK]']","SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name","['student', 'instructor', 'department', 'id', 'dept_name']","[('student', 'T2'), ('instructor', 'T3'), ('department', 'T1')]","['id', 'dept_name']","distinct,as,group,join,count,select,from",True,"['count', 'group', 'as', 'join']",0.8,1.0
4305,4305,"Which clubs have one or more members from the city with code ""BAL""? Give me the names of the clubs.","Which [MASK] have one or more [MASK] from the [MASK] with [MASK] ""BAL""? Give me the [MASK] [MASK] the [MASK]","['Which', '[MASK]', 'have', 'one', 'or', 'more', '[MASK]', 'from', 'the', '[MASK]', 'with', '[MASK]', '""BAL""?', 'Give', 'me', 'the', '[MASK]', '[MASK]', 'the', '[MASK]']","SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  ""BAL""","['student', 'member_of_club', 'club', 'city_code', 'BAL', 'clubname', 'clubid', 'stuid']","[('student', 't3'), ('member_of_club', 't2'), ('club', 't1')]","['city_code', 'BAL', 'clubname', 'clubid', 'stuid']","distinct,as,join,where,select,from",True,"['distinct', 'as', 'join', 'where']",1.0,1.0
7144,7144,What is the number of cars with more than 4 cylinders?,What is the number of [MASK] with more than 4 [MASK],"['What', 'is', 'the', 'number', 'of', '[MASK]', 'with', 'more', 'than', '4', '[MASK]']",SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;,"['CARS_DATA', 'Cylinders']","[('CARS_DATA', '')]",['Cylinders'],"select,count,from,where",False,"['group', 'count', 'having']",0.5,0.3333333333333333
4044,4044,Which classrooms are used by grade 5?,Which [MASK] are used by [MASK] 5?,"['Which', '[MASK]', 'are', 'used', 'by', '[MASK]', '5?']",SELECT DISTINCT classroom FROM list WHERE grade  =  5,"['list', 'classroom', 'grade']","[('list', '')]","['classroom', 'grade']","distinct,select,from,where",False,"['distinct', 'where']",1.0,1.0
5282,5282,Find the total revenue created by the companies whose headquarter is located at Austin.,Find the total [MASK] created by the companies whose [MASK] is located at Austin.,"['Find', 'the', 'total', '[MASK]', 'created', 'by', 'the', 'companies', 'whose', '[MASK]', 'is', 'located', 'at', 'Austin.']",SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin',"['manufacturers', 'revenue', 'headquarter']","[('manufacturers', '')]","['revenue', 'headquarter']","select,sum,from,where",False,"['min', 'sum', 'where']",1.0,0.6666666666666666
635,635,List the name of all tracks in the playlists of Movies.,[MASK] the [MASK] of all [MASK] in the [MASK] of [MASK],"['[MASK]', 'the', '[MASK]', 'of', 'all', '[MASK]', 'in', 'the', '[MASK]', 'of', '[MASK]']","SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = ""Movies"";","['playlist_tracks', 'playlists', 'tracks', 'track_id', 'Movies', 'name', 'id', 'playlist_id']","[('playlist_tracks', 'T2'), ('playlists', 'T3'), ('tracks', 'T1')]","['track_id', 'Movies', 'name', 'id', 'playlist_id']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
7501,7501,What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?,What are the distinct [MASK] [MASK] which are between [MASK] [MASK] 'Kaloyan' and [MASK] [MASK] 'Baldwin I'?,"['What', 'are', 'the', 'distinct', '[MASK]', '[MASK]', 'which', 'are', 'between', '[MASK]', '[MASK]', ""'Kaloyan'"", 'and', '[MASK]', '[MASK]', ""'Baldwin"", ""I'?""]",SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I',"['battle', 'latin_commander', 'bulgarian_commander', 'name']","[('battle', '')]","['latin_commander', 'bulgarian_commander', 'name']","select,and,from,where",False,['distinct'],0.0,0.0
5217,5217,"What are all the instruments used by the musician with the last name ""Heilo""?",What are all the [MASK] used by the musician with the [MASK] [MASK] [MASK],"['What', 'are', 'all', 'the', '[MASK]', 'used', 'by', 'the', 'musician', 'with', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo""","['Band', 'instruments', 'Heilo', 'lastname', 'id', 'bandmateid', 'instrument']","[('Band', 'T2'), ('instruments', 'T1')]","['Heilo', 'lastname', 'id', 'bandmateid', 'instrument']","as,join,from,select,where",True,"['as', 'join', 'and', 'where']",1.0,0.75
87,87,What are the id of students who registered course 301?,What are the [MASK] of [MASK] who registered [MASK] 301?,"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'who', 'registered', '[MASK]', '301?']",SELECT student_id FROM student_course_attendance WHERE course_id  =  301,"['student_course_attendance', 'course_id', 'student_id']","[('student_course_attendance', '')]","['course_id', 'student_id']","select,from,where",False,['where'],1.0,1.0
1369,1369,What are the names of the students who took classes in 2009 or 2010?,What are the [MASK] of the [MASK] who took [MASK] in 2009 or 2010?,"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'took', '[MASK]', 'in', '2009', 'or', '2010?']",SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010,"['student', 'takes', 'YEAR', 'id', 'name']","[('student', 'T1'), ('takes', 'T2')]","['YEAR', 'id', 'name']","distinct,as,join,where,or,select,from",True,"['and', 'where']",0.2,0.5
4566,4566,Which building has the largest number of company offices? Give me the building name.,Which [MASK] has the largest number of [MASK] [MASK] Give me the [MASK] [MASK],"['Which', '[MASK]', 'has', 'the', 'largest', 'number', 'of', '[MASK]', '[MASK]', 'Give', 'me', 'the', '[MASK]', '[MASK]']",SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1,"['Companies', 'Office_locations', 'buildings', 'company_id', 'building_id', 'id', 'name']","[('Companies', 'T3'), ('Office_locations', 'T1'), ('buildings', 'T2')]","['company_id', 'building_id', 'id', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc']",0.7142857142857143,1.0
7978,7978,How many dogs have not gone through any treatment?,How many [MASK] have not gone through any [MASK],"['How', 'many', '[MASK]', 'have', 'not', 'gone', 'through', 'any', '[MASK]']",SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),"['Treatments', 'Dogs', 'dog_id']","[('Treatments', ''), ('Dogs', '')]",['dog_id'],"where,in,count,not,select,from",False,"['where', 'in', 'count', 'not']",1.0,1.0
7053,7053,Find the number of dog pets that are raised by female students (with sex F).,Find the number of dog [MASK] that are raised by female [MASK] (with [MASK] F).,"['Find', 'the', 'number', 'of', 'dog', '[MASK]', 'that', 'are', 'raised', 'by', 'female', '[MASK]', '(with', '[MASK]', 'F).']",SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',"['student', 'has_pet', 'pets', 'pettype', 'sex', 'petid', 'stuid']","[('student', 'T1'), ('has_pet', 'T2'), ('pets', 'T3')]","['pettype', 'sex', 'petid', 'stuid']","as,join,count,and,where,select,from",True,"['count', 'where']",0.4,1.0
190,190,"For each start station id, what is its name, longitude and average duration of trips started there?","For each [MASK] [MASK] id, what is its [MASK] [MASK] and average [MASK] of [MASK] [MASK] there?","['For', 'each', '[MASK]', '[MASK]', 'id,', 'what', 'is', 'its', '[MASK]', '[MASK]', 'and', 'average', '[MASK]', 'of', '[MASK]', '[MASK]', 'there?']","SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id","['station', 'trip', 'long', 'start_station_id', 'duration', 'name', 'id']","[('station', 'T1'), ('trip', 'T2')]","['long', 'start_station_id', 'duration', 'name', 'id']","as,group,join,avg,select,from",True,"['group', 'avg']",0.5,1.0
3824,3824,What are the descriptions and names of the courses that have student enrollment bigger than 2?,What are the [MASK] and [MASK] of the [MASK] that have [MASK] [MASK] bigger than 2?,"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'that', 'have', '[MASK]', '[MASK]', 'bigger', 'than', '2?']","SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2","['Courses', 'Student_Course_Enrolment', 'course_description', 'course_id', 'course_name']","[('Courses', 'T1'), ('Student_Course_Enrolment', 'T2')]","['course_description', 'course_id', 'course_name']","as,group,join,count,having,select,from",True,"['group', 'count', 'having']",0.6,1.0
178,178,What is the name of every city that has at least 15 stations and how many stations does it have?,What is the name of every [MASK] that has at least 15 [MASK] and how many [MASK] does it have?,"['What', 'is', 'the', 'name', 'of', 'every', '[MASK]', 'that', 'has', 'at', 'least', '15', '[MASK]', 'and', 'how', 'many', '[MASK]', 'does', 'it', 'have?']","SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15","['station', 'city']","[('station', '')]",['city'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
3924,3924,Find the patient who most recently stayed in room 111.,Find the [MASK] who most recently [MASK] in [MASK] 111.,"['Find', 'the', '[MASK]', 'who', 'most', 'recently', '[MASK]', 'in', '[MASK]', '111.']",SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1,"['stay', 'staystart', 'patient', 'room']","[('stay', '')]","['staystart', 'patient', 'room']","limit,order,where,select,desc,from",False,"['as', 'join', 'where']",0.25,0.3333333333333333
3840,3840,Find the student ID and middle name for all the students with at most two enrollments.,Find the [MASK] ID and [MASK] [MASK] for all the [MASK] with at most two [MASK],"['Find', 'the', '[MASK]', 'ID', 'and', '[MASK]', '[MASK]', 'for', 'all', 'the', '[MASK]', 'with', 'at', 'most', 'two', '[MASK]']","SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2","['Students', 'Student_Course_Enrolment', 'student_id', 'middle_name']","[('Students', 'T2'), ('Student_Course_Enrolment', 'T1')]","['student_id', 'middle_name']","as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'count', 'having']",1.0,1.0
6700,6700,"List lesson id of all lessons taught by staff with first name as Janessa, last name as Sawayn and nickname containing letter 's'.",List [MASK] [MASK] of all [MASK] taught by [MASK] with [MASK] [MASK] as [MASK] [MASK] [MASK] as [MASK] and [MASK] containing letter 's'.,"['List', '[MASK]', '[MASK]', 'of', 'all', '[MASK]', 'taught', 'by', '[MASK]', 'with', '[MASK]', '[MASK]', 'as', '[MASK]', '[MASK]', '[MASK]', 'as', '[MASK]', 'and', '[MASK]', 'containing', 'letter', ""'s'.""]","SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"" AND nickname LIKE ""%s%"";","['Lessons', 'Staff', 'staff_id', '%s%', 'nickname', 'Janessa', 'lesson_id', 'last_name', 'Sawayn', 'first_name']","[('Lessons', 'T1'), ('Staff', 'T2')]","['staff_id', '%s%', 'nickname', 'Janessa', 'lesson_id', 'last_name', 'Sawayn', 'first_name']","like,as,join,from,and,select,where",True,"['like', 'as', 'join', 'where']",0.8,1.0
2588,2588,How many king beds are there?,How many king [MASK] are there?,"['How', 'many', 'king', '[MASK]', 'are', 'there?']",SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';,"['Rooms', 'bedtype', 'beds']","[('Rooms', '')]","['bedtype', 'beds']","select,sum,from,where",False,['count'],0.0,0.0
3464,3464,Give the name of each department and the number of employees in each.,Give the [MASK] of each [MASK] and the number of [MASK] in each.,"['Give', 'the', '[MASK]', 'of', 'each', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'in', 'each.']","SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name","['departments', 'employees', 'department_name', 'department_id']","[('departments', 'T2'), ('employees', 'T1')]","['department_name', 'department_id']","as,group,join,count,select,from",True,"['count', 'group']",0.5,1.0
6119,6119,"How many orders have detail ""Second time""?",How many [MASK] have [MASK] [MASK] [MASK],"['How', 'many', '[MASK]', 'have', '[MASK]', '[MASK]', '[MASK]']","SELECT count(*) FROM customer_orders WHERE order_details  =  ""Second time""","['customer_orders', 'Second time', 'order_details']","[('customer_orders', '')]","['Second time', 'order_details']","select,count,from,where",False,"['count', 'where']",1.0,1.0
6199,6199,"Please show the results of music festivals and the number of music festivals that have had each, ordered by this count.","Please show the [MASK] of [MASK] [MASK] and the number of [MASK] [MASK] that have had each, ordered by this count.","['Please', 'show', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', '[MASK]', 'that', 'have', 'had', 'each,', 'ordered', 'by', 'this', 'count.']","SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC","['music_festival', 'RESULT']","[('music_festival', '')]",['RESULT'],"group,count,order,select,desc,from",False,"['asc', 'group', 'count', 'order']",0.75,0.75
1687,1687,Show all artist names with an average exhibition attendance over 200.,Show all [MASK] [MASK] with an average [MASK] [MASK] over 200.,"['Show', 'all', '[MASK]', '[MASK]', 'with', 'an', 'average', '[MASK]', '[MASK]', 'over', '200.']",SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200,"['exhibition', 'exhibition_record', 'artist', 'attendance', 'artist_id', 'exhibition_id', 'name']","[('exhibition', 'T2'), ('exhibition_record', 'T1'), ('artist', 'T3')]","['attendance', 'artist_id', 'exhibition_id', 'name']","as,group,join,having,avg,select,from",True,"['where', 'avg']",0.2,0.5
6891,6891,Find the ids of all the order items whose product id is 11.,Find the [MASK] of all the [MASK] [MASK] whose [MASK] [MASK] is 11.,"['Find', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', '[MASK]', 'whose', '[MASK]', '[MASK]', 'is', '11.']",SELECT order_item_id FROM order_items WHERE product_id = 11,"['order_items', 'product_id', 'order_item_id']","[('order_items', '')]","['product_id', 'order_item_id']","select,from,where",False,['where'],1.0,1.0
6888,6888,Find the order id and customer id associated with the oldest order.,Find the [MASK] [MASK] and [MASK] [MASK] associated with the oldest [MASK],"['Find', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'associated', 'with', 'the', 'oldest', '[MASK]']","SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1","['orders', 'customer_id', 'date_order_placed', 'order_id']","[('orders', '')]","['customer_id', 'date_order_placed', 'order_id']","select,limit,order,from",False,"['limit', 'order']",1.0,1.0
3321,3321,Find the first names of all professors in the Accounting department who is teaching some course and the class room.,Find the first [MASK] of all [MASK] in the Accounting [MASK] who is teaching some [MASK] and the [MASK] [MASK],"['Find', 'the', 'first', '[MASK]', 'of', 'all', '[MASK]', 'in', 'the', 'Accounting', '[MASK]', 'who', 'is', 'teaching', 'some', '[MASK]', 'and', 'the', '[MASK]', '[MASK]']","SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'","['professor', 'employee', 'department', 'CLASS', 'emp_fname', 'prof_num', 'dept_code', 'dept_name', 'class_room', 'emp_num']","[('professor', 'T3'), ('employee', 'T2'), ('department', 'T4'), ('CLASS', 'T1')]","['emp_fname', 'prof_num', 'dept_code', 'dept_name', 'class_room', 'emp_num']","as,join,from,select,where",True,"['join', 'as']",0.6666666666666666,1.0
1128,1128,Show names of climbers and the names of mountains they climb.,Show [MASK] of [MASK] and the [MASK] of [MASK] they [MASK],"['Show', '[MASK]', 'of', '[MASK]', 'and', 'the', '[MASK]', 'of', '[MASK]', 'they', '[MASK]']","SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID","['mountain', 'climber', 'Name', 'Mountain_ID']","[('mountain', 'T2'), ('climber', 'T1')]","['Name', 'Mountain_ID']","select,join,from,as",True,"['join', 'as']",1.0,1.0
3067,3067,What is the name of the bank branch that has lent the greatest amount?,What is the [MASK] of the [MASK] [MASK] that has lent the greatest [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'that', 'has', 'lent', 'the', 'greatest', '[MASK]']",SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1,"['bank', 'loan', 'branch_id', 'amount', 'bname']","[('bank', 'T1'), ('loan', 'T2')]","['branch_id', 'amount', 'bname']","as,group,join,limit,sum,order,select,desc,from",True,"['as', 'limit', 'order', 'desc']",0.5714285714285714,1.0
3145,3145,"Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.","Among those [MASK] who have [MASK] which [MASK] makes the least number of [MASK] List the [MASK] id, [MASK] [MASK] and [MASK] [MASK]","['Among', 'those', '[MASK]', 'who', 'have', '[MASK]', 'which', '[MASK]', 'makes', 'the', 'least', 'number', 'of', '[MASK]', 'List', 'the', '[MASK]', 'id,', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]']","SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1","['Engineer_Visits', 'Maintenance_Engineers', 'engineer_id', 'first_name', 'last_name']","[('Engineer_Visits', 'T2'), ('Maintenance_Engineers', 'T1')]","['engineer_id', 'first_name', 'last_name']","asc,as,group,join,limit,count,order,select,from",True,"['asc', 'limit', 'order', 'group', 'count']",0.7142857142857143,1.0
5908,5908,Find all the distinct visit dates.,Find all the distinct [MASK] [MASK],"['Find', 'all', 'the', 'distinct', '[MASK]', '[MASK]']",SELECT DISTINCT Visit_Date FROM VISITS,"['VISITS', 'Visit_Date']","[('VISITS', '')]",['Visit_Date'],"distinct,select,from",False,['distinct'],1.0,1.0
2559,2559,What are the crime rates of counties that contain cities that have white percentages of over 90?,What are the [MASK] [MASK] of [MASK] that contain [MASK] that have [MASK] percentages of over 90?,"['What', 'are', 'the', '[MASK]', '[MASK]', 'of', '[MASK]', 'that', 'contain', '[MASK]', 'that', 'have', '[MASK]', 'percentages', 'of', 'over', '90?']",SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90,"['county_public_safety', 'city', 'County_ID', 'White', 'Crime_rate']","[('county_public_safety', 'T2'), ('city', 'T1')]","['County_ID', 'White', 'Crime_rate']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
5402,5402,"Show name, address road, and city for all branches sorted by open year.",Show [MASK] [MASK] [MASK] and [MASK] for all [MASK] sorted by [MASK] [MASK],"['Show', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'for', 'all', '[MASK]', 'sorted', 'by', '[MASK]', '[MASK]']","SELECT name ,  address_road ,  city FROM branch ORDER BY open_year","['branch', 'address_road', 'city', 'open_year', 'name']","[('branch', '')]","['address_road', 'city', 'open_year', 'name']","select,order,from",False,['order'],1.0,1.0
1023,1023,the names of models that launched between 2002 and 2004.,the [MASK] of [MASK] that [MASK] between 2002 and 2004.,"['the', '[MASK]', 'of', '[MASK]', 'that', '[MASK]', 'between', '2002', 'and', '2004.']",SELECT Model_name FROM chip_model WHERE Launch_year BETWEEN 2002 AND 2004;,"['chip_model', 'Launch_year', 'Model_name']","[('chip_model', '')]","['Launch_year', 'Model_name']","and,between,where,select,from",False,"['and', 'between', 'where']",1.0,1.0
5848,5848,Show all date and share count of transactions.,Show all [MASK] and [MASK] [MASK] [MASK] [MASK],"['Show', 'all', '[MASK]', 'and', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT date_of_transaction ,  share_count FROM TRANSACTIONS","['TRANSACTIONS', 'share_count', 'date_of_transaction']","[('TRANSACTIONS', '')]","['share_count', 'date_of_transaction']","select,from",False,[],,
4567,4567,"Please show the names of the buildings whose status is ""on-hold"", in ascending order of stories.",Please show the [MASK] of the [MASK] whose [MASK] is [MASK] in [MASK] order of [MASK],"['Please', 'show', 'the', '[MASK]', 'of', 'the', '[MASK]', 'whose', '[MASK]', 'is', '[MASK]', 'in', '[MASK]', 'order', 'of', '[MASK]']","SELECT name FROM buildings WHERE Status  =  ""on-hold"" ORDER BY Stories ASC","['buildings', 'on-hold', 'Stories', 'Status', 'name']","[('buildings', '')]","['on-hold', 'Stories', 'Status', 'name']","asc,order,where,select,from",False,"['as', 'join']",0.0,0.0
398,398,What is the flight number and its distance for the one with the maximum price?,What is the [MASK] number and its [MASK] for the one with the maximum [MASK],"['What', 'is', 'the', '[MASK]', 'number', 'and', 'its', '[MASK]', 'for', 'the', 'one', 'with', 'the', 'maximum', '[MASK]']","SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1","['Flight', 'flno', 'price', 'distance']","[('Flight', '')]","['flno', 'price', 'distance']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
35,35,Give the years and official names of the cities of each competition.,Give the [MASK] and [MASK] [MASK] of the [MASK] of each [MASK],"['Give', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'of', 'each', '[MASK]']","SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID","['farm_competition', 'city', 'Year', 'Host_city_ID', 'Official_Name', 'City_ID']","[('farm_competition', 'T2'), ('city', 'T1')]","['Year', 'Host_city_ID', 'Official_Name', 'City_ID']","select,join,from,as",True,[],,
2253,2253,Show names of technicians in ascending order of quality rank of the machine they are assigned.,Show [MASK] of [MASK] in ascending order of [MASK] [MASK] of the [MASK] they are [MASK],"['Show', '[MASK]', 'of', '[MASK]', 'in', 'ascending', 'order', 'of', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'they', 'are', '[MASK]']",SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank,"['technician', 'machine', 'repair_assignment', 'Name', 'machine_id', 'technician_ID', 'quality_rank']","[('technician', 'T3'), ('machine', 'T2'), ('repair_assignment', 'T1')]","['Name', 'machine_id', 'technician_ID', 'quality_rank']","as,join,order,select,from",True,"['as', 'join', 'order']",1.0,1.0
2656,2656,How many council taxes are collected for renting arrears ?,How many council taxes are collected for [MASK] [MASK] ?,"['How', 'many', 'council', 'taxes', 'are', 'collected', 'for', '[MASK]', '[MASK]', '?']",SELECT count(*) FROM rent_arrears,['rent_arrears'],"[('rent_arrears', '')]",[],"select,count,from",False,['count'],1.0,1.0
252,252,"Show names of actors that have appeared in musical with name ""The Phantom of the Opera"".","Show [MASK] of [MASK] that have appeared in [MASK] with [MASK] ""The [MASK] of the [MASK]","['Show', '[MASK]', 'of', '[MASK]', 'that', 'have', 'appeared', 'in', '[MASK]', 'with', '[MASK]', '""The', '[MASK]', 'of', 'the', '[MASK]']","SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  ""The Phantom of the Opera""","['actor', 'musical', 'Name', 'Musical_ID', 'The Phantom of the Opera']","[('actor', 'T1'), ('musical', 'T2')]","['Name', 'Musical_ID', 'The Phantom of the Opera']","as,join,from,select,where",True,"['as', 'join']",0.6666666666666666,1.0
6751,6751,Show the ids of students whose advisors are professors.,Show the [MASK] of [MASK] whose [MASK] are [MASK],"['Show', 'the', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', 'are', '[MASK]']","SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  ""Professor""","['Student', 'Faculty', 'Professor', 'StuID', 'advisor', 'rank', 'FacID']","[('Student', 'T2'), ('Faculty', 'T1')]","['Professor', 'StuID', 'advisor', 'rank', 'FacID']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
5163,5163,"Which workshop groups have bookings with status code ""stop""? Give me the names.",Which [MASK] [MASK] have [MASK] with [MASK] [MASK] [MASK] Give me the [MASK],"['Which', '[MASK]', '[MASK]', 'have', '[MASK]', 'with', '[MASK]', '[MASK]', '[MASK]', 'Give', 'me', 'the', '[MASK]']","SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  ""stop""","['Drama_Workshop_Groups', 'Bookings', 'stop', 'Store_Name', 'Status_Code', 'Workshop_Group_ID']","[('Drama_Workshop_Groups', 'T2'), ('Bookings', 'T1')]","['stop', 'Store_Name', 'Status_Code', 'Workshop_Group_ID']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
5381,5381,Sort all the distinct product names in alphabetical order.,Sort all the distinct [MASK] [MASK] in alphabetical order.,"['Sort', 'all', 'the', 'distinct', '[MASK]', '[MASK]', 'in', 'alphabetical', 'order.']",SELECT DISTINCT product_name FROM product ORDER BY product_name,"['product', 'product_name']","[('product', '')]",['product_name'],"distinct,select,order,from",False,['order'],0.5,1.0
7316,7316,What are the ids for templates that are not used in any documents?,What are the [MASK] for [MASK] that are not used in any [MASK],"['What', 'are', 'the', '[MASK]', 'for', '[MASK]', 'that', 'are', 'not', 'used', 'in', 'any', '[MASK]']",SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,"['Templates', 'Documents', 'template_id']","[('Templates', ''), ('Documents', '')]",['template_id'],"select,except,from",False,"['as', 'except', 'join']",1.0,0.3333333333333333
6573,6573,What are the maximum price and score of wines produced by St. Helena appelation?,What are the maximum [MASK] and [MASK] of [MASK] produced by St. [MASK] [MASK],"['What', 'are', 'the', 'maximum', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'produced', 'by', 'St.', '[MASK]', '[MASK]']","SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  ""St. Helena""","['WINE', 'Price', 'St. Helena', 'Appelation', 'Score']","[('WINE', '')]","['Price', 'St. Helena', 'Appelation', 'Score']","select,where,from,max",False,"['max', 'group']",0.5,0.5
2940,2940,How many cities are in Australia?,How many [MASK] are in Australia?,"['How', 'many', '[MASK]', 'are', 'in', 'Australia?']",SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia',"['country', 'city', 'country_id', 'country']","[('country', 'T2'), ('city', 'T1')]","['country_id', 'country']","as,join,count,where,select,from",True,['count'],0.25,1.0
1875,1875,Which locations are shared by more than two wrestlers?,Which [MASK] are shared by more than two [MASK],"['Which', '[MASK]', 'are', 'shared', 'by', 'more', 'than', 'two', '[MASK]']",SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2,"['wrestler', 'LOCATION']","[('wrestler', '')]",['LOCATION'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
228,228,List the writers who have written more than one book.,List the [MASK] who have [MASK] more than one [MASK],"['List', 'the', '[MASK]', 'who', 'have', '[MASK]', 'more', 'than', 'one', '[MASK]']",SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*)  >  1,"['book', 'Writer']","[('book', '')]",['Writer'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
3051,3051,"What is the name, account type, and account balance corresponding to the customer with the highest credit score?",What is the [MASK] account [MASK] and account balance corresponding to the [MASK] with the highest [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'account', '[MASK]', 'and', 'account', 'balance', 'corresponding', 'to', 'the', '[MASK]', 'with', 'the', 'highest', '[MASK]', '[MASK]']","SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1","['customer', 'acc_bal', 'credit_score', 'cust_name', 'acc_type']","[('customer', '')]","['acc_bal', 'credit_score', 'cust_name', 'acc_type']","limit,order,select,desc,from",False,['order'],0.3333333333333333,1.0
1748,1748,"What are the names of gymnasts whose hometown is not ""Santo Domingo""?",What are the [MASK] of [MASK] whose [MASK] is not [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', 'is', 'not', '[MASK]', '[MASK]']","SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != ""Santo Domingo""","['people', 'gymnast', 'Hometown', 'Santo Domingo', 'Name', 'Gymnast_ID', 'People_ID']","[('people', 'T2'), ('gymnast', 'T1')]","['Hometown', 'Santo Domingo', 'Name', 'Gymnast_ID', 'People_ID']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
7173,7173,What are the name of the countries where there is not a single car maker?,What are the [MASK] of the [MASK] where there is not a single [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'where', 'there', 'is', 'not', 'a', 'single', '[MASK]', '[MASK]']",SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,"['CAR_MAKERS', 'countries', 'countries', 'CountryName', 'countryId', 'Country']","[('CAR_MAKERS', 'T2'), ('countries', ''), ('countries', 'T1')]","['CountryName', 'countryId', 'Country']","as,except,join,select,from",True,"['where', 'in', 'not']",0.0,0.0
4869,4869,Take the average of the school enrollment.,Take the average of the [MASK] [MASK],"['Take', 'the', 'average', 'of', 'the', '[MASK]', '[MASK]']",SELECT avg(Enrollment) FROM school,"['school', 'Enrollment']","[('school', '')]",['Enrollment'],"select,from,avg",False,['avg'],1.0,1.0
1644,1644,Show the names for all females from Canada having a wedding in year 2016.,Show the [MASK] for all [MASK] from Canada having a [MASK] in [MASK] 2016.,"['Show', 'the', '[MASK]', 'for', 'all', '[MASK]', 'from', 'Canada', 'having', 'a', '[MASK]', 'in', '[MASK]', '2016.']",SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id  =  T2.people_id WHERE T1.year  =  2016 AND T2.is_male  =  'F' AND T2.country  =  'Canada',"['wedding', 'people', 'country', 'is_male', 'female_id', 'name', 'people_id', 'year']","[('wedding', 'T1'), ('people', 'T2')]","['country', 'is_male', 'female_id', 'name', 'people_id', 'year']","as,join,from,and,select,where",True,"['where', 'as', 'join']",0.75,1.0
4155,4155,Which studios have an average gross of over 4500000?,Which [MASK] have an average [MASK] of over 4500000?,"['Which', '[MASK]', 'have', 'an', 'average', '[MASK]', 'of', 'over', '4500000?']",SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000,"['film', 'Gross_in_dollar', 'Studio']","[('film', '')]","['Gross_in_dollar', 'Studio']","group,having,avg,select,from",False,"['group', 'having', 'avg']",1.0,1.0
5360,5360,List the first and last names of all distinct staff members who are assigned to the problem whose id is 1.,List the [MASK] and [MASK] [MASK] of all distinct [MASK] members who are [MASK] [MASK] the [MASK] whose [MASK] is 1.,"['List', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'all', 'distinct', '[MASK]', 'members', 'who', 'are', '[MASK]', '[MASK]', 'the', '[MASK]', 'whose', '[MASK]', 'is', '1.']","SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1","['problem_log', 'staff', 'staff_id', 'assigned_to_staff_id', 'problem_id', 'staff_first_name', 'staff_last_name']","[('problem_log', 'T2'), ('staff', 'T1')]","['staff_id', 'assigned_to_staff_id', 'problem_id', 'staff_first_name', 'staff_last_name']","distinct,as,join,where,select,from",True,['distinct'],0.25,1.0
1609,1609,What is the order id and order details for the order more than two invoices.,What is the [MASK] [MASK] and [MASK] [MASK] for the [MASK] more than two [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', 'more', 'than', 'two', '[MASK]']","SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2","['Invoices', 'Orders', 'order_details', 'order_id']","[('Invoices', 'T1'), ('Orders', 'T2')]","['order_details', 'order_id']","as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'count', 'having']",1.0,1.0
6871,6871,Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines'.,Return the number of [MASK] with destination [MASK] in Italy operated by the [MASK] with [MASK] 'American [MASK],"['Return', 'the', 'number', 'of', '[MASK]', 'with', 'destination', '[MASK]', 'in', 'Italy', 'operated', 'by', 'the', '[MASK]', 'with', '[MASK]', ""'American"", '[MASK]']",SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines',"['routes', 'airports', 'airlines', 'country', 'name', 'alid', 'apid', 'dst_apid']","[('routes', 'T1'), ('airports', 'T2'), ('airlines', 'T3')]","['country', 'name', 'alid', 'apid', 'dst_apid']","as,join,count,and,where,select,from",True,"['as', 'join', 'count', 'where']",0.8,1.0
2366,2366,List the campuses in Los Angeles county.,List the [MASK] in Los [MASK] [MASK],"['List', 'the', '[MASK]', 'in', 'Los', '[MASK]', '[MASK]']","SELECT campus FROM campuses WHERE county  =  ""Los Angeles""","['campuses', 'Los Angeles', 'campus', 'county']","[('campuses', '')]","['Los Angeles', 'campus', 'county']","select,from,where",False,['where'],1.0,1.0
4725,4725,What is the average price for each type of product?,What is the average [MASK] for each [MASK] of [MASK],"['What', 'is', 'the', 'average', '[MASK]', 'for', 'each', '[MASK]', 'of', '[MASK]']","SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code","['products', 'product_price', 'product_type_code']","[('products', '')]","['product_price', 'product_type_code']","group,select,from,avg",False,"['group', 'avg']",1.0,1.0
5021,5021,What are the names of all tryout participants who are from the largest college?,What are the [MASK] of all [MASK] [MASK] who are from the largest [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]', '[MASK]', 'who', 'are', 'from', 'the', 'largest', '[MASK]']",SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1),"['player', 'college', 'tryout', 'enr', 'pID', 'pName', 'cName']","[('player', 'T2'), ('college', ''), ('tryout', 'T1')]","['enr', 'pID', 'pName', 'cName']","as,join,limit,from,order,select,desc,where",True,"['limit', 'order', 'desc']",0.5,1.0
7037,7037,List all singer names in concerts in year 2014.,List all [MASK] [MASK] [MASK] [MASK] [MASK] [MASK] 2014.,"['List', 'all', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '2014.']",SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,"['singer', 'concert', 'singer_in_concert', 'concert_id', 'singer_id', 'year', 'name']","[('singer', 'T2'), ('concert', 'T3'), ('singer_in_concert', 'T1')]","['concert_id', 'singer_id', 'year', 'name']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
1019,1019,List all information regarding the basketball match.,List all information regarding the [MASK] [MASK],"['List', 'all', 'information', 'regarding', 'the', '[MASK]', '[MASK]']",SELECT * FROM basketball_match,['basketball_match'],"[('basketball_match', '')]",[],"select,from",False,[],,
7862,7862,How many high schoolers are there?,How many [MASK] [MASK] are there?,"['How', 'many', '[MASK]', '[MASK]', 'are', 'there?']",SELECT count(*) FROM Highschooler,['Highschooler'],"[('Highschooler', '')]",[],"select,count,from",False,['count'],1.0,1.0
2082,2082,Count the number of Annual Meeting events that took place in the region of the United Kingdom.,Count the number of Annual [MASK] [MASK] that took place in the [MASK] of the [MASK] [MASK],"['Count', 'the', 'number', 'of', 'Annual', '[MASK]', '[MASK]', 'that', 'took', 'place', 'in', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]']","SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  ""United Kingdom"" AND t3.Event_Name  =  ""Annaual Meeting""","['party', 'region', 'party_events', 'region_id', 'Event_Name', 'party_id', 'Annaual Meeting', 'region_name', 'United Kingdom']","[('party', 't2'), ('region', 't1'), ('party_events', 't3')]","['region_id', 'Event_Name', 'party_id', 'Annaual Meeting', 'region_name', 'United Kingdom']","as,join,count,and,where,select,from",True,"['as', 'join', 'count', 'and', 'where']",1.0,1.0
3994,3994,How many appointments are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM appointment,['appointment'],"[('appointment', '')]",[],"select,count,from",False,['count'],1.0,1.0
1786,1786,Find the name and id of accounts whose checking balance is below the maximum checking balance.,Find the [MASK] and [MASK] of [MASK] whose [MASK] [MASK] is below the maximum [MASK] [MASK],"['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', '[MASK]', 'is', 'below', 'the', 'maximum', '[MASK]', '[MASK]']","SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)","['checking', 'checking', 'accounts', 'custid', 'balance', 'name']","[('checking', 'T2'), ('checking', ''), ('accounts', 'T1')]","['custid', 'balance', 'name']","as,join,from,select,where,max",True,"['limit', 'order', 'desc']",0.0,0.0
2123,2123,What is draft detail of the document with id 7?,What is [MASK] [MASK] of the [MASK] with [MASK] 7?,"['What', 'is', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'with', '[MASK]', '7?']",SELECT draft_details FROM Document_Drafts WHERE document_id = 7;,"['Document_Drafts', 'draft_details', 'document_id']","[('Document_Drafts', '')]","['draft_details', 'document_id']","select,from,where",False,['where'],1.0,1.0
2221,2221,What is the maximum fastest lap speed in race named 'Monaco Grand Prix' in 2008 ?,What is the maximum [MASK] lap [MASK] in [MASK] [MASK] [MASK] [MASK] [MASK] in 2008 ?,"['What', 'is', 'the', 'maximum', '[MASK]', 'lap', '[MASK]', 'in', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'in', '2008', '?']","SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = ""Monaco Grand Prix""","['results', 'races', 'name', 'Monaco Grand Prix', 'fastestlapspeed', 'raceid', 'year']","[('results', 'T2'), ('races', 'T1')]","['name', 'Monaco Grand Prix', 'fastestlapspeed', 'raceid', 'year']","as,join,and,where,select,from,max",True,"['as', 'join', 'and', 'where', 'avg']",0.8,0.8
7846,7846,Please show the name of the conductor that has conducted orchestras founded after 2008.,Please show the [MASK] [MASK] the [MASK] that has [MASK] [MASK] [MASK] after 2008.,"['Please', 'show', 'the', '[MASK]', '[MASK]', 'the', '[MASK]', 'that', 'has', '[MASK]', '[MASK]', '[MASK]', 'after', '2008.']",SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008,"['orchestra', 'conductor', 'Name', 'Year_of_Founded', 'Conductor_ID']","[('orchestra', 'T2'), ('conductor', 'T1')]","['Name', 'Year_of_Founded', 'Conductor_ID']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
1075,1075,Who are the players from Indonesia?,Who are the [MASK] from [MASK],"['Who', 'are', 'the', '[MASK]', 'from', '[MASK]']","SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  ""Indonesia""","['country', 'match_season', 'Country_name', 'Country_id', 'Country', 'Player', 'Indonesia']","[('country', 'T1'), ('match_season', 'T2')]","['Country_name', 'Country_id', 'Country', 'Player', 'Indonesia']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
2949,2949,What are the title and rental rate of the film with the highest rental rate?,What are the [MASK] and [MASK] [MASK] of the [MASK] with the highest [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'highest', '[MASK]', '[MASK]']","SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1","['film', 'rental_rate', 'title']","[('film', '')]","['rental_rate', 'title']","limit,order,select,desc,from",False,"['as', 'join', 'limit', 'order', 'desc']",1.0,0.6
3860,3860,"Among all the claims, which claims have a claimed amount larger than the average? List the date the claim was made and the date it was settled.",Among all the [MASK] which [MASK] have a [MASK] [MASK] larger than the average? List the [MASK] the [MASK] was [MASK] and the [MASK] it was [MASK],"['Among', 'all', 'the', '[MASK]', 'which', '[MASK]', 'have', 'a', '[MASK]', '[MASK]', 'larger', 'than', 'the', 'average?', 'List', 'the', '[MASK]', 'the', '[MASK]', 'was', '[MASK]', 'and', 'the', '[MASK]', 'it', 'was', '[MASK]']","SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )","['Claims', 'Date_Claim_Made', 'Date_Claim_Settled', 'Amount_Claimed']","[('Claims', '')]","['Date_Claim_Made', 'Date_Claim_Settled', 'Amount_Claimed']","select,avg,from,where",False,['where'],0.5,1.0
7785,7785,What are the names of cities in Europe for which English is not the official language?,What are the [MASK] of [MASK] in Europe for which English is not the [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'in', 'Europe', 'for', 'which', 'English', 'is', 'not', 'the', '[MASK]', '[MASK]']",SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),"['countrylanguage', 'country', 'country', 'city', 'Language', 'Name', 'IsOfficial', 'Continent', 'Code', 'CountryCode']","[('countrylanguage', 'T4'), ('country', 'T1'), ('country', 'T3'), ('city', 'T2')]","['Language', 'Name', 'IsOfficial', 'Continent', 'Code', 'CountryCode']","distinct,as,not,in,join,and,where,select,from",True,['where'],0.14285714285714285,1.0
3903,3903,Find the name and position of the head of the department with the least employees.,Find the [MASK] and [MASK] of the [MASK] of the [MASK] with the least [MASK],"['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'least', '[MASK]']","SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;","['department', 'physician', 'EmployeeID', 'name', 'departmentID', 'position', 'head']","[('department', 'T1'), ('physician', 'T2')]","['EmployeeID', 'name', 'departmentID', 'position', 'head']","as,group,join,limit,count,order,select,from",True,"['as', 'join', 'limit', 'order']",0.6666666666666666,1.0
1849,1849,Return the name of the wrestler who had the lowest number of days held.,Return the [MASK] of the [MASK] who had the lowest number of [MASK] [MASK],"['Return', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'had', 'the', 'lowest', 'number', 'of', '[MASK]', '[MASK]']",SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1,"['wrestler', 'Name', 'Days_held']","[('wrestler', '')]","['Name', 'Days_held']","asc,limit,order,select,from",False,"['limit', 'order']",0.6666666666666666,1.0
7931,7931,"Return the owner id, first name and last name of the owner who has the most dogs.","Return the [MASK] id, [MASK] [MASK] and [MASK] [MASK] of the [MASK] who has the most dogs.","['Return', 'the', '[MASK]', 'id,', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'who', 'has', 'the', 'most', 'dogs.']","SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","['Owners', 'Dogs', 'owner_id', 'first_name', 'last_name']","[('Owners', 'T2'), ('Dogs', 'T1')]","['owner_id', 'first_name', 'last_name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
7923,7923,"Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.","Find the id, [MASK] [MASK] and [MASK] phone of the [MASK] who live in the [MASK] of Indiana or have performed more than two [MASK]","['Find', 'the', 'id,', '[MASK]', '[MASK]', 'and', '[MASK]', 'phone', 'of', 'the', '[MASK]', 'who', 'live', 'in', 'the', '[MASK]', 'of', 'Indiana', 'or', 'have', 'performed', 'more', 'than', 'two', '[MASK]']","SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","['Treatments', 'Professionals', 'Professionals', 'cell_number', 'professional_id', 'state', 'last_name']","[('Treatments', 'T2'), ('Professionals', ''), ('Professionals', 'T1')]","['cell_number', 'professional_id', 'state', 'last_name']","as,union,group,join,count,having,where,select,from",True,"['as', 'group', 'join', 'count', 'having', 'where']",0.8571428571428571,1.0
2795,2795,Which people severed as comptroller most frequently? Give me the name of the person and the frequency count.,Which people severed as [MASK] most frequently? Give me the name of the person and the frequency count.,"['Which', 'people', 'severed', 'as', '[MASK]', 'most', 'frequently?', 'Give', 'me', 'the', 'name', 'of', 'the', 'person', 'and', 'the', 'frequency', 'count.']","SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1","['party', 'Comptroller']","[('party', '')]",['Comptroller'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
5340,5340,"Select the average price of each manufacturer's products, showing only the manufacturer's code.",Select the average [MASK] of each [MASK] [MASK] showing only the [MASK] code.,"['Select', 'the', 'average', '[MASK]', 'of', 'each', '[MASK]', '[MASK]', 'showing', 'only', 'the', '[MASK]', 'code.']","SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer","['Products', 'Price', 'Manufacturer']","[('Products', '')]","['Price', 'Manufacturer']","group,select,from,avg",False,"['as', 'join', 'avg', 'where']",0.5,0.25
7866,7866,Show all the grades of the high schoolers.,Show all the [MASK] of the [MASK] [MASK],"['Show', 'all', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]']",SELECT grade FROM Highschooler,"['Highschooler', 'grade']","[('Highschooler', '')]",['grade'],"select,from",False,[],,
4604,4604,What are the names of festivals held in year 2007?,What are the [MASK] of [MASK] held in [MASK] 2007?,"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'held', 'in', '[MASK]', '2007?']",SELECT Festival_Name FROM festival_detail WHERE YEAR  =  2007,"['festival_detail', 'Festival_Name', 'YEAR']","[('festival_detail', '')]","['Festival_Name', 'YEAR']","select,from,where",False,"['where', 'and', 'between']",1.0,0.3333333333333333
4806,4806,What are the total number of domestic passengers at all London airports?,What are the total number of [MASK] [MASK] at all [MASK] [MASK],"['What', 'are', 'the', 'total', 'number', 'of', '[MASK]', '[MASK]', 'at', 'all', '[MASK]', '[MASK]']","SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE ""%London%""","['airport', 'Airport_Name', 'Domestic_Passengers', '%London%']","[('airport', '')]","['Airport_Name', 'Domestic_Passengers', '%London%']","like,sum,where,select,from",False,['sum'],0.3333333333333333,1.0
7727,7727,Give the total surface area covered by countries in Asia or Europe.,Give the total [MASK] [MASK] covered by [MASK] in [MASK] or [MASK],"['Give', 'the', 'total', '[MASK]', '[MASK]', 'covered', 'by', '[MASK]', 'in', '[MASK]', 'or', '[MASK]']","SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""","['country', 'Asia', 'Continent', 'Europe', 'SurfaceArea']","[('country', '')]","['Asia', 'Continent', 'Europe', 'SurfaceArea']","sum,where,or,select,from",False,"['sum', 'where']",0.6666666666666666,1.0
607,607,How many orders does Lucas Mancini has?,How many orders does [MASK] [MASK] has?,"['How', 'many', 'orders', 'does', '[MASK]', '[MASK]', 'has?']","SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = ""Lucas"" AND T1.last_name = ""Mancini"";","['customers', 'invoices', 'Mancini', 'last_name', 'Lucas', 'id', 'customer_id', 'first_name']","[('customers', 'T1'), ('invoices', 'T2')]","['Mancini', 'last_name', 'Lucas', 'id', 'customer_id', 'first_name']","as,join,count,and,where,select,from",True,"['as', 'join', 'count', 'where']",0.8,1.0
4483,4483,What are the names of all of Alice's friends of friends?,What are the [MASK] of all of Alice's [MASK] of [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', 'of', ""Alice's"", '[MASK]', 'of', '[MASK]']",SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice',"['PersonFriend', 'PersonFriend', 'Person', 'PersonFriend', 'friend', 'name']","[('PersonFriend', 'T1'), ('PersonFriend', 'T4'), ('Person', 'T2'), ('PersonFriend', 'T3')]","['friend', 'name']","distinct,as,join,and,where,select,from",True,[],,
7261,7261,Sort employee names by their age in ascending order.,Sort [MASK] [MASK] by their [MASK] in ascending order.,"['Sort', '[MASK]', '[MASK]', 'by', 'their', '[MASK]', 'in', 'ascending', 'order.']",SELECT name FROM employee ORDER BY age,"['employee', 'age', 'name']","[('employee', '')]","['age', 'name']","select,order,from",False,"['asc', 'order']",1.0,0.5
867,867,What is the average duration in milliseconds of tracks that belong to Latin or Pop genre?,What is the average duration in [MASK] of [MASK] that belong to [MASK] or Pop [MASK],"['What', 'is', 'the', 'average', 'duration', 'in', '[MASK]', 'of', '[MASK]', 'that', 'belong', 'to', '[MASK]', 'or', 'Pop', '[MASK]']","SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Latin"" OR T1.Name  =  ""Pop""","['GENRE', 'TRACK', 'Name', 'GenreId', 'Latin', 'Milliseconds', 'Pop']","[('GENRE', 'T1'), ('TRACK', 'T2')]","['Name', 'GenreId', 'Latin', 'Milliseconds', 'Pop']","where,as,join,avg,or,select,from",True,"['avg', 'where']",0.4,1.0
2799,2799,"Which parties have delegates in both the ""Appropriations"" committee and the ""Economic Matters"" committee?",Which [MASK] have delegates in both the [MASK] [MASK] and the [MASK] [MASK] [MASK],"['Which', '[MASK]', 'have', 'delegates', 'in', 'both', 'the', '[MASK]', '[MASK]', 'and', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  ""Appropriations"" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  ""Economic Matters""","['party', 'election', 'Economic Matters', 'Committee', 'Party', 'Party_ID', 'Appropriations']","[('party', 'T2'), ('election', 'T1')]","['Economic Matters', 'Committee', 'Party', 'Party_ID', 'Appropriations']","intersect,as,join,from,select,where",True,"['as', 'join', 'where']",0.75,1.0
5007,5007,What are the names of all students who successfully tried out for the position of striker?,What are the [MASK] of all [MASK] who successfully tried out for the position of striker?,"['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]', 'who', 'successfully', 'tried', 'out', 'for', 'the', 'position', 'of', 'striker?']",SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker',"['tryout', 'player', 'pPos', 'pID', 'pName', 'decision']","[('tryout', 'T2'), ('player', 'T1')]","['pPos', 'pID', 'pName', 'decision']","as,join,from,and,select,where",True,"['as', 'join', 'where']",0.75,1.0
6017,6017,What is the first name and last name of the student who have most number of sports?,What is the first [MASK] and last [MASK] of the [MASK] who have most number of [MASK],"['What', 'is', 'the', 'first', '[MASK]', 'and', 'last', '[MASK]', 'of', 'the', '[MASK]', 'who', 'have', 'most', 'number', 'of', '[MASK]']","SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1","['Sportsinfo', 'Student', 'StuID', 'Fname', 'Lname']","[('Sportsinfo', 'T1'), ('Student', 'T2')]","['StuID', 'Fname', 'Lname']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
4244,4244,Show the ids of all employees who have destroyed a document.,Show the [MASK] of all [MASK] who have [MASK] a [MASK],"['Show', 'the', '[MASK]', 'of', 'all', '[MASK]', 'who', 'have', '[MASK]', 'a', '[MASK]']",SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed,"['Documents_to_be_destroyed', 'Destroyed_by_Employee_ID']","[('Documents_to_be_destroyed', '')]",['Destroyed_by_Employee_ID'],"distinct,select,from",False,[],,
4849,4849,"What is each customer's move in date, and the corresponding customer id and details?",What is each [MASK] [MASK] [MASK] [MASK] and the corresponding [MASK] [MASK] and [MASK],"['What', 'is', 'each', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', 'the', 'corresponding', '[MASK]', '[MASK]', 'and', '[MASK]']","SELECT T2.date_moved_in ,  T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id","['Customers', 'Customer_Events', 'customer_id', 'date_moved_in', 'customer_details']","[('Customers', 'T1'), ('Customer_Events', 'T2')]","['customer_id', 'date_moved_in', 'customer_details']","select,join,from,as",True,[],,
3554,3554,What are the names of the artists that are from the UK and sang songs in English?,What are the [MASK] of the [MASK] that are from the UK and sang [MASK] in [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'are', 'from', 'the', 'UK', 'and', 'sang', '[MASK]', 'in', '[MASK]']","SELECT artist_name FROM artist WHERE country  =  ""UK"" INTERSECT SELECT artist_name FROM song WHERE languages  =  ""english""","['artist', 'song', 'english', 'country', 'languages', 'UK', 'artist_name']","[('artist', ''), ('song', '')]","['english', 'country', 'languages', 'UK', 'artist_name']","intersect,select,from,where",False,['where'],0.5,1.0
6546,6546,"What is the maximum price of wines from the appelation in the Central Coast area, which was produced before 2005?",What is the maximum [MASK] of [MASK] from the [MASK] in the [MASK] [MASK] [MASK] which was produced before 2005?,"['What', 'is', 'the', 'maximum', '[MASK]', 'of', '[MASK]', 'from', 'the', '[MASK]', 'in', 'the', '[MASK]', '[MASK]', '[MASK]', 'which', 'was', 'produced', 'before', '2005?']","SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  ""Central Coast"" AND T2.year  <  2005","['APPELLATIONS', 'WINE', 'Appelation', 'Area', 'Central Coast', 'Price', 'year']","[('APPELLATIONS', 'T1'), ('WINE', 'T2')]","['Appelation', 'Area', 'Central Coast', 'Price', 'year']","as,join,and,where,select,from,max",True,"['where', 'max', 'as', 'join']",0.8,1.0
1273,1273,Which apartments have unit status availability of both 0 and 1? Return their apartment numbers.,Which [MASK] have [MASK] [MASK] [MASK] of both 0 and 1? Return their [MASK] [MASK],"['Which', '[MASK]', 'have', '[MASK]', '[MASK]', '[MASK]', 'of', 'both', '0', 'and', '1?', 'Return', 'their', '[MASK]', '[MASK]']",SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1,"['View_Unit_Status', 'Apartments', 'apt_number', 'apt_id', 'available_yn']","[('View_Unit_Status', 'T2'), ('Apartments', 'T1')]","['apt_number', 'apt_id', 'available_yn']","intersect,as,join,from,select,where",True,"['as', 'join', 'where']",0.75,1.0
4436,4436,Find the names of all person sorted in the descending order using age.,Find the [MASK] of all [MASK] sorted in the descending order using age.,"['Find', 'the', '[MASK]', 'of', 'all', '[MASK]', 'sorted', 'in', 'the', 'descending', 'order', 'using', 'age.']",SELECT name FROM Person ORDER BY age DESC,"['Person', 'age', 'name']","[('Person', '')]","['age', 'name']","select,order,desc,from",False,"['order', 'desc']",1.0,1.0
6303,6303,What are the venues of all the matches? Sort them in the descending order of match date.,What are the [MASK] of all the [MASK] Sort them in the descending order of [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', 'Sort', 'them', 'in', 'the', 'descending', 'order', 'of', '[MASK]', '[MASK]']",SELECT venue FROM MATCH ORDER BY date DESC,"['MATCH', 'venue', 'date']","[('MATCH', '')]","['venue', 'date']","select,order,desc,from",False,"['as', 'join', 'order', 'desc']",1.0,0.5
7131,7131,What is the maximum horsepower and the make of the car models with 3 cylinders?,What is the maximum [MASK] and the [MASK] of the [MASK] models with 3 [MASK],"['What', 'is', 'the', 'maximum', '[MASK]', 'and', 'the', '[MASK]', 'of', 'the', '[MASK]', 'models', 'with', '3', '[MASK]']","SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","['CAR_NAMES', 'CARS_DATA', 'cylinders', 'Id', 'Make', 'horsepower', 'MakeId']","[('CAR_NAMES', 'T1'), ('CARS_DATA', 'T2')]","['cylinders', 'Id', 'Make', 'horsepower', 'MakeId']","as,join,limit,from,order,select,desc,where",True,"['as', 'join', 'group']",0.3333333333333333,0.6666666666666666
6344,6344,What is the name of organization that has the greatest number of contact individuals?,What is the [MASK] of [MASK] that has the greatest number of [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'of', '[MASK]', 'that', 'has', 'the', 'greatest', 'number', 'of', '[MASK]', '[MASK]']",SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1,"['organization_contact_individuals', 'organizations', 'organization_id', 'organization_name']","[('organization_contact_individuals', 't2'), ('organizations', 't1')]","['organization_id', 'organization_name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
1115,1115,What are the names of climbers who are not from the country of Switzerland?,What are the [MASK] of [MASK] who are not from the [MASK] of [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'who', 'are', 'not', 'from', 'the', '[MASK]', 'of', '[MASK]']","SELECT Name FROM climber WHERE Country != ""Switzerland""","['climber', 'Name', 'Switzerland', 'Country']","[('climber', '')]","['Name', 'Switzerland', 'Country']","select,from,where",False,['where'],1.0,1.0
6876,6876,How many routes go from the United States to Canada?,How many [MASK] go from the United States to Canada?,"['How', 'many', '[MASK]', 'go', 'from', 'the', 'United', 'States', 'to', 'Canada?']",SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States'),"['routes', 'airports', 'dst_apid', 'country', 'apid', 'src_apid']","[('routes', ''), ('airports', '')]","['dst_apid', 'country', 'apid', 'src_apid']","in,count,and,where,select,from",False,"['count', 'where']",0.5,1.0
540,540,What are the names of the top 8 countries by total invoice size and what are those sizes?,What are the names of the top 8 [MASK] by [MASK] [MASK] size and what are those sizes?,"['What', 'are', 'the', 'names', 'of', 'the', 'top', '8', '[MASK]', 'by', '[MASK]', '[MASK]', 'size', 'and', 'what', 'are', 'those', 'sizes?']","SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;","['invoices', 'billing_country', 'total']","[('invoices', '')]","['billing_country', 'total']","group,limit,sum,order,select,desc,from",False,"['group', 'limit', 'order', 'desc']",0.8,1.0
2739,2739,On average how large is the population of the counties?,On average how large is the [MASK] of the [MASK],"['On', 'average', 'how', 'large', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]']",SELECT avg(Population) FROM county,"['county', 'Population']","[('county', '')]",['Population'],"select,from,avg",False,['avg'],1.0,1.0
3656,3656,Find the average height of the players who belong to the college called 'Yale University'.,Find the average [MASK] of the [MASK] who belong to the [MASK] called 'Yale University'.,"['Find', 'the', 'average', '[MASK]', 'of', 'the', '[MASK]', 'who', 'belong', 'to', 'the', '[MASK]', 'called', ""'Yale"", ""University'.""]",SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';,"['college', 'player_college', 'player', 'college_id', 'height', 'name_full', 'player_id']","[('college', 'T3'), ('player_college', 'T2'), ('player', 'T1')]","['college_id', 'height', 'name_full', 'player_id']","where,as,join,avg,select,from",True,"['in', 'avg', 'where']",0.5,0.6666666666666666
1466,1466,Find the names of all instructors in Comp. Sci. department with salary > 80000.,Find the [MASK] of all [MASK] in Comp. Sci. [MASK] with [MASK] > 80000.,"['Find', 'the', '[MASK]', 'of', 'all', '[MASK]', 'in', 'Comp.', 'Sci.', '[MASK]', 'with', '[MASK]', '>', '80000.']",SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000,"['instructor', 'salary', 'dept_name', 'name']","[('instructor', '')]","['salary', 'dept_name', 'name']","select,and,from,where",False,"['group', 'having']",0.0,0.0
2657,2657,"What are the distinct cross reference source system codes which are related to the master customer details 'Gottlieb, Becker and Wyman'?","What are the distinct [MASK] [MASK] [MASK] [MASK] [MASK] which are related to the [MASK] [MASK] [MASK] 'Gottlieb, Becker and Wyman'?","['What', 'are', 'the', 'distinct', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'which', 'are', 'related', 'to', 'the', '[MASK]', '[MASK]', '[MASK]', ""'Gottlieb,"", 'Becker', 'and', ""Wyman'?""]","SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb ,  Becker and Wyman'","['cmi_cross_references', 'customer_master_index', 'source_system_code', 'cmi_details', 'master_customer_id']","[('cmi_cross_references', 'T2'), ('customer_master_index', 'T1')]","['source_system_code', 'cmi_details', 'master_customer_id']","distinct,as,join,and,where,select,from",True,['distinct'],0.2,1.0
7998,7998,List the first name of all the professionals along with the description of the treatment they have done.,List the [MASK] [MASK] of all the [MASK] along with the [MASK] of the [MASK] they have done.,"['List', 'the', '[MASK]', '[MASK]', 'of', 'all', 'the', '[MASK]', 'along', 'with', 'the', '[MASK]', 'of', 'the', '[MASK]', 'they', 'have', 'done.']","SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","['Treatments', 'Treatment_types', 'professionals', 'treatment_type_code', 'professional_id', 'first_name', 'treatment_type_description']","[('Treatments', 'T2'), ('Treatment_types', 'T3'), ('professionals', 'T1')]","['treatment_type_code', 'professional_id', 'first_name', 'treatment_type_description']","distinct,as,join,select,from",True,[],,
5051,5051,Count the number of devices.,Count the number of [MASK],"['Count', 'the', 'number', 'of', '[MASK]']",SELECT count(*) FROM device,['device'],"[('device', '')]",[],"select,count,from",False,['count'],1.0,1.0
280,280,Find the number of users who posted some tweets.,Find the number of users who posted some [MASK],"['Find', 'the', 'number', 'of', 'users', 'who', 'posted', 'some', '[MASK]']",SELECT count(DISTINCT UID) FROM tweets,"['tweets', 'UID']","[('tweets', '')]",['UID'],"distinct,select,count,from",False,['count'],0.5,1.0
2458,2458,Find the titles of all movies that have no ratings.,Find the [MASK] of all [MASK] that have no [MASK],"['Find', 'the', '[MASK]', 'of', 'all', '[MASK]', 'that', 'have', 'no', '[MASK]']",SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating),"['Movie', 'Rating', 'mID', 'title']","[('Movie', ''), ('Rating', '')]","['mID', 'title']","where,in,not,select,from",False,['except'],0.0,0.0
510,510,How many students who are female are allergic to milk or eggs?,How many [MASK] who are female are [MASK] to [MASK] or eggs?,"['How', 'many', '[MASK]', 'who', 'are', 'female', 'are', '[MASK]', 'to', '[MASK]', 'or', 'eggs?']","SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.sex  =  ""F"" AND T1.allergy  =  ""Milk"" OR T1.allergy  =  ""Eggs""","['has_allergy', 'Student', 'Milk', 'StuID', 'Eggs', 'F', 'allergy', 'sex']","[('has_allergy', 'T1'), ('Student', 'T2')]","['Milk', 'StuID', 'Eggs', 'F', 'allergy', 'sex']","as,join,count,and,where,or,select,from",True,"['count', 'where']",0.3333333333333333,1.0
4065,4065,What are the last names of the teachers who teach the student called GELL TAMI?,What are the [MASK] [MASK] of the [MASK] who [MASK] the [MASK] called [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'who', '[MASK]', 'the', '[MASK]', 'called', '[MASK]', '[MASK]']","SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""GELL"" AND T1.lastname  =  ""TAMI""","['list', 'teachers', 'TAMI', 'firstname', 'classroom', 'lastname', 'GELL']","[('list', 'T1'), ('teachers', 'T2')]","['TAMI', 'firstname', 'classroom', 'lastname', 'GELL']","as,join,from,and,select,where",True,"['as', 'join', 'where']",0.75,1.0
6745,6745,Which rank has the smallest number of faculty members?,Which [MASK] has the smallest number of [MASK] members?,"['Which', '[MASK]', 'has', 'the', 'smallest', 'number', 'of', '[MASK]', 'members?']",SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1,"['Faculty', 'rank']","[('Faculty', '')]",['rank'],"asc,group,limit,count,order,select,from",False,"['as', 'group', 'join', 'limit', 'count', 'order']",0.8,0.6666666666666666
8005,8005,What are the birth years and citizenships of the singers?,What are the [MASK] [MASK] and [MASK] of the [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]']","SELECT Birth_Year ,  Citizenship FROM singer","['singer', 'Citizenship', 'Birth_Year']","[('singer', '')]","['Citizenship', 'Birth_Year']","select,from",False,[],,
5688,5688,Find the average and total capacity of dorms for the students with gender X.,Find the average and total [MASK] of [MASK] for the [MASK] with [MASK] X.,"['Find', 'the', 'average', 'and', 'total', '[MASK]', 'of', '[MASK]', 'for', 'the', '[MASK]', 'with', '[MASK]', 'X.']","SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'","['dorm', 'gender', 'student_capacity']","[('dorm', '')]","['gender', 'student_capacity']","sum,from,avg,select,where",False,['avg'],0.3333333333333333,1.0
2605,2605,What are the first and last names of people who payed more than the rooms' base prices?,What are the [MASK] and [MASK] [MASK] of people who payed more than the [MASK] [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'people', 'who', 'payed', 'more', 'than', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0","['Reservations', 'Rooms', 'Rate', 'RoomId', 'firstname', 'lastname', 'basePrice', 'Room']","[('Reservations', 'T1'), ('Rooms', 'T2')]","['Rate', 'RoomId', 'firstname', 'lastname', 'basePrice', 'Room']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
3766,3766,Find the name of the program that is broadcast most frequently.,Find the [MASK] of the [MASK] that is [MASK] most frequently.,"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'is', '[MASK]', 'most', 'frequently.']",SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1,"['program', 'broadcast', 'program_id', 'name']","[('program', 't1'), ('broadcast', 't2')]","['program_id', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc']",0.7142857142857143,1.0
1514,1514,Which types of policy are chosen by more than 2 customers? Give me the policy type codes.,Which [MASK] of [MASK] are chosen by more than 2 customers? Give me the [MASK] [MASK] [MASK],"['Which', '[MASK]', 'of', '[MASK]', 'are', 'chosen', 'by', 'more', 'than', '2', 'customers?', 'Give', 'me', 'the', '[MASK]', '[MASK]', '[MASK]']",SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2,"['policies', 'policy_type_code']","[('policies', '')]",['policy_type_code'],"group,count,having,select,from",False,"['as', 'join', 'group', 'count', 'having']",1.0,0.6
687,687,Show distinct first and last names for all customers with an account.,Show distinct [MASK] and [MASK] [MASK] for all [MASK] with an [MASK],"['Show', 'distinct', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'all', '[MASK]', 'with', 'an', '[MASK]']","SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id","['Customers', 'Accounts', 'customer_first_name', 'customer_last_name', 'customer_id']","[('Customers', 'T1'), ('Accounts', 'T2')]","['customer_first_name', 'customer_last_name', 'customer_id']","distinct,as,join,select,from",True,['distinct'],0.3333333333333333,1.0
335,335,Find the name and capacity of products with price greater than 700 (in USD).,Find the [MASK] and [MASK] of products with [MASK] greater than 700 (in USD).,"['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', 'products', 'with', '[MASK]', 'greater', 'than', '700', '(in', 'USD).']","SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700","['Catalog_Contents', 'catalog_entry_name', 'price_in_dollars', 'capacity']","[('Catalog_Contents', '')]","['catalog_entry_name', 'price_in_dollars', 'capacity']","select,from,where",False,[],,
4738,4738,"What are the ids of products from the supplier with id 2, which are more expensive than the average price across all products?","What are the [MASK] of [MASK] from the [MASK] with [MASK] 2, which are more expensive than the average [MASK] across all [MASK]","['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'from', 'the', '[MASK]', 'with', '[MASK]', '2,', 'which', 'are', 'more', 'expensive', 'than', 'the', 'average', '[MASK]', 'across', 'all', '[MASK]']",SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products),"['product_suppliers', 'products', 'products', 'product_id', 'product_price', 'supplier_id']","[('product_suppliers', 'T1'), ('products', ''), ('products', 'T2')]","['product_id', 'product_price', 'supplier_id']","as,join,from,and,avg,select,where",True,"['avg', 'where']",0.4,1.0
2362,2362,What campus had more than 400 total enrollment but more than 200 full time enrollment in year 1956?,What [MASK] had more than 400 [MASK] [MASK] but more than 200 full time [MASK] in [MASK] 1956?,"['What', '[MASK]', 'had', 'more', 'than', '400', '[MASK]', '[MASK]', 'but', 'more', 'than', '200', 'full', 'time', '[MASK]', 'in', '[MASK]', '1956?']",SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200,"['campuses', 'enrollments', 'totalenrollment_ay', 'FTE_AY', 'campus', 'id', 'year']","[('campuses', 't1'), ('enrollments', 't2')]","['totalenrollment_ay', 'FTE_AY', 'campus', 'id', 'year']","as,join,from,and,select,where",True,"['and', 'where', 'count']",0.5,0.6666666666666666
2027,2027,Show the manager name for gas stations belonging to the ExxonMobil company.,Show the [MASK] [MASK] for [MASK] [MASK] belonging to the ExxonMobil [MASK],"['Show', 'the', '[MASK]', '[MASK]', 'for', '[MASK]', '[MASK]', 'belonging', 'to', 'the', 'ExxonMobil', '[MASK]']",SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil',"['gas_station', 'company', 'station_company', 'manager_name', 'company', 'company_id', 'station_id']","[('gas_station', 'T3'), ('company', 'T2'), ('station_company', 'T1')]","['manager_name', 'company', 'company_id', 'station_id']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
782,782,What is the name of the track that has had the greatest number of races?,What is the [MASK] of the [MASK] that has had the greatest number of [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'has', 'had', 'the', 'greatest', 'number', 'of', '[MASK]']",SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1,"['track', 'race', 'track_id', 'name']","[('track', 'T2'), ('race', 'T1')]","['track_id', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
7557,7557,"Who is the earliest graduate of the school? List the first name, middle name and last name.",Who is the earliest graduate of the school? List the [MASK] [MASK] [MASK] [MASK] and [MASK] [MASK],"['Who', 'is', 'the', 'earliest', 'graduate', 'of', 'the', 'school?', 'List', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]']","SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","['Students', 'date_left', 'last_name', 'first_name', 'middle_name']","[('Students', '')]","['date_left', 'last_name', 'first_name', 'middle_name']","asc,limit,order,select,from",False,"['limit', 'order']",0.6666666666666666,1.0
7934,7934,What is the name of the breed with the most dogs?,What is the [MASK] of the [MASK] with the most dogs?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'most', 'dogs?']",SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,"['Dogs', 'Breeds', 'breed_name', 'breed_code']","[('Dogs', 'T2'), ('Breeds', 'T1')]","['breed_name', 'breed_code']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
4717,4717,What are the staff ids and genders of all staffs whose job title is Department Manager?,What are the [MASK] [MASK] and [MASK] of all [MASK] whose [MASK] [MASK] is [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'all', '[MASK]', 'whose', '[MASK]', '[MASK]', 'is', '[MASK]', '[MASK]']","SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  ""Department Manager""","['staff', 'staff_department_assignments', 'staff_gender', 'staff_id', 'job_title_code', 'Department Manager']","[('staff', 'T1'), ('staff_department_assignments', 'T2')]","['staff_gender', 'staff_id', 'job_title_code', 'Department Manager']","as,join,from,select,where",True,[],,
3578,3578,"What are the names of all genres in alphabetical order, combined with its ratings?","What are the [MASK] of all [MASK] in alphabetical order, combined with its [MASK]","['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]', 'in', 'alphabetical', 'order,', 'combined', 'with', 'its', '[MASK]']","SELECT g_name ,  rating FROM genre ORDER BY g_name","['genre', 'g_name', 'rating']","[('genre', '')]","['g_name', 'rating']","select,order,from",False,['order'],1.0,1.0
7418,7418,find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.,find the [MASK] [MASK] [MASK] which have more [MASK] than the minimum [MASK] number [MASK] all [MASK] [MASK] after 2010.,"['find', 'the', '[MASK]', '[MASK]', '[MASK]', 'which', 'have', 'more', '[MASK]', 'than', 'the', 'minimum', '[MASK]', 'number', '[MASK]', 'all', '[MASK]', '[MASK]', 'after', '2010.']",SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010),"['museum', 'num_of_staff', 'open_year', 'name']","[('museum', '')]","['num_of_staff', 'open_year', 'name']","select,min,from,where",False,['where'],0.5,1.0
1157,1157,What are the names of body builders whose total score is higher than 300?,What are the [MASK] of [MASK] [MASK] whose [MASK] score is higher than 300?,"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', 'whose', '[MASK]', 'score', 'is', 'higher', 'than', '300?']",SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  >  300,"['people', 'body_builder', 'Name', 'Total', 'People_ID']","[('people', 'T2'), ('body_builder', 'T1')]","['Name', 'Total', 'People_ID']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
6236,6236,What are the average and minimum age of captains in different class?,What are the average and minimum [MASK] of [MASK] in different [MASK],"['What', 'are', 'the', 'average', 'and', 'minimum', '[MASK]', 'of', '[MASK]', 'in', 'different', '[MASK]']","SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS","['captain', 'CLASS', 'age']","[('captain', '')]","['CLASS', 'age']","min,group,avg,select,from",False,"['min', 'group', 'avg', 'max']",1.0,0.75
834,834,"What are the names and ids of the different albums, and how many tracks are on each?",What are the names and [MASK] of the different [MASK] and how many [MASK] are on each?,"['What', 'are', 'the', 'names', 'and', '[MASK]', 'of', 'the', 'different', '[MASK]', 'and', 'how', 'many', '[MASK]', 'are', 'on', 'each?']","SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID","['ALBUM', 'TRACK', 'AlbumID', 'AlbumId', 'Title']","[('ALBUM', 'T1'), ('TRACK', 'T2')]","['AlbumID', 'AlbumId', 'Title']","as,group,join,count,select,from",True,"['as', 'group', 'join', 'count']",1.0,1.0
6736,6736,How many faculty members does each building have? List the result with the name of the building.,How many [MASK] members does each [MASK] have? List the result with the name of the [MASK],"['How', 'many', '[MASK]', 'members', 'does', 'each', '[MASK]', 'have?', 'List', 'the', 'result', 'with', 'the', 'name', 'of', 'the', '[MASK]']","SELECT building ,  count(*) FROM Faculty GROUP BY building","['Faculty', 'building']","[('Faculty', '')]",['building'],"select,count,from,group",False,"['as', 'group', 'join', 'count']",1.0,0.5
7982,7982,How many professionals did not operate any treatment on dogs?,How many [MASK] did not operate any [MASK] on dogs?,"['How', 'many', '[MASK]', 'did', 'not', 'operate', 'any', '[MASK]', 'on', 'dogs?']",SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),"['Professionals', 'Treatments', 'professional_id']","[('Professionals', ''), ('Treatments', '')]",['professional_id'],"where,in,count,not,select,from",False,"['where', 'in', 'count', 'not']",1.0,1.0
2043,2043,How many parties do we have?,How many [MASK] do we have?,"['How', 'many', '[MASK]', 'do', 'we', 'have?']",SELECT count(DISTINCT party_name) FROM party,"['party', 'party_name']","[('party', '')]",['party_name'],"distinct,select,count,from",False,['count'],0.5,1.0
5546,5546,"What is the color code and description of the product named ""chervil""?",What is the [MASK] [MASK] and [MASK] of the [MASK] [MASK] [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  ""chervil""","['ref_colors', 'products', 'color_code', 'product_name', 'color_description', 'chervil']","[('ref_colors', 't2'), ('products', 't1')]","['color_code', 'product_name', 'color_description', 'chervil']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
4490,4490,Which countries have more than two members?,Which [MASK] have more than two [MASK],"['Which', '[MASK]', 'have', 'more', 'than', 'two', '[MASK]']",SELECT Country FROM member GROUP BY Country HAVING COUNT(*)  >  2,"['member', 'Country']","[('member', '')]",['Country'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
4941,4941,What is the total population for all the districts that have an area larger tahn the average city area?,What is the total [MASK] for all the [MASK] that have an [MASK] larger tahn the average [MASK] [MASK],"['What', 'is', 'the', 'total', '[MASK]', 'for', 'all', 'the', '[MASK]', 'that', 'have', 'an', '[MASK]', 'larger', 'tahn', 'the', 'average', '[MASK]', '[MASK]']",SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district),"['district', 'city_population', 'city_area']","[('district', '')]","['city_population', 'city_area']","where,sum,avg,select,from",False,"['avg', 'where']",0.6666666666666666,1.0
7213,7213,How many flights does airline 'JetBlue Airways' have?,How many [MASK] does [MASK] [MASK] [MASK] have?,"['How', 'many', '[MASK]', 'does', '[MASK]', '[MASK]', '[MASK]', 'have?']","SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""","['FLIGHTS', 'AIRLINES', 'Airline', 'uid', 'JetBlue Airways']","[('FLIGHTS', 'T1'), ('AIRLINES', 'T2')]","['Airline', 'uid', 'JetBlue Airways']","as,join,count,where,select,from",True,"['count', 'where', 'as', 'join']",1.0,1.0
2623,2623,Sort all the rooms according to the price. Just report the room names.,Sort all the [MASK] according to the [MASK] Just report the [MASK] [MASK],"['Sort', 'all', 'the', '[MASK]', 'according', 'to', 'the', '[MASK]', 'Just', 'report', 'the', '[MASK]', '[MASK]']",SELECT roomName FROM Rooms ORDER BY basePrice;,"['Rooms', 'roomName', 'basePrice']","[('Rooms', '')]","['roomName', 'basePrice']","select,order,from",False,"['asc', 'order']",1.0,0.5
4032,4032,Find the first names of students studying in room 108.,Find the [MASK] [MASK] of [MASK] [MASK] in [MASK] 108.,"['Find', 'the', '[MASK]', '[MASK]', 'of', '[MASK]', '[MASK]', 'in', '[MASK]', '108.']",SELECT firstname FROM list WHERE classroom  =  108,"['list', 'firstname', 'classroom']","[('list', '')]","['firstname', 'classroom']","select,from,where",False,['where'],1.0,1.0
2621,2621,What is the average minimum and price of the rooms for each different decor.,What is the average minimum and [MASK] of the [MASK] for each different [MASK],"['What', 'is', 'the', 'average', 'minimum', 'and', '[MASK]', 'of', 'the', '[MASK]', 'for', 'each', 'different', '[MASK]']","SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;","['Rooms', 'decor', 'basePrice']","[('Rooms', '')]","['decor', 'basePrice']","min,group,avg,select,from",False,"['group', 'avg']",0.6666666666666666,1.0
4980,4980,Find the name of players whose card is yes in the descending order of training hours.,Find the [MASK] of [MASK] whose [MASK] is yes in the descending order of training [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', 'is', 'yes', 'in', 'the', 'descending', 'order', 'of', 'training', '[MASK]']",SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC,"['Player', 'pName', 'yCard', 'HS']","[('Player', '')]","['pName', 'yCard', 'HS']","order,where,select,desc,from",False,"['as', 'join', 'where']",0.3333333333333333,0.3333333333333333
3350,3350,What is the total number of clubs that have less than 10 medals in total?,What is the [MASK] number of [MASK] that have less than 10 medals in [MASK],"['What', 'is', 'the', '[MASK]', 'number', 'of', '[MASK]', 'that', 'have', 'less', 'than', '10', 'medals', 'in', '[MASK]']",SELECT count(*) FROM club_rank WHERE Total  <  10,"['club_rank', 'Total']","[('club_rank', '')]",['Total'],"select,count,from,where",False,['avg'],0.0,0.0
2783,2783,Which county has the largest population? Give me the name of the county.,Which [MASK] has the largest [MASK] Give me the [MASK] of the [MASK],"['Which', '[MASK]', 'has', 'the', 'largest', '[MASK]', 'Give', 'me', 'the', '[MASK]', 'of', 'the', '[MASK]']",SELECT County_name FROM county ORDER BY Population DESC LIMIT 1,"['county', 'Population', 'County_name']","[('county', '')]","['Population', 'County_name']","limit,order,select,desc,from",False,"['as', 'join', 'limit', 'order', 'desc']",1.0,0.6
949,949,What are the ids and names of the medicine that can interact with two or more enzymes?,What are the [MASK] and [MASK] of the [MASK] that can [MASK] with two or more [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'that', 'can', '[MASK]', 'with', 'two', 'or', 'more', '[MASK]']","SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2","['medicine_enzyme_interaction', 'medicine', 'Name', 'medicine_id', 'id']","[('medicine_enzyme_interaction', 'T2'), ('medicine', 'T1')]","['Name', 'medicine_id', 'id']","as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'count', 'having']",1.0,1.0
1761,1761,How many gymnasts are from each hometown?,How many [MASK] are from each [MASK],"['How', 'many', '[MASK]', 'are', 'from', 'each', '[MASK]']","SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown","['people', 'gymnast', 'Hometown', 'Gymnast_ID', 'People_ID']","[('people', 'T2'), ('gymnast', 'T1')]","['Hometown', 'Gymnast_ID', 'People_ID']","as,group,join,count,select,from",True,"['count', 'group']",0.5,1.0
4078,4078,Find the last names of the students in third grade that are not taught by COVIN JEROME.,Find the [MASK] [MASK] of the [MASK] in third [MASK] that are not taught by [MASK] [MASK],"['Find', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'in', 'third', '[MASK]', 'that', 'are', 'not', 'taught', 'by', '[MASK]', '[MASK]']","SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != ""COVIN"" AND T2.lastname != ""JEROME""","['list', 'teachers', 'firstname', 'classroom', 'lastname', 'grade', 'COVIN', 'JEROME']","[('list', 'T1'), ('teachers', 'T2')]","['firstname', 'classroom', 'lastname', 'grade', 'COVIN', 'JEROME']","distinct,as,join,and,where,select,from",True,"['as', 'join', 'where']",0.6,1.0
2327,2327,What campuses are located in Chico?,What [MASK] are [MASK] in [MASK],"['What', '[MASK]', 'are', '[MASK]', 'in', '[MASK]']","SELECT campus FROM campuses WHERE LOCATION  =  ""Chico""","['campuses', 'LOCATION', 'Chico', 'campus']","[('campuses', '')]","['LOCATION', 'Chico', 'campus']","select,from,where",False,"['where', 'as', 'join']",1.0,0.3333333333333333
3711,3711,How many camera lenses have a focal length longer than 15 mm?,How many [MASK] [MASK] have a [MASK] [MASK] longer than 15 mm?,"['How', 'many', '[MASK]', '[MASK]', 'have', 'a', '[MASK]', '[MASK]', 'longer', 'than', '15', 'mm?']",SELECT count(*) FROM camera_lens WHERE focal_length_mm  >  15,"['camera_lens', 'focal_length_mm']","[('camera_lens', '')]",['focal_length_mm'],"select,count,from,where",False,"['distinct', 'as', 'join', 'where', 'count']",1.0,0.4
337,337,Find the dates on which more than one revisions were made.,Find the [MASK] on which more than one [MASK] were made.,"['Find', 'the', '[MASK]', 'on', 'which', 'more', 'than', 'one', '[MASK]', 'were', 'made.']",SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1,"['Catalogs', 'date_of_latest_revision']","[('Catalogs', '')]",['date_of_latest_revision'],"group,count,having,select,from",False,"['as', 'group', 'join', 'count', 'having']",1.0,0.6
6371,6371,What are the names and types of the companies that have ever operated a flight?,What are the [MASK] and [MASK] of the [MASK] that have ever [MASK] a [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'that', 'have', 'ever', '[MASK]', 'a', '[MASK]']","SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id","['flight', 'operate_company', 'company_id', 'type', 'id', 'name']","[('flight', 't2'), ('operate_company', 'T1')]","['company_id', 'type', 'id', 'name']","select,join,from,as",True,"['as', 'join', 'where']",1.0,0.6666666666666666
3770,3770,"What are the descriptions of the courses with name ""database""?",What are the [MASK] of the [MASK] with [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', '[MASK]', '[MASK]']","SELECT course_description FROM COURSES WHERE course_name  =  ""database""","['COURSES', 'course_description', 'database', 'course_name']","[('COURSES', '')]","['course_description', 'database', 'course_name']","select,from,where",False,['where'],1.0,1.0
2056,2056,What are the names of members and their corresponding parties?,What are the [MASK] of [MASK] and their corresponding [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'and', 'their', 'corresponding', '[MASK]']","SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id","['party', 'Member', 'party_name', 'party_id', 'member_name']","[('party', 'T2'), ('Member', 'T1')]","['party_name', 'party_id', 'member_name']","select,join,from,as",True,"['join', 'as']",1.0,1.0
5205,5205,"What instruments did the musician with the last name ""Heilo"" play in the song ""Le Pop""?","What [MASK] did the musician with the [MASK] [MASK] [MASK] [MASK] in the [MASK] ""Le Pop""?","['What', '[MASK]', 'did', 'the', 'musician', 'with', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'in', 'the', '[MASK]', '""Le', 'Pop""?']","SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo"" AND T3.title  =  ""Le Pop""","['Performance', 'Songs', 'Instruments', 'Band', 'bandmate', 'Heilo', 'title', 'lastname', 'SongId', 'id', 'songid', 'bandmateid', 'instrument', 'Le Pop']","[('Performance', 'T1'), ('Songs', 'T3'), ('Instruments', 'T4'), ('Band', 'T2')]","['bandmate', 'Heilo', 'title', 'lastname', 'SongId', 'id', 'songid', 'bandmateid', 'instrument', 'Le Pop']","as,join,and,where,select,from",True,"['as', 'join', 'where']",0.75,1.0
6698,6698,How many lessons were in cancelled state?,How many [MASK] were in [MASK] [MASK],"['How', 'many', '[MASK]', 'were', 'in', '[MASK]', '[MASK]']","SELECT count(*) FROM Lessons WHERE lesson_status_code = ""Cancelled"";","['Lessons', 'lesson_status_code', 'Cancelled']","[('Lessons', '')]","['lesson_status_code', 'Cancelled']","select,count,from,where",False,"['count', 'where']",1.0,1.0
7951,7951,"What are each owner's first name, last name, and the size of their dog?",What are each [MASK] [MASK] [MASK] [MASK] [MASK] and the [MASK] of their dog?,"['What', 'are', 'each', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', 'the', '[MASK]', 'of', 'their', 'dog?']","SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","['Dogs', 'Owners', 'owner_id', 'size_code', 'first_name', 'last_name']","[('Dogs', 'T2'), ('Owners', 'T1')]","['owner_id', 'size_code', 'first_name', 'last_name']","select,join,from,as",True,[],,
293,293,List the names of 5 users followed by the largest number of other users.,List the [MASK] of 5 [MASK] [MASK] by the largest number of other [MASK],"['List', 'the', '[MASK]', 'of', '5', '[MASK]', '[MASK]', 'by', 'the', 'largest', 'number', 'of', 'other', '[MASK]']",SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5,"['user_profiles', 'followers', 'name']","[('user_profiles', '')]","['followers', 'name']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
6212,6212,List the status shared by more than two roller coaster.,List the [MASK] shared by more than two [MASK] [MASK],"['List', 'the', '[MASK]', 'shared', 'by', 'more', 'than', 'two', '[MASK]', '[MASK]']",SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT(*)  >  2,"['roller_coaster', 'Status']","[('roller_coaster', '')]",['Status'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
2205,2205,What are the names of races held after 12:00:00 or before 09:00:00?,What are the [MASK] of [MASK] held after [MASK] or before [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'held', 'after', '[MASK]', 'or', 'before', '[MASK]']","SELECT name FROM races WHERE TIME > ""12:00:00"" OR TIME < ""09:00:00""","['races', '12:00:00', 'TIME', '09:00:00', 'name']","[('races', '')]","['12:00:00', 'TIME', '09:00:00', 'name']","or,select,from,where",False,['where'],0.5,1.0
7264,7264,Count the number of employees for each city.,Count the number of [MASK] for each [MASK],"['Count', 'the', 'number', 'of', '[MASK]', 'for', 'each', '[MASK]']","SELECT count(*) ,  city FROM employee GROUP BY city","['employee', 'city']","[('employee', '')]",['city'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
3413,3413,Display all the information about the department Marketing.,[MASK] all the information about the [MASK] Marketing.,"['[MASK]', 'all', 'the', 'information', 'about', 'the', '[MASK]', 'Marketing.']",SELECT * FROM  departments WHERE department_name  =  'Marketing',"['departments', 'department_name']","[('departments', '')]",['department_name'],"select,from,where",False,['where'],1.0,1.0
3193,3193,Find the description and credit for the course QM-261?,Find the [MASK] and [MASK] for the [MASK] QM-261?,"['Find', 'the', '[MASK]', 'and', '[MASK]', 'for', 'the', '[MASK]', 'QM-261?']","SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'","['course', 'crs_code', 'crs_description', 'crs_credit']","[('course', '')]","['crs_code', 'crs_description', 'crs_credit']","select,from,where",False,['where'],1.0,1.0
7324,7324,Return the ids of templates that have the code PP or PPT.,Return the [MASK] of [MASK] that have the [MASK] PP or PPT.,"['Return', 'the', '[MASK]', 'of', '[MASK]', 'that', 'have', 'the', '[MASK]', 'PP', 'or', 'PPT.']","SELECT template_id FROM Templates WHERE template_type_code  =  ""PP"" OR template_type_code  =  ""PPT""","['Templates', 'PPT', 'template_type_code', 'PP', 'template_id']","[('Templates', '')]","['PPT', 'template_type_code', 'PP', 'template_id']","or,select,from,where",False,"['or', 'where']",1.0,1.0
2593,2593,What are the room name and base price of the room with the lowest base price?,What are the [MASK] [MASK] and [MASK] [MASK] of the [MASK] with the lowest [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'lowest', '[MASK]', '[MASK]']","SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;","['Rooms', 'roomName', 'basePrice']","[('Rooms', '')]","['roomName', 'basePrice']","asc,limit,order,select,from",False,"['limit', 'order']",0.6666666666666666,1.0
7875,7875,Count the number of high schoolers in grades 9 or 10.,Count the number of [MASK] [MASK] in [MASK] 9 or 10.,"['Count', 'the', 'number', 'of', '[MASK]', '[MASK]', 'in', '[MASK]', '9', 'or', '10.']",SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10,"['Highschooler', 'grade']","[('Highschooler', '')]",['grade'],"count,where,or,select,from",False,['count'],0.3333333333333333,1.0
2072,2072,How many events are there for each party?,How many [MASK] are there for each [MASK],"['How', 'many', '[MASK]', 'are', 'there', 'for', 'each', '[MASK]']","SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id","['party', 'party_events', 'party_id', 'party_name']","[('party', 'T2'), ('party_events', 'T1')]","['party_id', 'party_name']","as,group,join,count,select,from",True,"['group', 'count']",0.5,1.0
6777,6777,Show the names of all the activities Mark Giuliano participates in.,Show the [MASK] of all the [MASK] [MASK] [MASK] [MASK] in.,"['Show', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'in.']","SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  ""Mark"" AND T1.lname  =  ""Giuliano""","['Faculty_participates_in', 'Activity', 'Faculty', 'activity_name', 'facID', 'Mark', 'lname', 'Giuliano', 'fname', 'actid']","[('Faculty_participates_in', 'T2'), ('Activity', 'T3'), ('Faculty', 'T1')]","['activity_name', 'facID', 'Mark', 'lname', 'Giuliano', 'fname', 'actid']","as,join,from,and,select,where",True,[],,
470,470,What are the full names and ages for all female students whose sex is F?,What are the full [MASK] and [MASK] for all female [MASK] whose [MASK] is F?,"['What', 'are', 'the', 'full', '[MASK]', 'and', '[MASK]', 'for', 'all', 'female', '[MASK]', 'whose', '[MASK]', 'is', 'F?']","SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'","['Student', 'Age', 'Sex', 'Fname', 'Lname']","[('Student', '')]","['Age', 'Sex', 'Fname', 'Lname']","select,from,where",False,['where'],1.0,1.0
557,557,List the customers first and last name of 10 least expensive invoices.,List the [MASK] [MASK] and [MASK] [MASK] of 10 least expensive [MASK],"['List', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', '10', 'least', 'expensive', '[MASK]']","SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10;","['customers', 'invoices', 'total', 'last_name', 'id', 'customer_id', 'first_name']","[('customers', 'T1'), ('invoices', 'T2')]","['total', 'last_name', 'id', 'customer_id', 'first_name']","as,join,limit,order,select,from",True,"['as', 'join', 'limit', 'order']",1.0,1.0
6134,6134,"What are all the addresses in East Julianaside, Texas or in Gleasonmouth, Arizona.",What are all the [MASK] in [MASK] [MASK] [MASK] or in [MASK] [MASK],"['What', 'are', 'all', 'the', '[MASK]', 'in', '[MASK]', '[MASK]', '[MASK]', 'or', 'in', '[MASK]', '[MASK]']","SELECT address_content FROM addresses WHERE city  =  ""East Julianaside"" AND state_province_county  =  ""Texas"" UNION SELECT address_content FROM addresses WHERE city  =  ""Gleasonmouth"" AND state_province_county  =  ""Arizona""","['addresses', 'city', 'East Julianaside', 'Texas', 'Arizona', 'Gleasonmouth', 'address_content', 'state_province_county']","[('addresses', '')]","['city', 'East Julianaside', 'Texas', 'Arizona', 'Gleasonmouth', 'address_content', 'state_province_county']","union,and,where,select,from",False,"['as', 'join', 'where', 'distinct']",0.3333333333333333,0.25
6437,6437,"What is the project detail for the project with document ""King Book""?",What is the [MASK] [MASK] for the [MASK] with [MASK] [MASK] [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', 'with', '[MASK]', '[MASK]', '[MASK]']","SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  ""King Book""","['Documents', 'Projects', 'project_details', 'King Book', 'document_name', 'project_id']","[('Documents', 'T2'), ('Projects', 'T1')]","['project_details', 'King Book', 'document_name', 'project_id']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
6916,6916,On what day was the order with invoice number 10 placed?,On what day was the [MASK] with [MASK] [MASK] 10 [MASK],"['On', 'what', 'day', 'was', 'the', '[MASK]', 'with', '[MASK]', '[MASK]', '10', '[MASK]']",SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10,"['shipments', 'orders', 'date_order_placed', 'order_id', 'invoice_number']","[('shipments', 'T2'), ('orders', 'T1')]","['date_order_placed', 'order_id', 'invoice_number']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
7817,7817,"What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",What are the [MASK] [MASK] of the different [MASK] and what are the [MASK] spoken by the greatest [MASK] of people for each?,"['What', 'are', 'the', '[MASK]', '[MASK]', 'of', 'the', 'different', '[MASK]', 'and', 'what', 'are', 'the', '[MASK]', 'spoken', 'by', 'the', 'greatest', '[MASK]', 'of', 'people', 'for', 'each?']","SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","['countrylanguage', 'CountryCode', 'Percentage', 'LANGUAGE']","[('countrylanguage', '')]","['CountryCode', 'Percentage', 'LANGUAGE']","group,select,from,max",False,"['group', 'where', 'max']",1.0,0.6666666666666666
1262,1262,Show the most common apartment type code among apartments with more than 1 bathroom.,Show the most common [MASK] [MASK] [MASK] among [MASK] with more than 1 [MASK],"['Show', 'the', 'most', 'common', '[MASK]', '[MASK]', '[MASK]', 'among', '[MASK]', 'with', 'more', 'than', '1', '[MASK]']",SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1,"['Apartments', 'apt_type_code', 'bathroom_count']","[('Apartments', '')]","['apt_type_code', 'bathroom_count']","group,limit,count,order,where,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",0.8333333333333334,1.0
7914,7914,Find the average grade of all students who have some friends.,Find the average [MASK] of all [MASK] who have some [MASK],"['Find', 'the', 'average', '[MASK]', 'of', 'all', '[MASK]', 'who', 'have', 'some', '[MASK]']",SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),"['Friend', 'Highschooler', 'Highschooler', 'student_id', 'id', 'grade']","[('Friend', 'T1'), ('Highschooler', 'T2'), ('Highschooler', '')]","['student_id', 'id', 'grade']","as,in,join,from,avg,select,where",True,"['in', 'avg', 'where']",0.6,1.0
3236,3236,What is the number of different class sections offered in the course ACCT-211?,What is the number of different [MASK] [MASK] offered in the [MASK] ACCT-211?,"['What', 'is', 'the', 'number', 'of', 'different', '[MASK]', '[MASK]', 'offered', 'in', 'the', '[MASK]', 'ACCT-211?']",SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211',"['CLASS', 'class_section', 'crs_code']","[('CLASS', '')]","['class_section', 'crs_code']","distinct,count,where,select,from",False,"['as', 'join', 'count', 'where']",0.6666666666666666,0.5
1022,1022,"What are the names of all the teams in the basketball competition, sorted by all home scores in descending order?","What are the [MASK] of [MASK] the [MASK] in the [MASK] competition, sorted by [MASK] [MASK] scores in descending order?","['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'the', '[MASK]', 'in', 'the', '[MASK]', 'competition,', 'sorted', 'by', '[MASK]', '[MASK]', 'scores', 'in', 'descending', 'order?']",SELECT team_name FROM basketball_match ORDER BY All_Home DESC,"['basketball_match', 'team_name', 'All_Home']","[('basketball_match', '')]","['team_name', 'All_Home']","select,order,desc,from",False,"['order', 'desc']",1.0,1.0
120,120,What is the id of the shortest trip?,What is the [MASK] of the shortest [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', 'shortest', '[MASK]']",SELECT id FROM trip ORDER BY duration LIMIT 1,"['trip', 'duration', 'id']","[('trip', '')]","['duration', 'id']","select,limit,order,from",False,"['limit', 'order']",1.0,1.0
905,905,What is the effective date of the claim that has the largest amount of total settlement?,What is the [MASK] [MASK] of the [MASK] that has the largest [MASK] of total [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'that', 'has', 'the', 'largest', '[MASK]', 'of', 'total', '[MASK]']",SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1,"['settlements', 'claims', 'Effective_Date', 'settlement_amount', 'claim_id']","[('settlements', 't2'), ('claims', 't1')]","['Effective_Date', 'settlement_amount', 'claim_id']","as,group,join,limit,sum,order,select,desc,from",True,"['limit', 'order', 'desc']",0.42857142857142855,1.0
3768,3768,How many courses are there in total?,How many [MASK] are there in total?,"['How', 'many', '[MASK]', 'are', 'there', 'in', 'total?']",SELECT count(*) FROM COURSES,['COURSES'],"[('COURSES', '')]",[],"select,count,from",False,['count'],1.0,1.0
1306,1306,List the names and birthdays of the top five players in terms of potential.,List the [MASK] and [MASK] of the top five [MASK] in terms of [MASK],"['List', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', 'top', 'five', '[MASK]', 'in', 'terms', 'of', '[MASK]']","SELECT DISTINCT T1.player_name ,  T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY potential DESC LIMIT 5","['Player', 'Player_Attributes', 'player_api_id', 'player_name', 'potential', 'birthday']","[('Player', 'T1'), ('Player_Attributes', 'T2')]","['player_api_id', 'player_name', 'potential', 'birthday']","distinct,as,join,limit,order,select,desc,from",True,"['limit', 'order', 'desc']",0.5,1.0
5484,5484,Find the first and last name of all the students of age 18 who have vice president votes.,Find the first and last [MASK] of all the [MASK] of [MASK] 18 who have [MASK] [MASK] [MASK],"['Find', 'the', 'first', 'and', 'last', '[MASK]', 'of', 'all', 'the', '[MASK]', 'of', '[MASK]', '18', 'who', 'have', '[MASK]', '[MASK]', '[MASK]']","SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18","['VOTING_RECORD', 'STUDENT', 'LName', 'VICE_President_VOTE', 'StuID', 'Fname', 'age']","[('VOTING_RECORD', 'T2'), ('STUDENT', 'T1')]","['LName', 'VICE_President_VOTE', 'StuID', 'Fname', 'age']","distinct,as,join,where,select,from",True,"['as', 'join', 'where']",0.75,1.0
3818,3818,"What is the date of enrollment of the course named ""Spanish""?",What is the [MASK] [MASK] [MASK] [MASK] the [MASK] [MASK] [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  ""Spanish""","['Courses', 'Student_Course_Enrolment', 'course_id', 'date_of_enrolment', 'Spanish', 'course_name']","[('Courses', 'T1'), ('Student_Course_Enrolment', 'T2')]","['course_id', 'date_of_enrolment', 'Spanish', 'course_name']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
5430,5430,Show the member name and hometown who registered a branch in 2016.,Show the [MASK] [MASK] and [MASK] who [MASK] a [MASK] in 2016.,"['Show', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'who', '[MASK]', 'a', '[MASK]', 'in', '2016.']","SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016","['membership_register_branch', 'member', 'register_year', 'hometown', 'member_id', 'name']","[('membership_register_branch', 'T1'), ('member', 'T2')]","['register_year', 'hometown', 'member_id', 'name']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
2558,2558,Show the crime rate of counties with a city having white percentage more than 90.,Show the [MASK] [MASK] of [MASK] with a [MASK] having [MASK] percentage more than 90.,"['Show', 'the', '[MASK]', '[MASK]', 'of', '[MASK]', 'with', 'a', '[MASK]', 'having', '[MASK]', 'percentage', 'more', 'than', '90.']",SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90,"['county_public_safety', 'city', 'County_ID', 'White', 'Crime_rate']","[('county_public_safety', 'T2'), ('city', 'T1')]","['County_ID', 'White', 'Crime_rate']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
6323,6323,What is the last name of the contact individual from the Labour party organization who was contacted most recently?,What is the [MASK] [MASK] of the [MASK] [MASK] from the [MASK] [MASK] [MASK] who was [MASK] most recently?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'from', 'the', '[MASK]', '[MASK]', '[MASK]', 'who', 'was', '[MASK]', 'most', 'recently?']","SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  ""Labour Party"" ORDER BY t2.date_contact_to DESC LIMIT 1","['organization_contact_individuals', 'individuals', 'organizations', 'individual_id', 'Labour Party', 'individual_last_name', 'organization_name', 'date_contact_to', 'organization_id']","[('organization_contact_individuals', 't2'), ('individuals', 't3'), ('organizations', 't1')]","['individual_id', 'Labour Party', 'individual_last_name', 'organization_name', 'date_contact_to', 'organization_id']","as,join,limit,from,order,select,desc,where",True,"['limit', 'order', 'desc']",0.5,1.0
1935,1935,Show the cinema name and location for cinemas with capacity above average.,Show the [MASK] [MASK] and [MASK] for [MASK] with [MASK] above average.,"['Show', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'for', '[MASK]', 'with', '[MASK]', 'above', 'average.']","SELECT name ,  LOCATION FROM cinema WHERE capacity  >  (SELECT avg(capacity) FROM cinema)","['cinema', 'capacity', 'LOCATION', 'name']","[('cinema', '')]","['capacity', 'LOCATION', 'name']","select,avg,from,where",False,"['avg', 'where']",1.0,1.0
3881,3881,What is the payment method that were used the least often?,What is the [MASK] [MASK] that were used the least often?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'that', 'were', 'used', 'the', 'least', 'often?']",SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1,"['Payments', 'Payment_Method_Code']","[('Payments', '')]",['Payment_Method_Code'],"asc,group,limit,count,order,select,from",False,"['asc', 'as', 'group', 'join', 'limit', 'count', 'order']",1.0,0.7142857142857143
3892,3892,List the details of the customers who do not have any policies.,List the [MASK] of the [MASK] who do not have any [MASK],"['List', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'do', 'not', 'have', 'any', '[MASK]']",SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id,"['Customers', 'Customer_Policies', 'Customers', 'customer_id', 'customer_details']","[('Customers', 'T1'), ('Customer_Policies', 'T2'), ('Customers', '')]","['customer_id', 'customer_details']","as,except,join,select,from",True,"['where', 'in', 'not']",0.0,0.0
1093,1093,How many players are from each country?,How many [MASK] are from each [MASK],"['How', 'many', '[MASK]', 'are', 'from', 'each', '[MASK]']","SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name","['country', 'match_season', 'Country_name', 'Country_id', 'Country']","[('country', 'T1'), ('match_season', 'T2')]","['Country_name', 'Country_id', 'Country']","as,group,join,count,select,from",True,"['count', 'group']",0.5,1.0
3855,3855,"What are the method, date and amount of each payment? Sort the list in ascending order of date.",What are the [MASK] [MASK] and [MASK] of each [MASK] Sort the list in ascending order of [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'each', '[MASK]', 'Sort', 'the', 'list', 'in', 'ascending', 'order', 'of', '[MASK]']","SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC","['Payments', 'Payment_Method_Code', 'Amount_Payment', 'Date_Payment_Made']","[('Payments', '')]","['Payment_Method_Code', 'Amount_Payment', 'Date_Payment_Made']","select,asc,order,from",False,"['asc', 'order']",1.0,1.0
4036,4036,For each classroom report the grade that is taught in it. Report just the classroom number and the grade number.,For each [MASK] report the [MASK] that is taught in it. Report just the [MASK] number and the [MASK] number.,"['For', 'each', '[MASK]', 'report', 'the', '[MASK]', 'that', 'is', 'taught', 'in', 'it.', 'Report', 'just', 'the', '[MASK]', 'number', 'and', 'the', '[MASK]', 'number.']","SELECT DISTINCT classroom ,  grade FROM list","['list', 'classroom', 'grade']","[('list', '')]","['classroom', 'grade']","distinct,select,from",False,"['distinct', 'group', 'count']",1.0,0.3333333333333333
5655,5655,Show each state and the number of addresses in each state.,Show each [MASK] and the number of [MASK] in each [MASK],"['Show', 'each', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'in', 'each', '[MASK]']","SELECT state_province_county ,  count(*) FROM addresses GROUP BY state_province_county","['addresses', 'state_province_county']","[('addresses', '')]",['state_province_county'],"select,count,from,group",False,"['group', 'count']",1.0,1.0
7327,7327,What is the version number and template type code for the template with version number later than 5?,What is the [MASK] [MASK] and [MASK] [MASK] [MASK] for the [MASK] with [MASK] [MASK] [MASK] than 5?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', 'with', '[MASK]', '[MASK]', '[MASK]', 'than', '5?']","SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","['Templates', 'version_number', 'template_type_code']","[('Templates', '')]","['version_number', 'template_type_code']","select,from,where",False,['where'],1.0,1.0
815,815,What are the distinct billing countries of the invoices?,What are the distinct [MASK] [MASK] of the [MASK],"['What', 'are', 'the', 'distinct', '[MASK]', '[MASK]', 'of', 'the', '[MASK]']",SELECT distinct(BillingCountry) FROM INVOICE,"['INVOICE', 'BillingCountry']","[('INVOICE', '')]",['BillingCountry'],"distinct,select,from",False,['distinct'],1.0,1.0
7962,7962,List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.,List the [MASK] of the [MASK] who live in the [MASK] of Hawaii or the [MASK] of Wisconsin.,"['List', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'live', 'in', 'the', '[MASK]', 'of', 'Hawaii', 'or', 'the', '[MASK]', 'of', 'Wisconsin.']",SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin',"['Professionals', 'state', 'email_address']","[('Professionals', '')]","['state', 'email_address']","or,select,from,where",False,['where'],0.5,1.0
4959,4959,How many different colleges were represented at tryouts?,How many different colleges were represented at [MASK],"['How', 'many', 'different', 'colleges', 'were', 'represented', 'at', '[MASK]']",SELECT count(DISTINCT cName) FROM tryout,"['tryout', 'cName']","[('tryout', '')]",['cName'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
1082,1082,"Show the season, the player, and the name of the team that players belong to.",Show the [MASK] the [MASK] and the [MASK] of the [MASK] that [MASK] belong to.,"['Show', 'the', '[MASK]', 'the', '[MASK]', 'and', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', '[MASK]', 'belong', 'to.']","SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id","['match_season', 'team', 'Team_id', 'Season', 'Name', 'Team', 'Player']","[('match_season', 'T1'), ('team', 'T2')]","['Team_id', 'Season', 'Name', 'Team', 'Player']","select,join,from,as",True,"['join', 'as']",1.0,1.0
1208,1208,What is the average number of bedrooms of all apartments?,What is the average number of [MASK] of all [MASK],"['What', 'is', 'the', 'average', 'number', 'of', '[MASK]', 'of', 'all', '[MASK]']",SELECT avg(bedroom_count) FROM Apartments,"['Apartments', 'bedroom_count']","[('Apartments', '')]",['bedroom_count'],"select,from,avg",False,['avg'],1.0,1.0
5483,5483,What are the first and last names of all the female students who have president votes?,What are the first and last [MASK] of all the female [MASK] who have [MASK] [MASK],"['What', 'are', 'the', 'first', 'and', 'last', '[MASK]', 'of', 'all', 'the', 'female', '[MASK]', 'who', 'have', '[MASK]', '[MASK]']","SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  ""F""","['VOTING_RECORD', 'STUDENT', 'StuID', 'F', 'Fname', 'sex', 'President_VOTE', 'LName']","[('VOTING_RECORD', 'T2'), ('STUDENT', 'T1')]","['StuID', 'F', 'Fname', 'sex', 'President_VOTE', 'LName']","distinct,as,join,where,select,from",True,['where'],0.25,1.0
1289,1289,"Show the name, average attendance, total attendance for stadiums where no accidents happened.",Show the [MASK] [MASK] [MASK] [MASK] [MASK] for [MASK] where no [MASK] happened.,"['Show', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'for', '[MASK]', 'where', 'no', '[MASK]', 'happened.']","SELECT name ,  average_attendance ,  total_attendance FROM stadium EXCEPT SELECT T2.name ,  T2.average_attendance ,  T2.total_attendance FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id","['stadium', 'injury_accident', 'game', 'stadium', 'average_attendance', 'name', 'stadium_id', 'game_id', 'id', 'total_attendance']","[('stadium', ''), ('injury_accident', 'T3'), ('game', 'T1'), ('stadium', 'T2')]","['average_attendance', 'name', 'stadium_id', 'game_id', 'id', 'total_attendance']","as,except,join,select,from",True,"['as', 'except', 'join']",1.0,1.0
5953,5953,Show the names and ids of tourist attractions that are visited at least two times.,Show the [MASK] and [MASK] of [MASK] [MASK] that are [MASK] at least two times.,"['Show', 'the', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', '[MASK]', 'that', 'are', '[MASK]', 'at', 'least', 'two', 'times.']","SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2","['VISITS', 'Tourist_Attractions', 'Name', 'Tourist_Attraction_ID']","[('VISITS', 'T2'), ('Tourist_Attractions', 'T1')]","['Name', 'Tourist_Attraction_ID']","as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'count', 'having']",1.0,1.0
4191,4191,"What are all the role codes, role names, and role descriptions?",What are all the [MASK] [MASK] [MASK] [MASK] and [MASK] [MASK],"['What', 'are', 'all', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]']","SELECT role_code ,  role_name ,  role_description FROM ROLES","['ROLES', 'role_code', 'role_description', 'role_name']","[('ROLES', '')]","['role_code', 'role_description', 'role_name']","select,from",False,[],,
7416,7416,Find the average number of staff working for the museums that were open before 2009.,Find the average number [MASK] [MASK] working for the [MASK] that were [MASK] before 2009.,"['Find', 'the', 'average', 'number', '[MASK]', '[MASK]', 'working', 'for', 'the', '[MASK]', 'that', 'were', '[MASK]', 'before', '2009.']",SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009,"['museum', 'num_of_staff', 'open_year']","[('museum', '')]","['num_of_staff', 'open_year']","select,where,from,avg",False,"['avg', 'where']",1.0,1.0
2428,2428,list all female (sex is F) candidate names in the alphabetical order.,list all female (sex is F) [MASK] [MASK] in the alphabetical order.,"['list', 'all', 'female', '(sex', 'is', 'F)', '[MASK]', '[MASK]', 'in', 'the', 'alphabetical', 'order.']",SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t1.sex  =  'F' ORDER BY t1.name,"['candidate', 'people', 'sex', 'people_id', 'name']","[('candidate', 't2'), ('people', 't1')]","['sex', 'people_id', 'name']","as,join,from,order,select,where",True,"['as', 'join', 'where']",0.75,1.0
604,604,How many employees who are IT staff are from each city?,How many [MASK] who are IT staff are from each [MASK],"['How', 'many', '[MASK]', 'who', 'are', 'IT', 'staff', 'are', 'from', 'each', '[MASK]']","SELECT count(*) ,  city FROM employees WHERE title  =  'IT Staff' GROUP BY city","['employees', 'city', 'title']","[('employees', '')]","['city', 'title']","group,count,where,select,from",False,"['count', 'group']",0.6666666666666666,1.0
7851,7851,"What are the major record formats of orchestras, sorted by their frequency?",What are the [MASK] [MASK] [MASK] of [MASK] sorted by their frequency?,"['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', 'of', '[MASK]', 'sorted', 'by', 'their', 'frequency?']",SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,"['orchestra', 'Major_Record_Format']","[('orchestra', '')]",['Major_Record_Format'],"asc,group,count,order,select,from",False,"['asc', 'order']",0.5,1.0
2114,2114,List the document ids for any documents with the status code done and the type code paper.,List the [MASK] [MASK] for any [MASK] with the [MASK] [MASK] [MASK] and the [MASK] [MASK] [MASK],"['List', 'the', '[MASK]', '[MASK]', 'for', 'any', '[MASK]', 'with', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT document_id FROM Documents WHERE document_status_code = ""done"" AND document_type_code = ""Paper"";","['Documents', 'document_type_code', 'document_status_code', 'Paper', 'document_id', 'done']","[('Documents', '')]","['document_type_code', 'document_status_code', 'Paper', 'document_id', 'done']","select,and,from,where",False,"['as', 'join', 'where']",0.5,0.3333333333333333
550,550,How many tracks does each genre have and what are the names of the top 5?,How many [MASK] does each [MASK] have and what are the [MASK] of the top 5?,"['How', 'many', '[MASK]', 'does', 'each', '[MASK]', 'have', 'and', 'what', 'are', 'the', '[MASK]', 'of', 'the', 'top', '5?']","SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;","['genres', 'tracks', 'genre_id', 'id', 'name']","[('genres', 'T1'), ('tracks', 'T2')]","['genre_id', 'id', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'count']",0.2857142857142857,1.0
7315,7315,Show ids for all templates not used by any document.,Show [MASK] for all [MASK] not used by any [MASK],"['Show', '[MASK]', 'for', 'all', '[MASK]', 'not', 'used', 'by', 'any', '[MASK]']",SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,"['Templates', 'Documents', 'template_id']","[('Templates', ''), ('Documents', '')]",['template_id'],"select,except,from",False,[],,
2299,2299,How many distinct companies are there?,How many distinct [MASK] are there?,"['How', 'many', 'distinct', '[MASK]', 'are', 'there?']",SELECT count(DISTINCT Company) FROM entrepreneur,"['entrepreneur', 'Company']","[('entrepreneur', '')]",['Company'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
475,475,Show all student ids who are older than 20.,Show all [MASK] [MASK] who are older than 20.,"['Show', 'all', '[MASK]', '[MASK]', 'who', 'are', 'older', 'than', '20.']",SELECT StuID FROM Student WHERE age  >  20,"['Student', 'StuID', 'age']","[('Student', '')]","['StuID', 'age']","select,from,where",False,['where'],1.0,1.0
5595,5595,Return the name of the characteristic that is most common across all products.,Return the [MASK] of the [MASK] that is most common across all [MASK],"['Return', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'is', 'most', 'common', 'across', 'all', '[MASK]']",SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1,"['CHARACTERISTICS', 'products', 'product_characteristics', 'characteristic_name', 'product_id', 'characteristic_id']","[('CHARACTERISTICS', 't3'), ('products', 't1'), ('product_characteristics', 't2')]","['characteristic_name', 'product_id', 'characteristic_id']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc', 'as', 'join']",1.0,1.0
212,212,What is the average latitude and longitude of all starting stations for the trips?,What is the average [MASK] and [MASK] of all [MASK] [MASK] for the [MASK],"['What', 'is', 'the', 'average', '[MASK]', 'and', '[MASK]', 'of', 'all', '[MASK]', '[MASK]', 'for', 'the', '[MASK]']","SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id","['station', 'trip', 'start_station_id', 'lat', 'long', 'id']","[('station', 'T1'), ('trip', 'T2')]","['start_station_id', 'lat', 'long', 'id']","as,join,avg,select,from",True,['avg'],0.3333333333333333,1.0
3512,3512,What are total salaries and department id for each department that has more than 2 employees?,What are total [MASK] and [MASK] [MASK] for each [MASK] that has more than 2 [MASK],"['What', 'are', 'total', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'each', '[MASK]', 'that', 'has', 'more', 'than', '2', '[MASK]']","SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2","['employees', 'salary', 'department_id']","[('employees', '')]","['salary', 'department_id']","group,sum,count,having,select,from",False,"['group', 'count', 'having']",0.75,1.0
7712,7712,Which language is the most popular in Aruba?,Which [MASK] is the most popular in [MASK],"['Which', '[MASK]', 'is', 'the', 'most', 'popular', 'in', '[MASK]']","SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1","['country', 'countrylanguage', 'Aruba', 'Language', 'Name', 'Percentage', 'Code', 'CountryCode']","[('country', 'T1'), ('countrylanguage', 'T2')]","['Aruba', 'Language', 'Name', 'Percentage', 'Code', 'CountryCode']","as,join,limit,from,order,select,desc,where",True,"['group', 'limit', 'count', 'order', 'desc']",0.5,0.6
5684,5684,How many students are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM student,['student'],"[('student', '')]",[],"select,count,from",False,['count'],1.0,1.0
2024,2024,"For each company id, what are the companies and how many gas stations does each one operate?","For each [MASK] id, what are the [MASK] and how many gas [MASK] does each one operate?","['For', 'each', '[MASK]', 'id,', 'what', 'are', 'the', '[MASK]', 'and', 'how', 'many', 'gas', '[MASK]', 'does', 'each', 'one', 'operate?']","SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id","['company', 'station_company', 'company', 'company_id']","[('company', 'T2'), ('station_company', 'T1')]","['company', 'company_id']","as,group,join,count,select,from",True,"['as', 'group', 'join', 'count']",1.0,1.0
6474,6474,Count the number of different scientists assigned to any project.,Count the number of different [MASK] [MASK] to any project.,"['Count', 'the', 'number', 'of', 'different', '[MASK]', '[MASK]', 'to', 'any', 'project.']",SELECT count(DISTINCT scientist) FROM assignedto,"['assignedto', 'scientist']","[('assignedto', '')]",['scientist'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
2480,2480,"For any rating where the name of reviewer is the same as the director of the movie, return the reviewer name, movie title, and number of stars.",For any [MASK] where the [MASK] of [MASK] is the same as the [MASK] of the [MASK] return the [MASK] [MASK] [MASK] [MASK] and number of [MASK],"['For', 'any', '[MASK]', 'where', 'the', '[MASK]', 'of', '[MASK]', 'is', 'the', 'same', 'as', 'the', '[MASK]', 'of', 'the', '[MASK]', 'return', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', 'number', 'of', '[MASK]']","SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name","['Rating', 'Movie', 'Reviewer', 'rID', 'title', 'name', 'stars', 'director', 'mID']","[('Rating', 'T1'), ('Movie', 'T2'), ('Reviewer', 'T3')]","['rID', 'title', 'name', 'stars', 'director', 'mID']","distinct,as,join,where,select,from",True,"['as', 'join', 'and']",0.5,0.6666666666666666
276,276,How many users are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM user_profiles,['user_profiles'],"[('user_profiles', '')]",[],"select,count,from",False,['count'],1.0,1.0
4601,4601,What are the names and locations of festivals?,What are the [MASK] and [MASK] of [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', '[MASK]']","SELECT Festival_Name ,  LOCATION FROM festival_detail","['festival_detail', 'Festival_Name', 'LOCATION']","[('festival_detail', '')]","['Festival_Name', 'LOCATION']","select,from",False,[],,
5431,5431,What are the member names and hometowns of those who registered at a branch in 2016?,What are the [MASK] [MASK] and [MASK] of those who [MASK] at a [MASK] in 2016?,"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'those', 'who', '[MASK]', 'at', 'a', '[MASK]', 'in', '2016?']","SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016","['membership_register_branch', 'member', 'register_year', 'hometown', 'member_id', 'name']","[('membership_register_branch', 'T1'), ('member', 'T2')]","['register_year', 'hometown', 'member_id', 'name']","as,join,from,select,where",True,"['count', 'where']",0.3333333333333333,0.5
7620,7620,"When did the episode ""A Love of a Lifetime"" air?","When did the [MASK] ""A [MASK] of a [MASK] air?","['When', 'did', 'the', '[MASK]', '""A', '[MASK]', 'of', 'a', '[MASK]', 'air?']","SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","['TV_series', 'Air_Date', 'Episode', 'A Love of a Lifetime']","[('TV_series', '')]","['Air_Date', 'Episode', 'A Love of a Lifetime']","select,from,where",False,"['and', 'where']",1.0,0.5
2339,2339,What is the campus fee for San Francisco State University in 1996?,What is the [MASK] [MASK] for San [MASK] [MASK] [MASK] in 1996?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'for', 'San', '[MASK]', '[MASK]', '[MASK]', 'in', '1996?']","SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  ""San Francisco State University"" AND T2.year  =  1996","['campuses', 'csu_fees', 'campusfee', 'campus', 'id', 'San Francisco State University', 'year']","[('campuses', 'T1'), ('csu_fees', 'T2')]","['campusfee', 'campus', 'id', 'San Francisco State University', 'year']","as,join,from,and,select,where",True,"['as', 'join', 'and', 'where']",1.0,1.0
901,901,Find the total and average amount of settlements.,Find the total and average [MASK] of [MASK],"['Find', 'the', 'total', 'and', 'average', '[MASK]', 'of', '[MASK]']","SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements","['settlements', 'settlement_amount']","[('settlements', '')]",['settlement_amount'],"select,sum,from,avg",False,['avg'],0.5,1.0
4544,4544,Count the number of companies.,Count the number of [MASK],"['Count', 'the', 'number', 'of', '[MASK]']",SELECT count(*) FROM Companies,['Companies'],"[('Companies', '')]",[],"select,count,from",False,['count'],1.0,1.0
1409,1409,What is the name of the deparment with the highest enrollment?,What is the [MASK] of the [MASK] with the highest [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'highest', '[MASK]']",SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1,"['student', 'dept_name']","[('student', '')]",['dept_name'],"group,limit,count,order,select,desc,from",False,"['limit', 'order', 'desc']",0.6,1.0
6630,6630,What is the birthday of the staff member with first name as Janessa and last name as Sawayn?,What is the [MASK] [MASK] the [MASK] member with [MASK] [MASK] as [MASK] and [MASK] [MASK] as [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'the', '[MASK]', 'member', 'with', '[MASK]', '[MASK]', 'as', '[MASK]', 'and', '[MASK]', '[MASK]', 'as', '[MASK]']","SELECT date_of_birth FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";","['Staff', 'Janessa', 'date_of_birth', 'last_name', 'Sawayn', 'first_name']","[('Staff', '')]","['Janessa', 'date_of_birth', 'last_name', 'Sawayn', 'first_name']","select,and,from,where",False,"['and', 'where']",1.0,1.0
989,989,What is the primary conference of the school that has the lowest acc percent score in the competition?,What is the [MASK] [MASK] of the [MASK] that has the lowest [MASK] [MASK] score in the competition?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'that', 'has', 'the', 'lowest', '[MASK]', '[MASK]', 'score', 'in', 'the', 'competition?']",SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1,"['basketball_match', 'university', 'acc_percent', 'Primary_conference', 'school_id']","[('basketball_match', 't2'), ('university', 't1')]","['acc_percent', 'Primary_conference', 'school_id']","as,join,limit,order,select,from",True,"['as', 'join', 'limit', 'order']",1.0,1.0
303,303,Find the list of attribute data types possessed by more than 3 attribute definitions.,Find the list of [MASK] [MASK] [MASK] possessed by more than 3 [MASK] [MASK],"['Find', 'the', 'list', 'of', '[MASK]', '[MASK]', '[MASK]', 'possessed', 'by', 'more', 'than', '3', '[MASK]', '[MASK]']",SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3,"['Attribute_Definitions', 'attribute_data_type']","[('Attribute_Definitions', '')]",['attribute_data_type'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
3559,3559,What is the average duration of songs that have mp3 format and resolution below 800?,What is the average [MASK] of [MASK] that have [MASK] [MASK] and [MASK] below 800?,"['What', 'is', 'the', 'average', '[MASK]', 'of', '[MASK]', 'that', 'have', '[MASK]', '[MASK]', 'and', '[MASK]', 'below', '800?']","SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  ""mp3"" AND T2.resolution   <  800","['song', 'files', 'mp3', 'formats', 'duration', 'f_id', 'resolution']","[('song', 'T2'), ('files', 'T1')]","['mp3', 'formats', 'duration', 'f_id', 'resolution']","where,as,join,and,avg,select,from",True,"['where', 'avg']",0.4,1.0
4491,4491,Show the leader names and locations of colleges.,Show the [MASK] [MASK] and [MASK] of [MASK],"['Show', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', '[MASK]']","SELECT Leader_Name ,  College_Location FROM college","['college', 'College_Location', 'Leader_Name']","[('college', '')]","['College_Location', 'Leader_Name']","select,from",False,[],,
7893,7893,Count the number of friends Kyle has.,Count the number of [MASK] [MASK] has.,"['Count', 'the', 'number', 'of', '[MASK]', '[MASK]', 'has.']","SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""","['Friend', 'Highschooler', 'name', 'Kyle', 'student_id', 'id']","[('Friend', 'T1'), ('Highschooler', 'T2')]","['name', 'Kyle', 'student_id', 'id']","as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",1.0,1.0
7084,7084,What is the last name of the student who has a cat that is 3 years old?,What is the last [MASK] of the [MASK] who [MASK] a cat that is 3 years old?,"['What', 'is', 'the', 'last', '[MASK]', 'of', 'the', '[MASK]', 'who', '[MASK]', 'a', 'cat', 'that', 'is', '3', 'years', 'old?']",SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',"['student', 'has_pet', 'pets', 'pettype', 'pet_age', 'lname', 'stuid', 'petid']","[('student', 'T1'), ('has_pet', 'T2'), ('pets', 'T3')]","['pettype', 'pet_age', 'lname', 'stuid', 'petid']","as,join,from,and,select,where",True,['where'],0.25,1.0
1996,1996,What is the name and rank of every company ordered by descending number of sales?,What is the name and [MASK] of every [MASK] ordered by descending number of [MASK],"['What', 'is', 'the', 'name', 'and', '[MASK]', 'of', 'every', '[MASK]', 'ordered', 'by', 'descending', 'number', 'of', '[MASK]']","SELECT company ,  rank FROM company ORDER BY Sales_billion DESC","['company', 'rank', 'Sales_billion', 'company']","[('company', '')]","['rank', 'Sales_billion', 'company']","select,order,desc,from",False,"['order', 'desc']",1.0,1.0
2115,2115,What is the name of the shipping agent of the document with id 2?,What is the [MASK] of the [MASK] [MASK] of the [MASK] with [MASK] 2?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'with', '[MASK]', '2?']",SELECT Ref_Shipping_Agents.shipping_agent_name FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Documents.document_id = 2;,"['Documents', 'Ref_Shipping_Agents', 'document_id', 'shipping_agent_code', 'shipping_agent_name']","[('Documents', ''), ('Ref_Shipping_Agents', '')]","['document_id', 'shipping_agent_code', 'shipping_agent_name']","select,join,from,where",True,['where'],0.5,1.0
6163,6163,How many distinct artists do the volumes associate to?,How many distinct [MASK] do the [MASK] associate to?,"['How', 'many', 'distinct', '[MASK]', 'do', 'the', '[MASK]', 'associate', 'to?']",SELECT COUNT(DISTINCT Artist_ID) FROM volume,"['volume', 'Artist_ID']","[('volume', '')]",['Artist_ID'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
1901,1901,Count the number of budgets in year 2001 or before whose budgeted amount is greater than 3000,Count the number of [MASK] in [MASK] 2001 or before whose [MASK] amount is greater than 3000,"['Count', 'the', 'number', 'of', '[MASK]', 'in', '[MASK]', '2001', 'or', 'before', 'whose', '[MASK]', 'amount', 'is', 'greater', 'than', '3000']",SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001,"['budget', 'YEAR', 'budgeted']","[('budget', '')]","['YEAR', 'budgeted']","count,and,where,select,from",False,"['as', 'join', 'where']",0.3333333333333333,0.3333333333333333
324,324,Which catalog content has the highest height? Give me the catalog entry name.,Which [MASK] [MASK] has the highest [MASK] Give me the [MASK] [MASK] [MASK],"['Which', '[MASK]', '[MASK]', 'has', 'the', 'highest', '[MASK]', 'Give', 'me', 'the', '[MASK]', '[MASK]', '[MASK]']",SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1,"['catalog_contents', 'height', 'catalog_entry_name']","[('catalog_contents', '')]","['height', 'catalog_entry_name']","limit,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc', 'as', 'join']",1.0,0.42857142857142855
3332,3332,What are the first names of student who only took one course?,What are the first [MASK] of [MASK] who only took one [MASK],"['What', 'are', 'the', 'first', '[MASK]', 'of', '[MASK]', 'who', 'only', 'took', 'one', '[MASK]']",SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1,"['student', 'enroll', 'stu_num', 'stu_fname']","[('student', 'T1'), ('enroll', 'T2')]","['stu_num', 'stu_fname']","as,group,join,count,having,select,from",True,['distinct'],0.0,0.0
1154,1154,What are the clean and jerk score of the body builder with the highest total score?,What are the [MASK] and [MASK] score of the [MASK] [MASK] with the highest [MASK] score?,"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'score', 'of', 'the', '[MASK]', '[MASK]', 'with', 'the', 'highest', '[MASK]', 'score?']",SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1,"['body_builder', 'Total', 'Clean_Jerk']","[('body_builder', '')]","['Total', 'Clean_Jerk']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
5529,5529,Return the names of products in the category 'Spices'.,Return the [MASK] of [MASK] in the [MASK] [MASK],"['Return', 'the', '[MASK]', 'of', '[MASK]', 'in', 'the', '[MASK]', '[MASK]']","SELECT product_name FROM products WHERE product_category_code  =  ""Spices""","['products', 'Spices', 'product_name', 'product_category_code']","[('products', '')]","['Spices', 'product_name', 'product_category_code']","select,from,where",False,"['as', 'join', 'where']",1.0,0.3333333333333333
3472,3472,What is the minimum salary in each department?,What is the minimum [MASK] in each [MASK],"['What', 'is', 'the', 'minimum', '[MASK]', 'in', 'each', '[MASK]']","SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id","['employees', 'salary', 'department_id']","[('employees', '')]","['salary', 'department_id']","select,min,from,group",False,['group'],0.5,1.0
1473,1473,"What are the names of all instructors with names that include ""dar""?","What are the [MASK] of all [MASK] with [MASK] that include ""dar""?","['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]', 'with', '[MASK]', 'that', 'include', '""dar""?']",SELECT name FROM instructor WHERE name LIKE '%dar%',"['instructor', 'name']","[('instructor', '')]",['name'],"select,like,from,where",False,"['like', 'where']",1.0,1.0
6198,6198,Count the number of artists who have had volumes.,Count the number of [MASK] who have had [MASK],"['Count', 'the', 'number', 'of', '[MASK]', 'who', 'have', 'had', '[MASK]']",SELECT COUNT(DISTINCT Artist_ID) FROM volume,"['volume', 'Artist_ID']","[('volume', '')]",['Artist_ID'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
3011,3011,What is the total number of customers who use banks in New York City?,What is the total number [MASK] [MASK] who use [MASK] in New York [MASK],"['What', 'is', 'the', 'total', 'number', '[MASK]', '[MASK]', 'who', 'use', '[MASK]', 'in', 'New', 'York', '[MASK]']",SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City',"['bank', 'city', 'no_of_customers']","[('bank', '')]","['city', 'no_of_customers']","select,sum,from,where",False,"['sum', 'where']",1.0,1.0
7075,7075,Find the first name and age of students who have a pet.,Find the first [MASK] and [MASK] of [MASK] who have a pet.,"['Find', 'the', 'first', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'who', 'have', 'a', 'pet.']","SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","['student', 'has_pet', 'fname', 'age', 'stuid']","[('student', 'T1'), ('has_pet', 'T2')]","['fname', 'age', 'stuid']","distinct,as,join,select,from",True,"['as', 'in', 'join', 'not', 'where']",0.6666666666666666,0.4
7898,7898,Show the ids of high schoolers who have friends and are also liked by someone else.,Show the [MASK] of high schoolers who have [MASK] and are also [MASK] by someone else.,"['Show', 'the', '[MASK]', 'of', 'high', 'schoolers', 'who', 'have', '[MASK]', 'and', 'are', 'also', '[MASK]', 'by', 'someone', 'else.']",SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,"['Likes', 'Friend', 'student_id', 'liked_id']","[('Likes', ''), ('Friend', '')]","['student_id', 'liked_id']","intersect,select,from",False,"['as', 'join']",0.0,0.0
150,150,What is the average bike availablility for stations not in Palo Alto?,What is the average [MASK] [MASK] for [MASK] not in [MASK] [MASK],"['What', 'is', 'the', 'average', '[MASK]', '[MASK]', 'for', '[MASK]', 'not', 'in', '[MASK]', '[MASK]']","SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  ""Palo Alto"")","['status', 'station', 'city', 'station_id', 'id', 'bikes_available', 'Palo Alto']","[('status', ''), ('station', '')]","['city', 'station_id', 'id', 'bikes_available', 'Palo Alto']","in,avg,from,not,select,where",False,"['in', 'avg', 'not', 'where']",1.0,1.0
7199,7199,What is the airport name for airport 'AKO'?,What is the [MASK] [MASK] for [MASK] 'AKO'?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'for', '[MASK]', ""'AKO'?""]","SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""","['AIRPORTS', 'AirportCode', 'AKO', 'AirportName']","[('AIRPORTS', '')]","['AirportCode', 'AKO', 'AirportName']","select,from,where",False,['where'],1.0,1.0
7885,7885,What are the names of the high schoolers and how many friends does each have?,What are the [MASK] of the [MASK] [MASK] and how many [MASK] does each have?,"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'and', 'how', 'many', '[MASK]', 'does', 'each', 'have?']","SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","['Friend', 'Highschooler', 'student_id', 'id', 'name']","[('Friend', 'T1'), ('Highschooler', 'T2')]","['student_id', 'id', 'name']","as,group,join,count,select,from",True,"['as', 'group', 'join', 'count']",1.0,1.0
1121,1121,Give the names of mountains in alphabetical order.,Give the [MASK] of [MASK] in alphabetical order.,"['Give', 'the', '[MASK]', 'of', '[MASK]', 'in', 'alphabetical', 'order.']",SELECT Name FROM mountain ORDER BY Name ASC,"['mountain', 'Name']","[('mountain', '')]",['Name'],"select,asc,order,from",False,"['asc', 'order']",1.0,1.0
4556,4556,Count the number of distinct company industries.,Count the number of distinct [MASK] [MASK],"['Count', 'the', 'number', 'of', 'distinct', '[MASK]', '[MASK]']",SELECT count(DISTINCT Industry) FROM Companies,"['Companies', 'Industry']","[('Companies', '')]",['Industry'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
4074,4074,How many teachers does the student named MADLOCK RAY have?,How many [MASK] does the [MASK] [MASK] [MASK] RAY have?,"['How', 'many', '[MASK]', 'does', 'the', '[MASK]', '[MASK]', '[MASK]', 'RAY', 'have?']","SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""MADLOCK"" AND T1.lastname  =  ""RAY""","['list', 'teachers', 'firstname', 'classroom', 'lastname', 'RAY', 'MADLOCK']","[('list', 'T1'), ('teachers', 'T2')]","['firstname', 'classroom', 'lastname', 'RAY', 'MADLOCK']","as,join,count,and,where,select,from",True,"['as', 'join', 'count', 'where']",0.8,1.0
1130,1130,Show the names of climbers and the heights of mountains they climb.,Show the [MASK] of [MASK] and the [MASK] of [MASK] they [MASK],"['Show', 'the', '[MASK]', 'of', '[MASK]', 'and', 'the', '[MASK]', 'of', '[MASK]', 'they', '[MASK]']","SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID","['mountain', 'climber', 'Name', 'Mountain_ID', 'Height']","[('mountain', 'T2'), ('climber', 'T1')]","['Name', 'Mountain_ID', 'Height']","select,join,from,as",True,"['join', 'as']",1.0,1.0
6887,6887,what are the order id and customer id of the oldest order?,what are the [MASK] [MASK] and [MASK] [MASK] of the oldest [MASK],"['what', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', 'oldest', '[MASK]']","SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1","['orders', 'customer_id', 'date_order_placed', 'order_id']","[('orders', '')]","['customer_id', 'date_order_placed', 'order_id']","select,limit,order,from",False,"['limit', 'order']",1.0,1.0
3954,3954,Find the names of nurses who are nursing an undergoing treatment.,Find the [MASK] of [MASK] who are [MASK] an [MASK] [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', 'who', 'are', '[MASK]', 'an', '[MASK]', '[MASK]']",SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID,"['nurse', 'undergoes', 'EmployeeID', 'AssistingNurse', 'name']","[('nurse', 'T2'), ('undergoes', 'T1')]","['EmployeeID', 'AssistingNurse', 'name']","distinct,as,join,select,from",True,"['as', 'join', 'where']",0.6666666666666666,0.6666666666666666
5563,5563,What are the names of the characteristics of the product 'sesame' that have the characteristic type code 'Grade'?,What are the [MASK] of the [MASK] of the [MASK] [MASK] that have the [MASK] [MASK] [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'that', 'have', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""sesame"" AND t3.characteristic_type_code  =  ""Grade""","['CHARACTERISTICS', 'products', 'product_characteristics', 'characteristic_name', 'characteristic_type_code', 'sesame', 'characteristic_id', 'product_id', 'product_name', 'Grade']","[('CHARACTERISTICS', 't3'), ('products', 't1'), ('product_characteristics', 't2')]","['characteristic_name', 'characteristic_type_code', 'sesame', 'characteristic_id', 'product_id', 'product_name', 'Grade']","as,join,from,and,select,where",True,"['as', 'join', 'where']",0.75,1.0
2797,2797,Which parties did not have any delegates in elections?,Which [MASK] did not have any delegates in [MASK],"['Which', '[MASK]', 'did', 'not', 'have', 'any', 'delegates', 'in', '[MASK]']",SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election),"['party', 'election', 'Party', 'Party_ID']","[('party', ''), ('election', '')]","['Party', 'Party_ID']","where,in,not,select,from",False,"['as', 'join', 'where']",0.3333333333333333,0.3333333333333333
2803,2803,List the names of journalists in ascending order of years working.,[MASK] the [MASK] of [MASK] in ascending order of [MASK] [MASK],"['[MASK]', 'the', '[MASK]', 'of', '[MASK]', 'in', 'ascending', 'order', 'of', '[MASK]', '[MASK]']",SELECT Name FROM journalist ORDER BY Years_working ASC,"['journalist', 'Name', 'Years_working']","[('journalist', '')]","['Name', 'Years_working']","select,asc,order,from",False,"['asc', 'order']",1.0,1.0
1048,1048,List all the model names sorted by their launch year.,List all the [MASK] [MASK] sorted by their [MASK] [MASK],"['List', 'all', 'the', '[MASK]', '[MASK]', 'sorted', 'by', 'their', '[MASK]', '[MASK]']",SELECT model_name FROM chip_model ORDER BY launch_year,"['chip_model', 'launch_year', 'model_name']","[('chip_model', '')]","['launch_year', 'model_name']","select,order,from",False,['order'],1.0,1.0
811,811,Find all the customer information in state NY.,Find all the [MASK] information in [MASK] NY.,"['Find', 'all', 'the', '[MASK]', 'information', 'in', '[MASK]', 'NY.']","SELECT * FROM CUSTOMER WHERE State  =  ""NY""","['CUSTOMER', 'State', 'NY']","[('CUSTOMER', '')]","['State', 'NY']","select,from,where",False,['where'],1.0,1.0
2709,2709,Count the number of different affected regions.,Count the number of different [MASK] [MASK],"['Count', 'the', 'number', 'of', 'different', '[MASK]', '[MASK]']",SELECT count(DISTINCT region_id) FROM affected_region,"['affected_region', 'region_id']","[('affected_region', '')]",['region_id'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
3910,3910,List the name of physicians who took some appointment.,List the [MASK] of [MASK] who took some [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'who', 'took', 'some', '[MASK]']",SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID,"['appointment', 'physician', 'EmployeeID', 'Physician', 'name']","[('appointment', 'T1'), ('physician', 'T2')]","['EmployeeID', 'Physician', 'name']","select,join,from,as",True,"['join', 'as']",1.0,1.0
1557,1557,Show the first name and last name for the customer with account name 900.,Show the [MASK] [MASK] and [MASK] [MASK] for the [MASK] with [MASK] [MASK] 900.,"['Show', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', 'with', '[MASK]', '[MASK]', '900.']","SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  ""900""","['Accounts', 'Customers', 'customer_last_name', 'customer_first_name', 'account_name', 'customer_id', '900']","[('Accounts', 'T1'), ('Customers', 'T2')]","['customer_last_name', 'customer_first_name', 'account_name', 'customer_id', '900']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
1063,1063,What are the different positions of players from UCLA or Duke colleges?,What are the different [MASK] of [MASK] from [MASK] or [MASK] [MASK],"['What', 'are', 'the', 'different', '[MASK]', 'of', '[MASK]', 'from', '[MASK]', 'or', '[MASK]', '[MASK]']","SELECT DISTINCT POSITION FROM match_season WHERE College  =  ""UCLA"" OR College  =  ""Duke""","['match_season', 'POSITION', 'College', 'UCLA', 'Duke']","[('match_season', '')]","['POSITION', 'College', 'UCLA', 'Duke']","distinct,where,or,select,from",False,['distinct'],0.3333333333333333,1.0
3154,3154,Which gender makes up the majority of the staff?,Which [MASK] makes up the majority of the [MASK],"['Which', '[MASK]', 'makes', 'up', 'the', 'majority', 'of', 'the', '[MASK]']",SELECT gender FROM staff GROUP BY gender ORDER BY count(*) DESC LIMIT 1,"['staff', 'gender']","[('staff', '')]",['gender'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
2303,2303,How many perpetrators are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM perpetrator,['perpetrator'],"[('perpetrator', '')]",[],"select,count,from",False,['count'],1.0,1.0
2982,2982,How many kinds of different ratings are listed?,How many kinds of different [MASK] are listed?,"['How', 'many', 'kinds', 'of', 'different', '[MASK]', 'are', 'listed?']",SELECT count(DISTINCT rating) FROM film,"['film', 'rating']","[('film', '')]",['rating'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
4965,4965,What is the number of students playing as a goalie?,What is the number of [MASK] [MASK] as a goalie?,"['What', 'is', 'the', 'number', 'of', '[MASK]', '[MASK]', 'as', 'a', 'goalie?']",SELECT count(*) FROM tryout WHERE pPos  =  'goalie',"['tryout', 'pPos']","[('tryout', '')]",['pPos'],"select,count,from,where",False,"['count', 'where']",1.0,1.0
7867,7867,What is the grade of each high schooler?,What is the [MASK] of each [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'each', '[MASK]', '[MASK]']",SELECT grade FROM Highschooler,"['Highschooler', 'grade']","[('Highschooler', '')]",['grade'],"select,from",False,[],,
892,892,What are all the phone numbers?,What are all the [MASK] numbers?,"['What', 'are', 'all', 'the', '[MASK]', 'numbers?']",SELECT customer_phone FROM available_policies,"['available_policies', 'customer_phone']","[('available_policies', '')]",['customer_phone'],"select,from",False,[],,
2921,2921,Give me a list of all the last names of authors sorted in alphabetical order,Give me a list of all the last [MASK] of [MASK] sorted in alphabetical order,"['Give', 'me', 'a', 'list', 'of', 'all', 'the', 'last', '[MASK]', 'of', '[MASK]', 'sorted', 'in', 'alphabetical', 'order']",SELECT lname FROM authors ORDER BY lname,"['authors', 'lname']","[('authors', '')]",['lname'],"select,order,from",False,['order'],1.0,1.0
6757,6757,Show all the faculty ranks and the number of students advised by each rank.,Show all the [MASK] [MASK] and the number of [MASK] [MASK] by each [MASK],"['Show', 'all', 'the', '[MASK]', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', '[MASK]', 'by', 'each', '[MASK]']","SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank","['Student', 'Faculty', 'rank', 'FacID', 'advisor']","[('Student', 'T2'), ('Faculty', 'T1')]","['rank', 'FacID', 'advisor']","as,group,join,count,select,from",True,"['group', 'count']",0.5,1.0
5499,5499,What are the distinct last names of the students who have president votes and have 8741 as the advisor?,What are the distinct last [MASK] of the [MASK] who have [MASK] [MASK] and have [MASK] as the [MASK],"['What', 'are', 'the', 'distinct', 'last', '[MASK]', 'of', 'the', '[MASK]', 'who', 'have', '[MASK]', '[MASK]', 'and', 'have', '[MASK]', 'as', 'the', '[MASK]']","SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  ""8741""","['VOTING_RECORD', 'STUDENT', 'STUDENT', 'StuID', 'PRESIDENT_Vote', 'Advisor', '8741', 'LName']","[('VOTING_RECORD', 'T2'), ('STUDENT', ''), ('STUDENT', 'T1')]","['StuID', 'PRESIDENT_Vote', 'Advisor', '8741', 'LName']","distinct,intersect,as,join,where,select,from",True,"['distinct', 'as', 'join', 'where']",0.8,1.0
1100,1100,Show the name of colleges that have at least two players.,Show the name of [MASK] that have at least two [MASK],"['Show', 'the', 'name', 'of', '[MASK]', 'that', 'have', 'at', 'least', 'two', '[MASK]']",SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2,"['match_season', 'College']","[('match_season', '')]",['College'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
2436,2436,What is the name of the movie produced after 2000 and directed by James Cameron?,What is the name of the [MASK] produced after 2000 and [MASK] by James Cameron?,"['What', 'is', 'the', 'name', 'of', 'the', '[MASK]', 'produced', 'after', '2000', 'and', '[MASK]', 'by', 'James', 'Cameron?']",SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000,"['Movie', 'director', 'YEAR', 'title']","[('Movie', '')]","['director', 'YEAR', 'title']","select,and,from,where",False,['where'],0.5,1.0
2984,2984,Which movies have 'Deleted Scenes' as a substring in the special feature?,Which movies have 'Deleted Scenes' as a substring in the [MASK] [MASK],"['Which', 'movies', 'have', ""'Deleted"", ""Scenes'"", 'as', 'a', 'substring', 'in', 'the', '[MASK]', '[MASK]']",SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%',"['film', 'special_features', 'title']","[('film', '')]","['special_features', 'title']","select,like,from,where",False,"['as', 'except', 'join', 'where']",0.5,0.25
6550,6550,What are the names of wines made from red grapes and with prices above 50?,What are the [MASK] of [MASK] made from [MASK] [MASK] and with [MASK] above 50?,"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'made', 'from', '[MASK]', '[MASK]', 'and', 'with', '[MASK]', 'above', '50?']","SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""Red"" AND T2.price  >  50","['WINE', 'Grapes', 'Name', 'Red', 'Color', 'Grape', 'price']","[('WINE', 'T2'), ('Grapes', 'T1')]","['Name', 'Red', 'Color', 'Grape', 'price']","as,join,from,and,select,where",True,"['as', 'join', 'where']",0.75,1.0
1315,1315,Show the locations that have at least two performances.,Show the [MASK] that have at least two [MASK],"['Show', 'the', '[MASK]', 'that', 'have', 'at', 'least', 'two', '[MASK]']",SELECT LOCATION FROM performance GROUP BY LOCATION HAVING COUNT(*)  >=  2,"['performance', 'LOCATION']","[('performance', '')]",['LOCATION'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
6938,6938,Which customers have made at least two orders? Give me each customer name and number of orders made.,Which [MASK] have made at least two [MASK] Give me each [MASK] [MASK] and number of [MASK] made.,"['Which', '[MASK]', 'have', 'made', 'at', 'least', 'two', '[MASK]', 'Give', 'me', 'each', '[MASK]', '[MASK]', 'and', 'number', 'of', '[MASK]', 'made.']","SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2","['customers', 'orders', 'customer_id', 'customer_name']","[('customers', 'T2'), ('orders', 'T1')]","['customer_id', 'customer_name']","as,group,join,count,having,select,from",True,"['as', 'join', 'group', 'count', 'having']",1.0,1.0
6859,6859,Find the number of routes for each source airport and the airport name.,Find the number of [MASK] for each source [MASK] and the [MASK] [MASK],"['Find', 'the', 'number', 'of', '[MASK]', 'for', 'each', 'source', '[MASK]', 'and', 'the', '[MASK]', '[MASK]']","SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name","['airports', 'routes', 'src_apid', 'apid', 'name']","[('airports', 'T1'), ('routes', 'T2')]","['src_apid', 'apid', 'name']","as,group,join,count,select,from",True,"['count', 'group']",0.5,1.0
5230,5230,"Which vocal type did the musician with first name ""Solveig"" played in the song with title ""A Bar in Amsterdam""?","Which [MASK] [MASK] did the musician with [MASK] [MASK] [MASK] [MASK] in the [MASK] with [MASK] ""A Bar in [MASK]","['Which', '[MASK]', '[MASK]', 'did', 'the', 'musician', 'with', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'in', 'the', '[MASK]', 'with', '[MASK]', '""A', 'Bar', 'in', '[MASK]']","SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  ""Solveig"" AND T2.title  =  ""A Bar In Amsterdam""","['songs', 'vocals', 'band', 'Solveig', 'bandmate', 'title', 'firstname', 'A Bar In Amsterdam', 'id', 'songid', 'TYPE']","[('songs', 'T2'), ('vocals', 'T1'), ('band', 'T3')]","['Solveig', 'bandmate', 'title', 'firstname', 'A Bar In Amsterdam', 'id', 'songid', 'TYPE']","as,in,join,from,and,select,where",True,"['as', 'join', 'and', 'where']",0.8,1.0
1648,1648,How many churches have a wedding in year 2016?,How many [MASK] have a [MASK] in [MASK] 2016?,"['How', 'many', '[MASK]', 'have', 'a', '[MASK]', 'in', '[MASK]', '2016?']",SELECT COUNT (DISTINCT church_id) FROM wedding WHERE YEAR  =  2016,"['wedding', 'church_id', 'YEAR']","[('wedding', '')]","['church_id', 'YEAR']","distinct,count,where,select,from",False,"['count', 'where']",0.6666666666666666,1.0
5119,5119,Find the payment method that is used the most often in all the invoices. Give me its code.,Find the [MASK] [MASK] that is used the most often in all the [MASK] Give me its [MASK],"['Find', 'the', '[MASK]', '[MASK]', 'that', 'is', 'used', 'the', 'most', 'often', 'in', 'all', 'the', '[MASK]', 'Give', 'me', 'its', '[MASK]']",SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1,"['INVOICES', 'payment_method_code']","[('INVOICES', '')]",['payment_method_code'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
3103,3103,"Find all information about student addresses, and sort by monthly rental in descending order.",Find all information about [MASK] [MASK] and sort by [MASK] [MASK] in descending order.,"['Find', 'all', 'information', 'about', '[MASK]', '[MASK]', 'and', 'sort', 'by', '[MASK]', '[MASK]', 'in', 'descending', 'order.']",SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC,"['Student_Addresses', 'monthly_rental']","[('Student_Addresses', '')]",['monthly_rental'],"select,order,desc,from",False,['order'],0.5,1.0
7976,7976,How much does the most recent treatment cost?,How much does the most recent [MASK] [MASK],"['How', 'much', 'does', 'the', 'most', 'recent', '[MASK]', '[MASK]']",SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,"['Treatments', 'date_of_treatment', 'cost_of_treatment']","[('Treatments', '')]","['date_of_treatment', 'cost_of_treatment']","limit,order,select,desc,from",False,[],,
4342,4342,"When do all the researcher role staff start to work, and when do they stop working?","When do all the researcher [MASK] [MASK] start [MASK] work, and when do they stop working?","['When', 'do', 'all', 'the', 'researcher', '[MASK]', '[MASK]', 'start', '[MASK]', 'work,', 'and', 'when', 'do', 'they', 'stop', 'working?']","SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'","['Project_Staff', 'role_code', 'date_to', 'date_from']","[('Project_Staff', '')]","['role_code', 'date_to', 'date_from']","select,from,where",False,['where'],1.0,1.0
4241,4241,Which employees do not authorize destruction for any document? Give me their employee ids.,Which [MASK] do not [MASK] [MASK] for any [MASK] Give me their [MASK] ids.,"['Which', '[MASK]', 'do', 'not', '[MASK]', '[MASK]', 'for', 'any', '[MASK]', 'Give', 'me', 'their', '[MASK]', 'ids.']",SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed,"['Documents_to_be_destroyed', 'Employees', 'employee_id', 'Destruction_Authorised_by_Employee_ID']","[('Documents_to_be_destroyed', ''), ('Employees', '')]","['employee_id', 'Destruction_Authorised_by_Employee_ID']","select,except,from",False,['except'],1.0,1.0
795,795,Which address has both members younger than 30 and members older than 40?,Which [MASK] has both [MASK] younger than 30 and [MASK] older than 40?,"['Which', '[MASK]', 'has', 'both', '[MASK]', 'younger', 'than', '30', 'and', '[MASK]', 'older', 'than', '40?']",SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40,"['member', 'age', 'address']","[('member', '')]","['age', 'address']","intersect,select,from,where",False,"['as', 'join', 'where']",0.5,0.3333333333333333
7296,7296,Count the number of distinct store locations.,Count the number of distinct store [MASK],"['Count', 'the', 'number', 'of', 'distinct', 'store', '[MASK]']",SELECT count(DISTINCT LOCATION) FROM shop,"['shop', 'LOCATION']","[('shop', '')]",['LOCATION'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
589,589,find the full name of employees who report to Nancy Edwards?,find the full [MASK] of [MASK] who [MASK] [MASK] [MASK] [MASK],"['find', 'the', 'full', '[MASK]', 'of', '[MASK]', 'who', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = ""Nancy"" AND T1.last_name = ""Edwards"";","['employees', 'employees', 'reports_to', 'Nancy', 'last_name', 'id', 'Edwards', 'first_name']","[('employees', 'T2'), ('employees', 'T1')]","['reports_to', 'Nancy', 'last_name', 'id', 'Edwards', 'first_name']","as,join,from,and,select,where",True,"['as', 'join', 'where']",0.75,1.0
6766,6766,List all the activities we have.,List all the [MASK] we have.,"['List', 'all', 'the', '[MASK]', 'we', 'have.']",SELECT activity_name FROM Activity,"['Activity', 'activity_name']","[('Activity', '')]",['activity_name'],"select,from",False,[],,
73,73,Find id of the candidate whose email is stanley.monahan@example.org?,Find [MASK] of the [MASK] whose [MASK] is [MASK],"['Find', '[MASK]', 'of', 'the', '[MASK]', 'whose', '[MASK]', 'is', '[MASK]']","SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = ""stanley.monahan@example.org""","['candidates', 'people', 'person_id', 'stanley.monahan@example.org', 'email_address', 'candidate_id']","[('candidates', 'T2'), ('people', 'T1')]","['person_id', 'stanley.monahan@example.org', 'email_address', 'candidate_id']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
460,460,What is the total number of students?,What is the total number of [MASK],"['What', 'is', 'the', 'total', 'number', 'of', '[MASK]']",SELECT count(*) FROM Student,['Student'],"[('Student', '')]",[],"select,count,from",False,['count'],1.0,1.0
486,486,Provide the last name of the youngest student.,Provide the last [MASK] of the youngest [MASK],"['Provide', 'the', 'last', '[MASK]', 'of', 'the', 'youngest', '[MASK]']",SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student),"['Student', 'age', 'LName']","[('Student', '')]","['age', 'LName']","select,min,from,where",False,"['limit', 'order']",0.0,0.0
4542,4542,Give the codes of document types that have more than 2 corresponding documents.,Give the [MASK] of [MASK] [MASK] that have more than 2 corresponding [MASK],"['Give', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', 'that', 'have', 'more', 'than', '2', 'corresponding', '[MASK]']",SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2,"['documents', 'document_type_code']","[('documents', '')]",['document_type_code'],"group,count,having,select,from",False,"['as', 'group', 'join', 'count', 'having']",1.0,0.6
2138,2138,what are the event details of the services that have the type code 'Marriage'?,what are the [MASK] [MASK] of the [MASK] that have the [MASK] [MASK] 'Marriage'?,"['what', 'are', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'that', 'have', 'the', '[MASK]', '[MASK]', ""'Marriage'?""]",SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID  =  T2.Service_ID WHERE T2.Service_Type_Code  =  'Marriage',"['EVENTS', 'Services', 'event_details', 'Service_Type_Code', 'Service_ID']","[('EVENTS', 'T1'), ('Services', 'T2')]","['event_details', 'Service_Type_Code', 'Service_ID']","as,join,from,select,where",True,"['where', 'as', 'join']",1.0,1.0
1229,1229,"Which apartments have bookings with status code ""Confirmed""? Return their apartment numbers.",Which [MASK] have [MASK] with [MASK] [MASK] [MASK] Return their [MASK] [MASK],"['Which', '[MASK]', 'have', '[MASK]', 'with', '[MASK]', '[MASK]', '[MASK]', 'Return', 'their', '[MASK]', '[MASK]']","SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  ""Confirmed""","['Apartments', 'Apartment_Bookings', 'Confirmed', 'apt_number', 'booking_status_code', 'apt_id']","[('Apartments', 'T2'), ('Apartment_Bookings', 'T1')]","['Confirmed', 'apt_number', 'booking_status_code', 'apt_id']","distinct,as,join,where,select,from",True,"['as', 'join', 'where', 'and']",0.75,0.75
492,492,What is the largest major?,What is the largest [MASK],"['What', 'is', 'the', 'largest', '[MASK]']",SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1,"['Student', 'major']","[('Student', '')]",['major'],"group,limit,count,order,select,desc,from",False,"['limit', 'order', 'desc']",0.6,1.0
4266,4266,"How many clubs does ""Linda Smith"" belong to?",How many [MASK] does [MASK] [MASK] belong to?,"['How', 'many', '[MASK]', 'does', '[MASK]', '[MASK]', 'belong', 'to?']","SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Linda"" AND t3.lname  =  ""Smith""","['student', 'member_of_club', 'club', 'Smith', 'lname', 'fname', 'clubid', 'Linda', 'stuid']","[('student', 't3'), ('member_of_club', 't2'), ('club', 't1')]","['Smith', 'lname', 'fname', 'clubid', 'Linda', 'stuid']","as,join,count,and,where,select,from",True,['where'],0.2,1.0
3693,3693,What is the total home game attendance of team Boston Red Stockings from 2000 to 2010?,What is the total [MASK] [MASK] [MASK] of [MASK] Boston Red Stockings from 2000 to 2010?,"['What', 'is', 'the', 'total', '[MASK]', '[MASK]', '[MASK]', 'of', '[MASK]', 'Boston', 'Red', 'Stockings', 'from', '2000', 'to', '2010?']",SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;,"['team', 'home_game', 'team_id', 'name', 'attendance', 'year', 'team_id_br']","[('team', 'T2'), ('home_game', 'T1')]","['team_id', 'name', 'attendance', 'year', 'team_id_br']","as,join,sum,and,between,where,select,from",True,"['as', 'join', 'sum', 'and', 'between', 'where']",1.0,1.0
8028,8028,Show the citizenship shared by singers with birth year before 1945 and after 1955.,Show the [MASK] shared by [MASK] with [MASK] [MASK] before 1945 and after 1955.,"['Show', 'the', '[MASK]', 'shared', 'by', '[MASK]', 'with', '[MASK]', '[MASK]', 'before', '1945', 'and', 'after', '1955.']",SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,"['singer', 'Citizenship', 'Birth_Year']","[('singer', '')]","['Citizenship', 'Birth_Year']","intersect,select,from,where",False,"['intersect', 'where']",1.0,1.0
2104,2104,What are all role codes?,What are all [MASK] [MASK],"['What', 'are', 'all', '[MASK]', '[MASK]']",SELECT role_code FROM ROLES;,"['ROLES', 'role_code']","[('ROLES', '')]",['role_code'],"select,from",False,['distinct'],,
6548,6548,Find the white grape used to produce wines with scores above 90.,Find the [MASK] [MASK] used to produce [MASK] with [MASK] above 90.,"['Find', 'the', '[MASK]', '[MASK]', 'used', 'to', 'produce', '[MASK]', 'with', '[MASK]', 'above', '90.']","SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""White"" AND T2.score  >  90","['GRAPES', 'WINE', 'Grape', 'score', 'White', 'Color']","[('GRAPES', 'T1'), ('WINE', 'T2')]","['Grape', 'score', 'White', 'Color']","distinct,as,join,and,where,select,from",True,"['as', 'join', 'where']",0.6,1.0
1265,1265,Return each apartment type code along with the maximum and minimum number of rooms among each type.,Return each [MASK] [MASK] [MASK] along with the maximum and minimum number of [MASK] among each [MASK],"['Return', 'each', '[MASK]', '[MASK]', '[MASK]', 'along', 'with', 'the', 'maximum', 'and', 'minimum', 'number', 'of', '[MASK]', 'among', 'each', '[MASK]']","SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code","['Apartments', 'apt_type_code', 'room_count']","[('Apartments', '')]","['apt_type_code', 'room_count']","min,group,select,from,max",False,"['min', 'max']",0.6666666666666666,1.0
6743,6743,Show all the ranks and the number of male and female faculty for each rank.,Show all the [MASK] and the number of male and female [MASK] for each [MASK],"['Show', 'all', 'the', '[MASK]', 'and', 'the', 'number', 'of', 'male', 'and', 'female', '[MASK]', 'for', 'each', '[MASK]']","SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex","['Faculty', 'sex', 'rank']","[('Faculty', '')]","['sex', 'rank']","select,count,from,group",False,"['count', 'group']",1.0,1.0
5111,5111,Tell me the name of the most pricy product.,Tell me the [MASK] of the most [MASK] [MASK],"['Tell', 'me', 'the', '[MASK]', 'of', 'the', 'most', '[MASK]', '[MASK]']",SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1,"['PRODUCTS', 'Product_Name', 'Product_Price']","[('PRODUCTS', '')]","['Product_Name', 'Product_Price']","limit,order,select,desc,from",False,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,0.42857142857142855
3418,3418,"What are the full name, hire date, salary, and department id for employees without the letter M in their first name?",What are the full [MASK] [MASK] [MASK] [MASK] and [MASK] [MASK] for [MASK] without the letter M in their [MASK] [MASK],"['What', 'are', 'the', 'full', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', '[MASK]', 'without', 'the', 'letter', 'M', 'in', 'their', '[MASK]', '[MASK]']","SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'","['employees', 'department_id', 'last_name', 'hire_date', 'salary', 'first_name']","[('employees', '')]","['department_id', 'last_name', 'hire_date', 'salary', 'first_name']","where,like,not,select,from",False,"['and', 'where']",0.3333333333333333,0.5
97,97,List the first names of people in alphabetical order?,List the [MASK] [MASK] of [MASK] in alphabetical order?,"['List', 'the', '[MASK]', '[MASK]', 'of', '[MASK]', 'in', 'alphabetical', 'order?']",SELECT first_name FROM people ORDER BY first_name,"['people', 'first_name']","[('people', '')]",['first_name'],"select,order,from",False,['order'],1.0,1.0
6970,6970,Show all publishers and the number of books for each publisher.,Show all [MASK] and the number of [MASK] for each [MASK],"['Show', 'all', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'for', 'each', '[MASK]']","SELECT publisher ,  count(*) FROM book_club GROUP BY publisher","['book_club', 'publisher']","[('book_club', '')]",['publisher'],"select,count,from,group",False,"['group', 'count']",1.0,1.0
7284,7284,Which shop has the most employees? Give me the shop name.,Which [MASK] has the most [MASK] Give me the [MASK] [MASK],"['Which', '[MASK]', 'has', 'the', 'most', '[MASK]', 'Give', 'me', 'the', '[MASK]', '[MASK]']",SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,"['hiring', 'shop', 'shop_id', 'name']","[('hiring', 't1'), ('shop', 't2')]","['shop_id', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'join', 'limit', 'order', 'desc']",0.7142857142857143,1.0
3273,3273,What are the first names of the professors who do not teach a class.,What are the first [MASK] of the [MASK] who do not teach a [MASK],"['What', 'are', 'the', 'first', '[MASK]', 'of', 'the', '[MASK]', 'who', 'do', 'not', 'teach', 'a', '[MASK]']",SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num,"['employee', 'employee', 'CLASS', 'emp_fname', 'emp_num', 'prof_num', 'emp_jobcode']","[('employee', ''), ('employee', 'T1'), ('CLASS', 'T2')]","['emp_fname', 'emp_num', 'prof_num', 'emp_jobcode']","as,except,join,where,select,from",True,"['as', 'except', 'join', 'where']",1.0,1.0
7896,7896,Show names of all high school students who do not have any friends.,Show [MASK] of all [MASK] [MASK] [MASK] who do not have any [MASK],"['Show', '[MASK]', 'of', 'all', '[MASK]', '[MASK]', '[MASK]', 'who', 'do', 'not', 'have', 'any', '[MASK]']",SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,"['Friend', 'Highschooler', 'Highschooler', 'student_id', 'id', 'name']","[('Friend', 'T1'), ('Highschooler', 'T2'), ('Highschooler', '')]","['student_id', 'id', 'name']","as,except,join,select,from",True,['except'],0.3333333333333333,1.0
2527,2527,What are the names of all movies made before 1980 or had James Cameron as the director?,What are the names of all [MASK] made before 1980 or had [MASK] [MASK] as the [MASK],"['What', 'are', 'the', 'names', 'of', 'all', '[MASK]', 'made', 'before', '1980', 'or', 'had', '[MASK]', '[MASK]', 'as', 'the', '[MASK]']","SELECT title FROM Movie WHERE director  =  ""James Cameron"" OR YEAR   <  1980","['Movie', 'director', 'YEAR', 'title', 'James Cameron']","[('Movie', '')]","['director', 'YEAR', 'title', 'James Cameron']","or,select,from,where",False,['where'],0.5,1.0
6467,6467,What are the account details with the largest value or with value having char '5' in it?,What are the [MASK] [MASK] with the largest value or with value having char '5' in it?,"['What', 'are', 'the', '[MASK]', '[MASK]', 'with', 'the', 'largest', 'value', 'or', 'with', 'value', 'having', 'char', ""'5'"", 'in', 'it?']","SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE ""%5%""","['Accounts', '%5%', 'Account_details']","[('Accounts', '')]","['%5%', 'Account_details']","like,union,from,select,where,max",False,"['limit', 'order', 'desc']",0.0,0.0
5313,5313,What are the average prices of products for each manufacturer?,What are the average [MASK] of [MASK] for each [MASK],"['What', 'are', 'the', 'average', '[MASK]', 'of', '[MASK]', 'for', 'each', '[MASK]']","SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name","['products', 'manufacturers', 'code', 'price', 'Manufacturer', 'name']","[('products', 'T1'), ('manufacturers', 'T2')]","['code', 'price', 'Manufacturer', 'name']","as,group,join,avg,select,from",True,"['group', 'avg']",0.5,1.0
1772,1772,How many distinct hometowns did these people have?,How many distinct [MASK] did these [MASK] have?,"['How', 'many', 'distinct', '[MASK]', 'did', 'these', '[MASK]', 'have?']",SELECT count(DISTINCT Hometown) FROM people,"['people', 'Hometown']","[('people', '')]",['Hometown'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
1467,1467,What are the names of the instructors in the Comp. Sci. department who earn more than 80000?,What are the [MASK] of the [MASK] in the Comp. Sci. [MASK] who earn more than 80000?,"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'in', 'the', 'Comp.', 'Sci.', '[MASK]', 'who', 'earn', 'more', 'than', '80000?']",SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000,"['instructor', 'salary', 'dept_name', 'name']","[('instructor', '')]","['salary', 'dept_name', 'name']","select,and,from,where",False,"['where', 'avg']",0.5,0.5
1749,1749,Return the names of gymnasts who did not grow up in Santo Domingo.,Return the [MASK] of [MASK] who did not grow up in [MASK] [MASK],"['Return', 'the', '[MASK]', 'of', '[MASK]', 'who', 'did', 'not', 'grow', 'up', 'in', '[MASK]', '[MASK]']","SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != ""Santo Domingo""","['people', 'gymnast', 'Hometown', 'Santo Domingo', 'Name', 'Gymnast_ID', 'People_ID']","[('people', 'T2'), ('gymnast', 'T1')]","['Hometown', 'Santo Domingo', 'Name', 'Gymnast_ID', 'People_ID']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
7810,7810,What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?,What is the total [MASK] and average [MASK] of [MASK] in the [MASK] of [MASK] [MASK] whose [MASK] is bigger than 3000 ?,"['What', 'is', 'the', 'total', '[MASK]', 'and', 'average', '[MASK]', 'of', '[MASK]', 'in', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', 'whose', '[MASK]', 'is', 'bigger', 'than', '3000', '?']","select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000","['country', 'north america', 'surfacearea', 'continent', 'population']","[('country', '')]","['north america', 'surfacearea', 'continent', 'population']","sum,from,and,avg,select,where",False,"['sum', 'avg', 'where']",0.75,1.0
1478,1478,Find courses that ran in Fall 2009 and in Spring 2010.,Find [MASK] that ran in Fall 2009 and in Spring 2010.,"['Find', '[MASK]', 'that', 'ran', 'in', 'Fall', '2009', 'and', 'in', 'Spring', '2010.']",SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010,"['SECTION', 'course_id', 'semester', 'YEAR']","[('SECTION', '')]","['course_id', 'semester', 'YEAR']","intersect,and,where,select,from",False,"['and', 'where']",0.6666666666666666,1.0
7696,7696,What are the number of votes from state 'NY' or 'CA'?,What are the number of [MASK] from [MASK] 'NY' or 'CA'?,"['What', 'are', 'the', 'number', 'of', '[MASK]', 'from', '[MASK]', ""'NY'"", 'or', ""'CA'?""]",SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA',"['votes', 'state']","[('votes', '')]",['state'],"count,where,or,select,from",False,"['count', 'where']",0.6666666666666666,1.0
7801,7801,Return the names and surface areas of the 5 largest countries.,Return the [MASK] and [MASK] [MASK] of the 5 largest [MASK],"['Return', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', '5', 'largest', '[MASK]']","SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","['country', 'Name', 'SurfaceArea']","[('country', '')]","['Name', 'SurfaceArea']","limit,order,select,desc,from",False,"['limit', 'order']",0.6666666666666666,1.0
1890,1890,List the name of the school with the smallest enrollment.,List the [MASK] of the [MASK] with the smallest [MASK],"['List', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'smallest', '[MASK]']",SELECT school_name FROM school ORDER BY enrollment LIMIT 1,"['school', 'enrollment', 'school_name']","[('school', '')]","['enrollment', 'school_name']","select,limit,order,from",False,"['asc', 'limit', 'order']",1.0,0.6666666666666666
4194,4194,"Show the description for role name ""Proof Reader"".",Show the [MASK] for [MASK] [MASK] [MASK] [MASK],"['Show', 'the', '[MASK]', 'for', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT role_description FROM ROLES WHERE role_name  =  ""Proof Reader""","['ROLES', 'Proof Reader', 'role_description', 'role_name']","[('ROLES', '')]","['Proof Reader', 'role_description', 'role_name']","select,from,where",False,['where'],1.0,1.0
3140,3140,Which engineers have never visited to maintain the assets? List the engineer first name and last name.,Which [MASK] have never [MASK] to [MASK] the assets? List the [MASK] [MASK] [MASK] and [MASK] [MASK],"['Which', '[MASK]', 'have', 'never', '[MASK]', 'to', '[MASK]', 'the', 'assets?', 'List', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]']","SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)","['Maintenance_Engineers', 'Engineer_Visits', 'engineer_id', 'first_name', 'last_name']","[('Maintenance_Engineers', ''), ('Engineer_Visits', '')]","['engineer_id', 'first_name', 'last_name']","where,in,not,select,from",False,"['except', 'where']",0.3333333333333333,0.5
6568,6568,Give the distinct names of wines made before 2000 or after 2010.,Give the distinct [MASK] of [MASK] made before 2000 or after 2010.,"['Give', 'the', 'distinct', '[MASK]', 'of', '[MASK]', 'made', 'before', '2000', 'or', 'after', '2010.']",SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010,"['WINE', 'Name', 'YEAR']","[('WINE', '')]","['Name', 'YEAR']","distinct,where,or,select,from",False,['where'],0.3333333333333333,1.0
2344,2344,Which university is in Los Angeles county and opened after 1950?,Which university is in Los [MASK] [MASK] and opened after 1950?,"['Which', 'university', 'is', 'in', 'Los', '[MASK]', '[MASK]', 'and', 'opened', 'after', '1950?']","SELECT campus FROM campuses WHERE county  =  ""Los Angeles"" AND YEAR  >  1950","['campuses', 'Los Angeles', 'campus', 'county', 'YEAR']","[('campuses', '')]","['Los Angeles', 'campus', 'county', 'YEAR']","select,and,from,where",False,"['and', 'where']",1.0,1.0
6881,6881,Find the busiest source airport that runs most number of routes in China.,Find the busiest source [MASK] that runs most number of [MASK] in China.,"['Find', 'the', 'busiest', 'source', '[MASK]', 'that', 'runs', 'most', 'number', 'of', '[MASK]', 'in', 'China.']",SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1,"['airports', 'routes', 'src_apid', 'country', 'apid', 'name']","[('airports', 'T1'), ('routes', 'T2')]","['src_apid', 'country', 'apid', 'name']","as,group,join,limit,from,count,order,select,desc,where",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc', 'where']",1.0,1.0
4443,4443,What are the different names and ages of every friend of either Dan or alice?,What are the different [MASK] and [MASK] of every [MASK] of either Dan or alice?,"['What', 'are', 'the', 'different', '[MASK]', 'and', '[MASK]', 'of', 'every', '[MASK]', 'of', 'either', 'Dan', 'or', 'alice?']","SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'","['Person', 'PersonFriend', 'friend', 'age', 'name']","[('Person', 'T1'), ('PersonFriend', 'T2')]","['friend', 'age', 'name']","distinct,as,join,where,or,select,from",True,[],,
2950,2950,"Which film has the most number of actors or actresses? List the film name, film id and description.","Which [MASK] has the most number of [MASK] or actresses? List the [MASK] name, [MASK] [MASK] and [MASK]","['Which', '[MASK]', 'has', 'the', 'most', 'number', 'of', '[MASK]', 'or', 'actresses?', 'List', 'the', '[MASK]', 'name,', '[MASK]', '[MASK]', 'and', '[MASK]']","SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1","['film_actor', 'film', 'description', 'film_id', 'title']","[('film_actor', 'T1'), ('film', 'T2')]","['description', 'film_id', 'title']","as,group,join,limit,count,order,select,desc,from",True,"['limit', 'order', 'desc', 'as', 'group', 'join', 'count']",1.0,1.0
601,601,List top 10 employee work longest in the company. List employee's first and last name.,List top 10 [MASK] work longest in the company. List [MASK] [MASK] and [MASK] [MASK],"['List', 'top', '10', '[MASK]', 'work', 'longest', 'in', 'the', 'company.', 'List', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]']","SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;","['employees', 'hire_date', 'first_name', 'last_name']","[('employees', '')]","['hire_date', 'first_name', 'last_name']","asc,limit,order,select,from",False,"['limit', 'order', 'desc']",0.6666666666666666,0.6666666666666666
7143,7143,How many cars have more than 4 cylinders?,How many [MASK] have more than 4 [MASK],"['How', 'many', '[MASK]', 'have', 'more', 'than', '4', '[MASK]']",SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;,"['CARS_DATA', 'Cylinders']","[('CARS_DATA', '')]",['Cylinders'],"select,count,from,where",False,"['count', 'group', 'having']",0.5,0.3333333333333333
3942,3942,Find the name and position of physicians who prescribe some medication whose brand is X?,Find the [MASK] and [MASK] of [MASK] who [MASK] some [MASK] whose [MASK] is X?,"['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'who', '[MASK]', 'some', '[MASK]', 'whose', '[MASK]', 'is', 'X?']","SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  ""X""","['physician', 'prescribes', 'medication', 'employeeid', 'position', 'physician', 'name', 'Brand', 'code', 'medication', 'X']","[('physician', 'T1'), ('prescribes', 'T2'), ('medication', 'T3')]","['employeeid', 'position', 'physician', 'name', 'Brand', 'code', 'medication', 'X']","distinct,as,join,where,select,from",True,"['distinct', 'as', 'join']",0.75,1.0
3221,3221,"Find the max, average, and minimum gpa of all students in each department.","Find the max, average, and minimum [MASK] of all [MASK] in each [MASK]","['Find', 'the', 'max,', 'average,', 'and', 'minimum', '[MASK]', 'of', 'all', '[MASK]', 'in', 'each', '[MASK]']","SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code","['student', 'dept_code', 'stu_gpa']","[('student', '')]","['dept_code', 'stu_gpa']","min,group,avg,select,from,max",False,"['avg', 'max']",0.5,1.0
395,395,Show origin and destination for flights with price higher than 300.,Show [MASK] and [MASK] for [MASK] with [MASK] higher than 300.,"['Show', '[MASK]', 'and', '[MASK]', 'for', '[MASK]', 'with', '[MASK]', 'higher', 'than', '300.']","SELECT origin ,  destination FROM Flight WHERE price  >  300","['Flight', 'price', 'origin', 'destination']","[('Flight', '')]","['price', 'origin', 'destination']","select,from,where",False,"['or', 'where']",1.0,0.5
426,426,What are the names of all employees who have a certificate to fly Boeing 737-800?,What are the [MASK] of all [MASK] who have a [MASK] to fly [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]', 'who', 'have', 'a', '[MASK]', 'to', 'fly', '[MASK]', '[MASK]']","SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  ""Boeing 737-800""","['Certificate', 'Aircraft', 'Employee', 'aid', 'eid', 'Boeing 737-800', 'name']","[('Certificate', 'T2'), ('Aircraft', 'T3'), ('Employee', 'T1')]","['aid', 'eid', 'Boeing 737-800', 'name']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
21,21,Return the hosts of competitions for which the theme is not Aliens?,Return the [MASK] of [MASK] for which the [MASK] is not Aliens?,"['Return', 'the', '[MASK]', 'of', '[MASK]', 'for', 'which', 'the', '[MASK]', 'is', 'not', 'Aliens?']",SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens',"['farm_competition', 'Hosts', 'Theme']","[('farm_competition', '')]","['Hosts', 'Theme']","select,from,where",False,['where'],1.0,1.0
5679,5679,How many dorms are in the database?,How many [MASK] are in the database?,"['How', 'many', '[MASK]', 'are', 'in', 'the', 'database?']",SELECT count(*) FROM dorm,['dorm'],"[('dorm', '')]",[],"select,count,from",False,['count'],1.0,1.0
7693,7693,What are the distinct states and create time of all votes?,What are the distinct [MASK] and [MASK] time of all [MASK],"['What', 'are', 'the', 'distinct', '[MASK]', 'and', '[MASK]', 'time', 'of', 'all', '[MASK]']","SELECT DISTINCT state ,  created FROM votes","['votes', 'created', 'state']","[('votes', '')]","['created', 'state']","distinct,select,from",False,['distinct'],1.0,1.0
7699,7699,"What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?","What are the [MASK] dates, [MASK] and [MASK] [MASK] of the [MASK] that were for the [MASK] [MASK] 'Tabatha Gehling'?","['What', 'are', 'the', '[MASK]', 'dates,', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'that', 'were', 'for', 'the', '[MASK]', '[MASK]', ""'Tabatha"", ""Gehling'?""]","SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'","['votes', 'contestants', 'phone_number', 'contestant_number', 'state', 'created', 'contestant_name']","[('votes', 'T2'), ('contestants', 'T1')]","['phone_number', 'contestant_number', 'state', 'created', 'contestant_name']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
1038,1038,"List the hardware model name for the phones that have screen mode type ""Text"" or RAM size greater than 32.",List the [MASK] [MASK] [MASK] for the [MASK] that have [MASK] [MASK] [MASK] [MASK] or RAM size greater than 32.,"['List', 'the', '[MASK]', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', 'that', 'have', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'or', 'RAM', 'size', 'greater', 'than', '32.']","SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T3.Type = ""Text"" OR T1.RAM_MiB  >  32;","['chip_model', 'phone', 'screen_mode', 'RAM_MiB', 'Hardware_Model_name', 'Model_name', 'Graphics_mode', 'Text', 'chip_model', 'screen_mode', 'Type']","[('chip_model', 'T1'), ('phone', 'T2'), ('screen_mode', 'T3')]","['RAM_MiB', 'Hardware_Model_name', 'Model_name', 'Graphics_mode', 'Text', 'chip_model', 'screen_mode', 'Type']","as,join,from,or,select,where",True,"['as', 'join', 'where']",0.75,1.0
2300,2300,Count the number of different companies.,Count the number of different [MASK],"['Count', 'the', 'number', 'of', 'different', '[MASK]']",SELECT count(DISTINCT Company) FROM entrepreneur,"['entrepreneur', 'Company']","[('entrepreneur', '')]",['Company'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
6382,6382,how many airports are there in each country?,how many [MASK] are there in each [MASK],"['how', 'many', '[MASK]', 'are', 'there', 'in', 'each', '[MASK]']","SELECT count(*) ,  country FROM airport GROUP BY country","['airport', 'country']","[('airport', '')]",['country'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
5960,5960,Find the tourist attractions that have parking or shopping as their feature details. What are the names of the attractions?,Find the [MASK] [MASK] that have parking or shopping as their [MASK] [MASK] What are the [MASK] of the [MASK],"['Find', 'the', '[MASK]', '[MASK]', 'that', 'have', 'parking', 'or', 'shopping', 'as', 'their', '[MASK]', '[MASK]', 'What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]']",SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping',"['Features', 'Tourist_Attractions', 'Tourist_Attraction_Features', 'Name', 'feature_Details', 'tourist_attraction_id', 'Feature_ID']","[('Features', 'T3'), ('Tourist_Attractions', 'T1'), ('Tourist_Attraction_Features', 'T2')]","['Name', 'feature_Details', 'tourist_attraction_id', 'Feature_ID']","as,union,join,from,select,where",True,"['as', 'join', 'where']",0.75,1.0
5240,5240,What is the last name of the musician that have produced the most songs?,What is the [MASK] [MASK] of the musician that have produced the most [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', 'musician', 'that', 'have', 'produced', 'the', 'most', '[MASK]']",SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1,"['Performance', 'Songs', 'Band', 'SongId', 'bandmate', 'lastname', 'id']","[('Performance', 'T1'), ('Songs', 'T3'), ('Band', 'T2')]","['SongId', 'bandmate', 'lastname', 'id']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
844,844,Find the average unit price of jazz tracks.,Find the average [MASK] [MASK] of [MASK] [MASK],"['Find', 'the', 'average', '[MASK]', '[MASK]', 'of', '[MASK]', '[MASK]']","SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Jazz""","['GENRE', 'TRACK', 'Name', 'Jazz', 'UnitPrice', 'GenreId']","[('GENRE', 'T1'), ('TRACK', 'T2')]","['Name', 'Jazz', 'UnitPrice', 'GenreId']","where,as,join,avg,select,from",True,"['where', 'as', 'join', 'avg']",1.0,1.0
3357,3357,"Show the names of clubs that have players with position ""Right Wing"".",Show the [MASK] of [MASK] that have [MASK] with [MASK] [MASK] [MASK],"['Show', 'the', '[MASK]', 'of', '[MASK]', 'that', 'have', '[MASK]', 'with', '[MASK]', '[MASK]', '[MASK]']","SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  ""Right Wing""","['player', 'club', 'Club_ID', 'Position', 'Right Wing', 'name']","[('player', 'T2'), ('club', 'T1')]","['Club_ID', 'Position', 'Right Wing', 'name']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
2893,2893,"Find the titles of the papers the author ""Stephanie Weirich"" wrote.",Find the [MASK] of the [MASK] the [MASK] [MASK] [MASK] wrote.,"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'the', '[MASK]', '[MASK]', '[MASK]', 'wrote.']","SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  ""Stephanie"" AND t1.lname  =  ""Weirich""","['papers', 'authors', 'authorship', 'Stephanie', 'paperid', 'title', 'authid', 'lname', 'fname', 'Weirich']","[('papers', 't3'), ('authors', 't1'), ('authorship', 't2')]","['Stephanie', 'paperid', 'title', 'authid', 'lname', 'fname', 'Weirich']","as,join,from,and,select,where",True,['where'],0.25,1.0
2602,2602,List how many times the number of people in the room reached the maximum occupancy of the room. The number of people include adults and kids.,List how many times the number of people in the [MASK] reached the maximum [MASK] of the [MASK] The number of people include [MASK] and kids.,"['List', 'how', 'many', 'times', 'the', 'number', 'of', 'people', 'in', 'the', '[MASK]', 'reached', 'the', 'maximum', '[MASK]', 'of', 'the', '[MASK]', 'The', 'number', 'of', 'people', 'include', '[MASK]', 'and', 'kids.']",SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;,"['Reservations', 'Rooms', 'Adults', 'RoomId', 'maxOccupancy', 'Kids', 'Room']","[('Reservations', 'T1'), ('Rooms', 'T2')]","['Adults', 'RoomId', 'maxOccupancy', 'Kids', 'Room']","as,join,count,where,select,from",True,"['as', 'join', 'count', 'order']",0.75,0.75
5316,5316,Find number of products which Sony does not make.,Find number of [MASK] which Sony does not make.,"['Find', 'number', 'of', '[MASK]', 'which', 'Sony', 'does', 'not', 'make.']",SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony'),"['products', 'products', 'manufacturers', 'code', 'Manufacturer', 'name']","[('products', ''), ('products', 'T1'), ('manufacturers', 'T2')]","['code', 'Manufacturer', 'name']","distinct,as,not,in,join,count,where,select,from",True,"['as', 'join', 'where']",0.42857142857142855,1.0
3417,3417,"display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M.",[MASK] the full [MASK] [MASK] and [MASK] [MASK] [MASK] [MASK] and [MASK] number for those [MASK] whose [MASK] [MASK] does not containing the letter M.,"['[MASK]', 'the', 'full', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'number', 'for', 'those', '[MASK]', 'whose', '[MASK]', '[MASK]', 'does', 'not', 'containing', 'the', 'letter', 'M.']","SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'","['employees', 'department_id', 'last_name', 'hire_date', 'salary', 'first_name']","[('employees', '')]","['department_id', 'last_name', 'hire_date', 'salary', 'first_name']","where,like,not,select,from",False,"['where', 'like']",0.6666666666666666,1.0
6689,6689,What is the city with the most customers?,What is the [MASK] with the most [MASK],"['What', 'is', 'the', '[MASK]', 'with', 'the', 'most', '[MASK]']",SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;,"['Customers', 'Addresses', 'city', 'address_id', 'customer_address_id']","[('Customers', 'T1'), ('Addresses', 'T2')]","['city', 'address_id', 'customer_address_id']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc']",0.7142857142857143,1.0
4346,4346,What is the total amount of grants given by each organisations? Also list the organisation id.,What is the total [MASK] of [MASK] given by each [MASK] Also list the [MASK] id.,"['What', 'is', 'the', 'total', '[MASK]', 'of', '[MASK]', 'given', 'by', 'each', '[MASK]', 'Also', 'list', 'the', '[MASK]', 'id.']","SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id","['Grants', 'grant_amount', 'organisation_id']","[('Grants', '')]","['grant_amount', 'organisation_id']","select,sum,from,group",False,"['count', 'group', 'as', 'join']",0.5,0.25
4835,4835,Show all information on the airport that has the largest number of international passengers.,Show all [MASK] on the [MASK] that has the largest number of [MASK] [MASK],"['Show', 'all', '[MASK]', 'on', 'the', '[MASK]', 'that', 'has', 'the', 'largest', 'number', 'of', '[MASK]', '[MASK]']",SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1,"['airport', 'International_Passengers']","[('airport', '')]",['International_Passengers'],"limit,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc', 'as', 'join']",1.0,0.42857142857142855
5060,5060,What are the names and location of the shops in ascending alphabetical order of name.,What are the [MASK] and [MASK] of the [MASK] in ascending alphabetical order of [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'in', 'ascending', 'alphabetical', 'order', 'of', '[MASK]']","SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC","['shop', 'LOCATION', 'Shop_Name']","[('shop', '')]","['LOCATION', 'Shop_Name']","select,asc,order,from",False,"['order', 'asc']",1.0,1.0
1669,1669,What is the name and country for the artist with most number of exhibitions?,What is the [MASK] and [MASK] for the [MASK] with most number of [MASK],"['What', 'is', 'the', '[MASK]', 'and', '[MASK]', 'for', 'the', '[MASK]', 'with', 'most', 'number', 'of', '[MASK]']","SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1","['artist', 'exhibition', 'artist_id', 'country', 'name']","[('artist', 'T2'), ('exhibition', 'T1')]","['artist_id', 'country', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
6342,6342,"Which state can address ""6862 Kaitlyn Knolls"" possibly be in?",Which [MASK] can [MASK] [MASK] [MASK] [MASK] possibly be in?,"['Which', '[MASK]', 'can', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'possibly', 'be', 'in?']","SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE ""%6862 Kaitlyn Knolls%""","['addresses', 'line_1_number_building', '%6862 Kaitlyn Knolls%', 'state_province_county']","[('addresses', '')]","['line_1_number_building', '%6862 Kaitlyn Knolls%', 'state_province_county']","select,like,from,where",False,['where'],0.5,1.0
3484,3484,What is all the information about the Marketing department?,What is all the information about the Marketing [MASK],"['What', 'is', 'all', 'the', 'information', 'about', 'the', 'Marketing', '[MASK]']",SELECT * FROM  departments WHERE department_name  =  'Marketing',"['departments', 'department_name']","[('departments', '')]",['department_name'],"select,from,where",False,['where'],1.0,1.0
5605,5605,How many stadiums are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM stadium,['stadium'],"[('stadium', '')]",[],"select,count,from",False,['count'],1.0,1.0
3502,3502,"What are the full names and hire dates for employees in the same department as someone with the first name Clara, not including Clara?",What are the full [MASK] and [MASK] [MASK] for [MASK] in the same [MASK] as someone with the [MASK] [MASK] [MASK] not including [MASK],"['What', 'are', 'the', 'full', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', '[MASK]', 'in', 'the', 'same', '[MASK]', 'as', 'someone', 'with', 'the', '[MASK]', '[MASK]', '[MASK]', 'not', 'including', '[MASK]']","SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  ""Clara"") AND first_name != ""Clara""","['employees', 'Clara', 'department_id', 'last_name', 'hire_date', 'first_name']","[('employees', '')]","['Clara', 'department_id', 'last_name', 'hire_date', 'first_name']","select,and,from,where",False,['where'],0.5,1.0
7041,7041,Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.,Find the [MASK] and [MASK] of the [MASK] which some [MASK] happened in the [MASK] of both 2014 and 2015.,"['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'which', 'some', '[MASK]', 'happened', 'in', 'the', '[MASK]', 'of', 'both', '2014', 'and', '2015.']","SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","['concert', 'stadium', 'stadium_id', 'location', 'Year', 'name']","[('concert', 'T1'), ('stadium', 'T2')]","['stadium_id', 'location', 'Year', 'name']","intersect,as,join,from,select,where",True,"['as', 'join', 'where']",0.75,1.0
7301,7301,What is the document name and template id for document with description with the letter 'w' in it?,What is the [MASK] [MASK] and [MASK] [MASK] for [MASK] with [MASK] with the letter 'w' in it?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', '[MASK]', 'with', '[MASK]', 'with', 'the', 'letter', ""'w'"", 'in', 'it?']","SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""","['Documents', '%w%', 'Document_Description', 'document_name', 'template_id']","[('Documents', '')]","['%w%', 'Document_Description', 'document_name', 'template_id']","select,like,from,where",False,['where'],0.5,1.0
7753,7753,Which regions speak Dutch or English?,Which [MASK] speak [MASK] or [MASK],"['Which', '[MASK]', 'speak', '[MASK]', 'or', '[MASK]']","SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""","['country', 'countrylanguage', 'CountryCode', 'English', 'Dutch', 'Region', 'Code', 'Language']","[('country', 'T1'), ('countrylanguage', 'T2')]","['CountryCode', 'English', 'Dutch', 'Region', 'Code', 'Language']","distinct,as,join,where,or,select,from",True,"['as', 'join', 'count', 'where']",0.6,0.75
1314,1314,Show the most common location of performances.,Show the most common [MASK] of [MASK],"['Show', 'the', 'most', 'common', '[MASK]', 'of', '[MASK]']",SELECT LOCATION FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1,"['performance', 'LOCATION']","[('performance', '')]",['LOCATION'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
7133,7133,"Which model saves the most gasoline? That is to say, have the maximum miles per gallon.","Which [MASK] saves the most gasoline? That is to say, have the maximum miles per gallon.","['Which', '[MASK]', 'saves', 'the', 'most', 'gasoline?', 'That', 'is', 'to', 'say,', 'have', 'the', 'maximum', 'miles', 'per', 'gallon.']",SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;,"['CAR_NAMES', 'CARS_DATA', 'MakeId', 'Id', 'Model', 'mpg']","[('CAR_NAMES', 'T1'), ('CARS_DATA', 'T2')]","['MakeId', 'Id', 'Model', 'mpg']","as,join,limit,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc']",0.6,0.6
1846,1846,List the names of wrestlers in descending order of days held.,List the [MASK] of [MASK] in descending order of [MASK] [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'in', 'descending', 'order', 'of', '[MASK]', '[MASK]']",SELECT Name FROM wrestler ORDER BY Days_held DESC,"['wrestler', 'Name', 'Days_held']","[('wrestler', '')]","['Name', 'Days_held']","select,order,desc,from",False,"['order', 'desc']",1.0,1.0
3088,3088,How many addresses have zip code 197?,How many [MASK] have [MASK] [MASK] 197?,"['How', 'many', '[MASK]', 'have', '[MASK]', '[MASK]', '197?']","SELECT count(*) FROM ADDRESSES WHERE zip_postcode  =  ""197""","['ADDRESSES', 'zip_postcode', '197']","[('ADDRESSES', '')]","['zip_postcode', '197']","select,count,from,where",False,"['count', 'where']",1.0,1.0
5278,5278,"What are the average, maximum and total revenues of all companies?","What are the average, maximum and total [MASK] of all companies?","['What', 'are', 'the', 'average,', 'maximum', 'and', 'total', '[MASK]', 'of', 'all', 'companies?']","SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers","['manufacturers', 'revenue']","[('manufacturers', '')]",['revenue'],"sum,avg,select,from,max",False,"['max', 'avg']",0.6666666666666666,1.0
243,243,"Return the characters for actors, ordered by age descending.",Return the [MASK] for [MASK] ordered by [MASK] descending.,"['Return', 'the', '[MASK]', 'for', '[MASK]', 'ordered', 'by', '[MASK]', 'descending.']",SELECT Character FROM actor ORDER BY age DESC,"['actor', 'age', 'Character']","[('actor', '')]","['age', 'Character']","select,order,desc,from",False,"['asc', 'order']",0.5,0.5
4162,4162,Show all calendar dates and day Numbers.,Show all [MASK] [MASK] and [MASK] [MASK],"['Show', 'all', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]']","SELECT calendar_date ,  day_Number FROM Ref_calendar","['Ref_calendar', 'calendar_date', 'day_Number']","[('Ref_calendar', '')]","['calendar_date', 'day_Number']","select,from",False,[],,
4754,4754,What are the distinct ids of customers who made an order after any order that was Cancelled?,What are the distinct [MASK] of [MASK] who made an [MASK] after any [MASK] that was [MASK],"['What', 'are', 'the', 'distinct', '[MASK]', 'of', '[MASK]', 'who', 'made', 'an', '[MASK]', 'after', 'any', '[MASK]', 'that', 'was', '[MASK]']","SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  ""Cancelled"")","['Customer_Orders', 'customer_id', 'order_date', 'order_status_code', 'Cancelled']","[('Customer_Orders', '')]","['customer_id', 'order_date', 'order_status_code', 'Cancelled']","distinct,min,where,select,from",False,"['distinct', 'as', 'join']",0.3333333333333333,0.3333333333333333
933,933,How many kinds of enzymes are there?,How many kinds of [MASK] are there?,"['How', 'many', 'kinds', 'of', '[MASK]', 'are', 'there?']",SELECT count(*) FROM enzyme,['enzyme'],"[('enzyme', '')]",[],"select,count,from",False,"['distinct', 'count']",1.0,0.5
2407,2407,"What are the names of all people, ordered by their date of birth?",What are the [MASK] [MASK] all [MASK] ordered by their [MASK] [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'all', '[MASK]', 'ordered', 'by', 'their', '[MASK]', '[MASK]', '[MASK]']",SELECT name FROM people ORDER BY date_of_birth,"['people', 'date_of_birth', 'name']","[('people', '')]","['date_of_birth', 'name']","select,order,from",False,['order'],1.0,1.0
2143,2143,List the type of the services in alphabetical order.,List the [MASK] of the [MASK] in alphabetical order.,"['List', 'the', '[MASK]', 'of', 'the', '[MASK]', 'in', 'alphabetical', 'order.']",SELECT service_type_code FROM services ORDER BY service_type_code,"['services', 'service_type_code']","[('services', '')]",['service_type_code'],"select,order,from",False,"['asc', 'order']",1.0,0.5
5751,5751,What are the names of the amenities that Smith Hall has?,What are the [MASK] of the [MASK] that Smith Hall has?,"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'Smith', 'Hall', 'has?']",SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall',"['dorm_amenity', 'dorm', 'has_amenity', 'amenid', 'dormid', 'dorm_name', 'amenity_name']","[('dorm_amenity', 'T3'), ('dorm', 'T1'), ('has_amenity', 'T2')]","['amenid', 'dormid', 'dorm_name', 'amenity_name']","as,join,from,select,where",True,"['as', 'join', 'where', 'order']",1.0,0.75
1528,1528,Which claim processing stage has the most claims? Show the claim status name.,Which [MASK] [MASK] [MASK] has the most [MASK] Show the [MASK] [MASK] [MASK],"['Which', '[MASK]', '[MASK]', '[MASK]', 'has', 'the', 'most', '[MASK]', 'Show', 'the', '[MASK]', '[MASK]', '[MASK]']",SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1,"['claims_processing', 'claims_processing_stages', 'claim_status_name', 'claim_stage_id']","[('claims_processing', 't1'), ('claims_processing_stages', 't2')]","['claim_status_name', 'claim_stage_id']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc']",0.7142857142857143,1.0
1496,1496,Show the names of people aged either 35 or 36.,Show the [MASK] of [MASK] aged either 35 or 36.,"['Show', 'the', '[MASK]', 'of', '[MASK]', 'aged', 'either', '35', 'or', '36.']",SELECT Name FROM  people WHERE Age  =  35 OR Age  =  36,"['people', 'Name', 'Age']","[('people', '')]","['Name', 'Age']","or,select,from,where",False,"['or', 'where']",1.0,1.0
6796,6796,Which faculty members are playing either Canoeing or Kayaking? Tell me their first names.,Which [MASK] members are [MASK] either Canoeing or Kayaking? Tell me their first [MASK],"['Which', '[MASK]', 'members', 'are', '[MASK]', 'either', 'Canoeing', 'or', 'Kayaking?', 'Tell', 'me', 'their', 'first', '[MASK]']",SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking',"['activity', 'Faculty_participates_in', 'Faculty', 'facID', 'actid', 'lname', 'activity_name']","[('activity', 'T3'), ('Faculty_participates_in', 'T2'), ('Faculty', 'T1')]","['facID', 'actid', 'lname', 'activity_name']","distinct,as,join,where,or,select,from",True,"['intersect', 'as', 'join', 'where']",0.6,0.75
7745,7745,What is the number of nations that use English and Dutch?,What is the number of nations that use [MASK] and [MASK],"['What', 'is', 'the', 'number', 'of', 'nations', 'that', 'use', '[MASK]', 'and', '[MASK]']","SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")","['country', 'countrylanguage', 'CountryCode', 'Name', 'English', 'Dutch', 'Code', 'Language']","[('country', 'T1'), ('countrylanguage', 'T2')]","['CountryCode', 'Name', 'English', 'Dutch', 'Code', 'Language']","intersect,as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",0.8,1.0
7994,7994,"List the email, cell phone and home phone of all the professionals.",List the [MASK] [MASK] [MASK] and [MASK] [MASK] of all the [MASK],"['List', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'all', 'the', '[MASK]']","SELECT email_address ,  cell_number ,  home_phone FROM professionals","['professionals', 'cell_number', 'email_address', 'home_phone']","[('professionals', '')]","['cell_number', 'email_address', 'home_phone']","select,from",False,[],,
2569,2569,What are the names of cities that are in counties that have a crime rate below 100?,What are the [MASK] of [MASK] that are in [MASK] that have a [MASK] [MASK] below 100?,"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'that', 'are', 'in', '[MASK]', 'that', 'have', 'a', '[MASK]', '[MASK]', 'below', '100?']",SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100),"['county_public_safety', 'city', 'county_id', 'Crime_rate', 'name']","[('county_public_safety', ''), ('city', '')]","['county_id', 'Crime_rate', 'name']","select,in,from,where",False,"['as', 'join', 'where']",0.5,0.3333333333333333
5440,5440,"Find the name of branches where have some members whose hometown is in Louisville, Kentucky and some in Hiram, Georgia.","Find the [MASK] of [MASK] where have some [MASK] whose [MASK] is in Louisville, Kentucky and some in Hiram, Georgia.","['Find', 'the', '[MASK]', 'of', '[MASK]', 'where', 'have', 'some', '[MASK]', 'whose', '[MASK]', 'is', 'in', 'Louisville,', 'Kentucky', 'and', 'some', 'in', 'Hiram,', 'Georgia.']","SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'","['member', 'membership_register_branch', 'branch', 'Hometown', 'branch_id', 'member_id', 'name']","[('member', 'T3'), ('membership_register_branch', 'T1'), ('branch', 'T2')]","['Hometown', 'branch_id', 'member_id', 'name']","intersect,as,join,from,select,where",True,"['as', 'join', 'where']",0.75,1.0
1554,1554,"What are the ids, names, dates of opening, and other details for accounts corresponding to the customer with the first name ""Meaghan""?","What are the ids, [MASK] [MASK] of [MASK] and [MASK] [MASK] for [MASK] corresponding to the [MASK] with the [MASK] [MASK] ""Meaghan""?","['What', 'are', 'the', 'ids,', '[MASK]', '[MASK]', 'of', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', '[MASK]', 'corresponding', 'to', 'the', '[MASK]', 'with', 'the', '[MASK]', '[MASK]', '""Meaghan""?']","SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'","['Accounts', 'Customers', 'other_account_details', 'account_id', 'customer_first_name', 'account_name', 'date_account_opened', 'customer_id']","[('Accounts', 'T1'), ('Customers', 'T2')]","['other_account_details', 'account_id', 'customer_first_name', 'account_name', 'date_account_opened', 'customer_id']","as,join,from,select,where",True,[],,
5528,5528,"What are the names of products with category ""Spices""?",What are the [MASK] of [MASK] with [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'with', '[MASK]', '[MASK]']","SELECT product_name FROM products WHERE product_category_code  =  ""Spices""","['products', 'Spices', 'product_name', 'product_category_code']","[('products', '')]","['Spices', 'product_name', 'product_category_code']","select,from,where",False,"['where', 'as', 'join']",1.0,0.3333333333333333
3022,3022,List the name of all different customers who have some loan sorted by their total loan amount.,List the [MASK] of all different [MASK] who have some [MASK] sorted by their total [MASK] [MASK],"['List', 'the', '[MASK]', 'of', 'all', 'different', '[MASK]', 'who', 'have', 'some', '[MASK]', 'sorted', 'by', 'their', 'total', '[MASK]', '[MASK]']",SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount),"['customer', 'loan', 'cust_id', 'amount', 'cust_name']","[('customer', 'T1'), ('loan', 'T2')]","['cust_id', 'amount', 'cust_name']","as,group,join,sum,order,select,from",True,"['order', 'as', 'join', 'where']",0.6,0.75
6809,6809,How many airlines does Russia has?,How many [MASK] does Russia has?,"['How', 'many', '[MASK]', 'does', 'Russia', 'has?']",SELECT count(*) FROM airlines WHERE country  =  'Russia',"['airlines', 'country']","[('airlines', '')]",['country'],"select,count,from,where",False,"['count', 'where']",1.0,1.0
4457,4457,What are the names of all females who are friends with Zach?,What are the [MASK] of all females who are [MASK] with Zach?,"['What', 'are', 'the', '[MASK]', 'of', 'all', 'females', 'who', 'are', '[MASK]', 'with', 'Zach?']",SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Zach' AND T1.gender  =  'female',"['Person', 'PersonFriend', 'friend', 'gender', 'name']","[('Person', 'T1'), ('PersonFriend', 'T2')]","['friend', 'gender', 'name']","as,join,from,and,select,where",True,"['and', 'where']",0.5,1.0
5552,5552,"What are the name and typical buying and selling prices of the products that have color described as ""yellow""?",What are the [MASK] and [MASK] [MASK] and [MASK] [MASK] of the [MASK] that have [MASK] [MASK] as [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'that', 'have', '[MASK]', '[MASK]', 'as', '[MASK]']","SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  ""yellow""","['ref_colors', 'products', 'typical_selling_price', 'color_code', 'typical_buying_price', 'product_name', 'color_description', 'yellow']","[('ref_colors', 't2'), ('products', 't1')]","['typical_selling_price', 'color_code', 'typical_buying_price', 'product_name', 'color_description', 'yellow']","as,join,from,select,where",True,"['where', 'as', 'join']",1.0,1.0
7599,7599,"What is the content of TV Channel with serial name ""Sky Radio""?","What is the [MASK] of TV [MASK] with [MASK] [MASK] ""Sky [MASK]","['What', 'is', 'the', '[MASK]', 'of', 'TV', '[MASK]', 'with', '[MASK]', '[MASK]', '""Sky', '[MASK]']","SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";","['TV_Channel', 'Content', 'Sky Radio', 'series_name']","[('TV_Channel', '')]","['Content', 'Sky Radio', 'series_name']","select,from,where",False,['where'],1.0,1.0
4580,4580,"How many companies are in either ""Banking"" industry or ""Conglomerate"" industry?",How many [MASK] are in either [MASK] [MASK] or [MASK] [MASK],"['How', 'many', '[MASK]', 'are', 'in', 'either', '[MASK]', '[MASK]', 'or', '[MASK]', '[MASK]']","SELECT count(*) FROM Companies WHERE Industry  =  ""Banking"" OR Industry  =  ""Conglomerate""","['Companies', 'Banking', 'Conglomerate', 'Industry']","[('Companies', '')]","['Banking', 'Conglomerate', 'Industry']","count,where,or,select,from",False,"['count', 'where']",0.6666666666666666,1.0
3223,3223,What is the name and the average gpa of department whose students have the highest average gpa?,What is the [MASK] and the average [MASK] of [MASK] whose [MASK] have the highest average gpa?,"['What', 'is', 'the', '[MASK]', 'and', 'the', 'average', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', 'have', 'the', 'highest', 'average', 'gpa?']","SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1","['student', 'department', 'stu_gpa', 'dept_code', 'dept_name']","[('student', 'T1'), ('department', 'T2')]","['stu_gpa', 'dept_code', 'dept_name']","as,group,join,limit,order,avg,select,desc,from",True,"['as', 'group', 'join', 'limit', 'order', 'avg', 'desc']",1.0,1.0
3399,3399,what is the average number of factories and maximum number of shops for manufacturers that opened before 1990.,what is the average number [MASK] [MASK] and maximum number [MASK] [MASK] for [MASK] that [MASK] before 1990.,"['what', 'is', 'the', 'average', 'number', '[MASK]', '[MASK]', 'and', 'maximum', 'number', '[MASK]', '[MASK]', 'for', '[MASK]', 'that', '[MASK]', 'before', '1990.']","SELECT max(num_of_shops) ,  avg(Num_of_Factories) FROM manufacturer WHERE open_year  <  1990","['manufacturer', 'num_of_shops', 'Num_of_Factories', 'open_year']","[('manufacturer', '')]","['num_of_shops', 'Num_of_Factories', 'open_year']","from,avg,select,where,max",False,"['where', 'min', 'avg', 'max']",1.0,0.75
3328,3328,What are the first names and offices of history professors who don't have Ph.D.s?,What are the first [MASK] and [MASK] of history [MASK] who don't have Ph.D.s?,"['What', 'are', 'the', 'first', '[MASK]', 'and', '[MASK]', 'of', 'history', '[MASK]', 'who', ""don't"", 'have', 'Ph.D.s?']","SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.'","['department', 'employee', 'professor', 'emp_fname', 'prof_high_degree', 'prof_office', 'dept_code', 'dept_name', 'emp_num']","[('department', 'T3'), ('employee', 'T2'), ('professor', 'T1')]","['emp_fname', 'prof_high_degree', 'prof_office', 'dept_code', 'dept_name', 'emp_num']","as,join,from,and,select,where",True,"['as', 'join', 'where', 'except']",0.75,0.75
2359,2359,What is the total number of degrees granted after 2000 for each Orange county campus?,What is the total number of [MASK] granted after 2000 for each [MASK] [MASK] [MASK],"['What', 'is', 'the', 'total', 'number', 'of', '[MASK]', 'granted', 'after', '2000', 'for', 'each', '[MASK]', '[MASK]', '[MASK]']","SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  ""Orange"" AND T2.year  >=  2000 GROUP BY T1.campus","['campuses', 'degrees', 'degrees', 'year', 'campus', 'id', 'county', 'Orange']","[('campuses', 'T1'), ('degrees', 'T2')]","['degrees', 'year', 'campus', 'id', 'county', 'Orange']","as,group,join,sum,and,where,select,from",True,['sum'],0.16666666666666666,1.0
7472,7472,"What are the first names of all players, and their total ranking points?",What are the [MASK] [MASK] of all [MASK] and their total [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'of', 'all', '[MASK]', 'and', 'their', 'total', '[MASK]', '[MASK]']","SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","['rankings', 'players', 'ranking_points', 'player_id', 'first_name']","[('rankings', 'T2'), ('players', 'T1')]","['ranking_points', 'player_id', 'first_name']","as,group,join,sum,select,from",True,"['as', 'join', 'sum', 'where']",0.75,0.75
1808,1808,Find the name of accounts whose checking balance is below the average checking balance.,Find the [MASK] of [MASK] whose [MASK] [MASK] is below the average [MASK] [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', '[MASK]', 'is', 'below', 'the', 'average', '[MASK]', '[MASK]']",SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking),"['checking', 'checking', 'accounts', 'custid', 'balance', 'name']","[('checking', 'T2'), ('checking', ''), ('accounts', 'T1')]","['custid', 'balance', 'name']","as,join,from,avg,select,where",True,"['avg', 'where']",0.5,1.0
2890,2890,"Find the papers which have ""Olin Shivers"" as an author.",Find the [MASK] which have [MASK] [MASK] as an [MASK],"['Find', 'the', '[MASK]', 'which', 'have', '[MASK]', '[MASK]', 'as', 'an', '[MASK]']","SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  ""Olin"" AND t1.lname  =  ""Shivers""","['papers', 'authors', 'authorship', 'Olin', 'paperid', 'title', 'authid', 'lname', 'Shivers', 'fname']","[('papers', 't3'), ('authors', 't1'), ('authorship', 't2')]","['Olin', 'paperid', 'title', 'authid', 'lname', 'Shivers', 'fname']","as,join,from,and,select,where",True,"['distinct', 'as', 'join']",0.5,0.6666666666666666
2461,2461,What are the different names of all reviewers whose ratings do not have a date field?,What are the different [MASK] of all [MASK] whose [MASK] do not have a [MASK] field?,"['What', 'are', 'the', 'different', '[MASK]', 'of', 'all', '[MASK]', 'whose', '[MASK]', 'do', 'not', 'have', 'a', '[MASK]', 'field?']","SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  ""null""","['Reviewer', 'Rating', 'null', 'rID', 'ratingDate', 'name']","[('Reviewer', 'T1'), ('Rating', 'T2')]","['null', 'rID', 'ratingDate', 'name']","distinct,as,join,where,select,from",True,"['where', 'in', 'not']",0.25,0.3333333333333333
5253,5253,What are the different names of all songs without back vocals?,What are the different names of all [MASK] without [MASK] [MASK],"['What', 'are', 'the', 'different', 'names', 'of', 'all', '[MASK]', 'without', '[MASK]', '[MASK]']","SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  ""back""","['vocals', 'songs', 'songid', 'back', 'title', 'TYPE']","[('vocals', 't1'), ('songs', 't2')]","['songid', 'back', 'title', 'TYPE']","distinct,as,except,join,where,select,from",True,['where'],0.2,1.0
6175,6175,What are the famous title of the artists associated with volumes with more than 2 weeks on top?,What are the [MASK] [MASK] of the [MASK] associated with [MASK] with more than 2 [MASK] [MASK] top?,"['What', 'are', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'associated', 'with', '[MASK]', 'with', 'more', 'than', '2', '[MASK]', '[MASK]', 'top?']",SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2,"['volume', 'artist', 'Artist_ID', 'Famous_Title', 'Weeks_on_Top']","[('volume', 'T2'), ('artist', 'T1')]","['Artist_ID', 'Famous_Title', 'Weeks_on_Top']","as,join,from,select,where",True,"['where', 'as', 'join']",1.0,1.0
4861,4861,Count the number of schools.,Count the number of [MASK],"['Count', 'the', 'number', 'of', '[MASK]']",SELECT count(*) FROM school,['school'],"[('school', '')]",[],"select,count,from",False,['count'],1.0,1.0
5902,5902,"Return the detail of the location named ""UK Gallery"".","Return the [MASK] of the [MASK] [MASK] ""UK [MASK]","['Return', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', '""UK', '[MASK]']","SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  ""UK Gallery""","['LOCATIONS', 'Other_Details', 'Location_Name', 'UK Gallery']","[('LOCATIONS', '')]","['Other_Details', 'Location_Name', 'UK Gallery']","select,from,where",False,['where'],1.0,1.0
2506,2506,Find the title and score of the movie with the lowest rating among all movies directed by each director.,Find the [MASK] and score of the [MASK] with the lowest [MASK] among all [MASK] [MASK] by each [MASK],"['Find', 'the', '[MASK]', 'and', 'score', 'of', 'the', '[MASK]', 'with', 'the', 'lowest', '[MASK]', 'among', 'all', '[MASK]', '[MASK]', 'by', 'each', '[MASK]']","SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director","['Rating', 'Movie', 'director', 'stars', 'mID', 'title']","[('Rating', 'T1'), ('Movie', 'T2')]","['director', 'stars', 'mID', 'title']","min,as,group,join,select,from",True,"['as', 'join', 'limit', 'order']",0.5,0.5
1185,1185,What are the lifespans of representatives in descending order of vote percent?,What are the [MASK] of [MASK] in descending order of [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'in', 'descending', 'order', 'of', '[MASK]', '[MASK]']",SELECT T2.Lifespan FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY Vote_Percent DESC,"['representative', 'election', 'Lifespan', 'Representative_ID', 'Vote_Percent']","[('representative', 'T2'), ('election', 'T1')]","['Lifespan', 'Representative_ID', 'Vote_Percent']","as,join,order,select,desc,from",True,"['as', 'join', 'order', 'desc']",1.0,1.0
2387,2387,How many people graduated from San Francisco State University in 2004?,How many people [MASK] from San [MASK] [MASK] [MASK] in 2004?,"['How', 'many', 'people', '[MASK]', 'from', 'San', '[MASK]', '[MASK]', '[MASK]', 'in', '2004?']","SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  ""San Francisco State University""","['discipline_enrollments', 'campuses', 'graduate', 'campus', 'id', 'San Francisco State University', 'year']","[('discipline_enrollments', 't1'), ('campuses', 't2')]","['graduate', 'campus', 'id', 'San Francisco State University', 'year']","as,join,sum,and,where,select,from",True,"['as', 'join', 'and', 'where', 'sum']",1.0,1.0
4382,4382,"List the organisation id with the maximum outcome count, and the count.","List the [MASK] [MASK] with the maximum [MASK] count, and the count.","['List', 'the', '[MASK]', '[MASK]', 'with', 'the', 'maximum', '[MASK]', 'count,', 'and', 'the', 'count.']","SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1","['Project_outcomes', 'Projects', 'project_id', 'organisation_id']","[('Project_outcomes', 'T2'), ('Projects', 'T1')]","['project_id', 'organisation_id']","as,group,join,limit,count,order,select,desc,from",True,"['limit', 'order', 'desc']",0.42857142857142855,1.0
3320,3320,What are the names of all students taking a course who received an A or C?,What are the [MASK] of all [MASK] taking a [MASK] who received an A or C?,"['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]', 'taking', 'a', '[MASK]', 'who', 'received', 'an', 'A', 'or', 'C?']","SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'","['student', 'enroll', 'stu_num', 'enroll_grade', 'stu_lname', 'stu_fname']","[('student', 'T1'), ('enroll', 'T2')]","['stu_num', 'enroll_grade', 'stu_lname', 'stu_fname']","as,join,from,or,select,where",True,"['join', 'as']",0.5,1.0
2553,2553,"What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?","What are the [MASK] percentages of cities, and the corresponding [MASK] [MASK] of the [MASK] they correspond to?","['What', 'are', 'the', '[MASK]', 'percentages', 'of', 'cities,', 'and', 'the', 'corresponding', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'they', 'correspond', 'to?']","SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID","['county_public_safety', 'city', 'County_ID', 'White', 'Crime_rate']","[('county_public_safety', 'T2'), ('city', 'T1')]","['County_ID', 'White', 'Crime_rate']","select,join,from,as",True,"['join', 'as']",1.0,1.0
5045,5045,What is the total number of students enrolled in schools without any goalies?,What is the total number of [MASK] [MASK] in schools without any [MASK],"['What', 'is', 'the', 'total', 'number', 'of', '[MASK]', '[MASK]', 'in', 'schools', 'without', 'any', '[MASK]']","SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  ""goalie"")","['tryout', 'college', 'pPos', 'enr', 'cName', 'goalie']","[('tryout', ''), ('college', '')]","['pPos', 'enr', 'cName', 'goalie']","where,in,sum,not,select,from",False,"['where', 'in', 'count', 'not']",0.75,0.75
5699,5699,What are the names and types of the dorms that have a capacity greater than 300 or less than 100?,What are the [MASK] and types of the [MASK] that have a [MASK] greater than 300 or less than 100?,"['What', 'are', 'the', '[MASK]', 'and', 'types', 'of', 'the', '[MASK]', 'that', 'have', 'a', '[MASK]', 'greater', 'than', '300', 'or', 'less', 'than', '100?']","SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100","['dorm', 'dorm_name', 'gender', 'student_capacity']","[('dorm', '')]","['dorm_name', 'gender', 'student_capacity']","or,select,from,where",False,"['where', 'as', 'join']",0.5,0.3333333333333333
4235,4235,List the names of the employees who authorized the destruction of documents and the employees who destroyed the corresponding documents.,List the [MASK] of the [MASK] who [MASK] the [MASK] of [MASK] and the [MASK] who [MASK] the corresponding [MASK],"['List', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', '[MASK]', 'the', '[MASK]', 'of', '[MASK]', 'and', 'the', '[MASK]', 'who', '[MASK]', 'the', 'corresponding', '[MASK]']","SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;","['Employees', 'Documents_to_be_destroyed', 'Employees', 'Destroyed_by_Employee_ID', 'employee_id', 'employee_name', 'Destruction_Authorised_by_Employee_ID']","[('Employees', 'T2'), ('Documents_to_be_destroyed', 'T1'), ('Employees', 'T3')]","['Destroyed_by_Employee_ID', 'employee_id', 'employee_name', 'Destruction_Authorised_by_Employee_ID']","select,join,from,as",True,"['as', 'join', 'where']",1.0,0.6666666666666666
3925,3925,What is the id of the patient who stayed in room 111 most recently?,What is the [MASK] of the [MASK] who [MASK] in [MASK] 111 most recently?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', '[MASK]', 'in', '[MASK]', '111', 'most', 'recently?']",SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1,"['stay', 'staystart', 'patient', 'room']","[('stay', '')]","['staystart', 'patient', 'room']","limit,order,where,select,desc,from",False,"['limit', 'order', 'desc']",0.75,1.0
4944,4944,What is the total enrollment number of all colleges?,What is the total [MASK] number of all [MASK],"['What', 'is', 'the', 'total', '[MASK]', 'number', 'of', 'all', '[MASK]']",SELECT sum(enr) FROM College,"['College', 'enr']","[('College', '')]",['enr'],"select,sum,from",False,['sum'],1.0,1.0
5783,5783,What are the emails and phone numbers of custoemrs who have never filed a complaint?,What are the [MASK] and [MASK] [MASK] of [MASK] who have never filed a [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', '[MASK]', 'who', 'have', 'never', 'filed', 'a', '[MASK]']","SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)","['complaints', 'customers', 'customer_id', 'phone_number', 'email_address']","[('complaints', ''), ('customers', '')]","['customer_id', 'phone_number', 'email_address']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
7169,7169,What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?,What is the maximum miles per gallon of the [MASK] with 8 [MASK] or produced before 1980 ?,"['What', 'is', 'the', 'maximum', 'miles', 'per', 'gallon', 'of', 'the', '[MASK]', 'with', '8', '[MASK]', 'or', 'produced', 'before', '1980', '?']",select max(mpg) from cars_data where cylinders  =  8 or year  <  1980,"['cars_data', 'cylinders', 'year', 'mpg']","[('cars_data', '')]","['cylinders', 'year', 'mpg']","from,or,select,where,max",False,"['where', 'avg']",0.3333333333333333,0.5
1760,1760,What are the hometowns of gymnasts and the corresponding number of gymnasts?,What are the [MASK] of [MASK] and the corresponding number of [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'and', 'the', 'corresponding', 'number', 'of', '[MASK]']","SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown","['people', 'gymnast', 'Hometown', 'Gymnast_ID', 'People_ID']","[('people', 'T2'), ('gymnast', 'T1')]","['Hometown', 'Gymnast_ID', 'People_ID']","as,group,join,count,select,from",True,"['count', 'group']",0.5,1.0
3279,3279,What is department name and office for the professor whose last name is Heffington?,What is [MASK] [MASK] and [MASK] for the [MASK] whose last [MASK] is Heffington?,"['What', 'is', '[MASK]', '[MASK]', 'and', '[MASK]', 'for', 'the', '[MASK]', 'whose', 'last', '[MASK]', 'is', 'Heffington?']","SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'","['professor', 'employee', 'department', 'prof_office', 'dept_code', 'emp_lname', 'dept_name', 'emp_num']","[('professor', 'T2'), ('employee', 'T1'), ('department', 'T3')]","['prof_office', 'dept_code', 'emp_lname', 'dept_name', 'emp_num']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
1965,1965,What is the product description of the product booked with an amount of 102.76?,What is the [MASK] [MASK] of the [MASK] [MASK] with an [MASK] of 102.76?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'with', 'an', '[MASK]', 'of', '102.76?']",SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.booked_amount  =  102.76,"['products_booked', 'products_for_hire', 'product_id', 'product_description', 'booked_amount']","[('products_booked', 'T1'), ('products_for_hire', 'T2')]","['product_id', 'product_description', 'booked_amount']","as,join,from,select,where",True,"['where', 'as', 'join']",1.0,1.0
7797,7797,What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?,What are the different [MASK] [MASK] and what is the total [MASK] of each for [MASK] [MASK] that have an average [MASK] [MASK] greater than 72?,"['What', 'are', 'the', 'different', '[MASK]', '[MASK]', 'and', 'what', 'is', 'the', 'total', '[MASK]', 'of', 'each', 'for', '[MASK]', '[MASK]', 'that', 'have', 'an', 'average', '[MASK]', '[MASK]', 'greater', 'than', '72?']","SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","['country', 'Population', 'GovernmentForm', 'LifeExpectancy']","[('country', '')]","['Population', 'GovernmentForm', 'LifeExpectancy']","group,sum,having,avg,select,from",False,"['group', 'sum', 'having', 'avg']",1.0,1.0
5234,5234,Find all the vocal types.,Find all the [MASK] [MASK],"['Find', 'all', 'the', '[MASK]', '[MASK]']",SELECT DISTINCT TYPE FROM vocals,"['vocals', 'TYPE']","[('vocals', '')]",['TYPE'],"distinct,select,from",False,['where'],0.0,0.0
2948,2948,Which film has the highest rental rate? And what is the rate?,Which [MASK] has the highest [MASK] [MASK] And what is the [MASK],"['Which', '[MASK]', 'has', 'the', 'highest', '[MASK]', '[MASK]', 'And', 'what', 'is', 'the', '[MASK]']","SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1","['film', 'rental_rate', 'title']","[('film', '')]","['rental_rate', 'title']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
6875,6875,Find the number of routes from the United States to Canada.,Find the number of [MASK] from the United States to Canada.,"['Find', 'the', 'number', 'of', '[MASK]', 'from', 'the', 'United', 'States', 'to', 'Canada.']",SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States'),"['routes', 'airports', 'dst_apid', 'country', 'apid', 'src_apid']","[('routes', ''), ('airports', '')]","['dst_apid', 'country', 'apid', 'src_apid']","in,count,and,where,select,from",False,"['count', 'where']",0.5,1.0
7864,7864,Show the names and grades of each high schooler.,Show the [MASK] and [MASK] of each [MASK] [MASK],"['Show', 'the', '[MASK]', 'and', '[MASK]', 'of', 'each', '[MASK]', '[MASK]']","SELECT name ,  grade FROM Highschooler","['Highschooler', 'grade', 'name']","[('Highschooler', '')]","['grade', 'name']","select,from",False,"['join', 'as']",,
6408,6408,Count the number of documents with the type code BK that correspond to each product id.,Count the number of [MASK] with the [MASK] [MASK] BK that correspond to each product id.,"['Count', 'the', 'number', 'of', '[MASK]', 'with', 'the', '[MASK]', '[MASK]', 'BK', 'that', 'correspond', 'to', 'each', 'product', 'id.']","SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  ""BK"" GROUP BY project_id","['Documents', 'BK', 'project_id', 'document_type_code']","[('Documents', '')]","['BK', 'project_id', 'document_type_code']","group,count,where,select,from",False,"['group', 'count']",0.6666666666666666,1.0
6418,6418,How many documents are there of each type?,How many [MASK] are there of each [MASK],"['How', 'many', '[MASK]', 'are', 'there', 'of', 'each', '[MASK]']","SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code","['Documents', 'document_type_code']","[('Documents', '')]",['document_type_code'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
6039,6039,Show all game ids and the number of hours played.,Show all [MASK] [MASK] and the number of [MASK] [MASK],"['Show', 'all', '[MASK]', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', '[MASK]']","SELECT gameid ,  sum(hours_played) FROM Plays_games GROUP BY gameid","['Plays_games', 'gameid', 'hours_played']","[('Plays_games', '')]","['gameid', 'hours_played']","select,sum,from,group",False,"['count', 'group']",0.5,0.5
3142,3142,When was the first asset acquired?,When was the first [MASK] [MASK],"['When', 'was', 'the', 'first', '[MASK]', '[MASK]']",SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1,"['Assets', 'asset_acquired_date']","[('Assets', '')]",['asset_acquired_date'],"asc,limit,order,select,from",False,"['asc', 'limit', 'order']",1.0,1.0
5760,5760,Find the name of dorms that do not have amenity TV Lounge.,Find the [MASK] of [MASK] that do not have [MASK] TV Lounge.,"['Find', 'the', '[MASK]', 'of', '[MASK]', 'that', 'do', 'not', 'have', '[MASK]', 'TV', 'Lounge.']",SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge',"['dorm_amenity', 'dorm', 'dorm', 'has_amenity', 'amenid', 'dormid', 'dorm_name', 'amenity_name']","[('dorm_amenity', 'T3'), ('dorm', ''), ('dorm', 'T1'), ('has_amenity', 'T2')]","['amenid', 'dormid', 'dorm_name', 'amenity_name']","as,except,join,where,select,from",True,"['as', 'join', 'where']",0.75,1.0
444,444,What are the different allergy types?,What are the different [MASK] [MASK],"['What', 'are', 'the', 'different', '[MASK]', '[MASK]']",SELECT DISTINCT allergytype FROM Allergy_type,"['Allergy_type', 'allergytype']","[('Allergy_type', '')]",['allergytype'],"distinct,select,from",False,['distinct'],1.0,1.0
2087,2087,"Show the names of pilots from team ""Bradley"" or ""Fordham"".",Show the [MASK] of [MASK] from [MASK] [MASK] or [MASK],"['Show', 'the', '[MASK]', 'of', '[MASK]', 'from', '[MASK]', '[MASK]', 'or', '[MASK]']","SELECT Pilot_name FROM pilot WHERE Team  =  ""Bradley"" OR Team  =  ""Fordham""","['pilot', 'Pilot_name', 'Fordham', 'Team', 'Bradley']","[('pilot', '')]","['Pilot_name', 'Fordham', 'Team', 'Bradley']","or,select,from,where",False,"['or', 'where']",1.0,1.0
5218,5218,Which song has the most vocals?,Which [MASK] has the most [MASK],"['Which', '[MASK]', 'has', 'the', 'most', '[MASK]']",SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1,"['songs', 'vocals', 'songid', 'title']","[('songs', 'T2'), ('vocals', 'T1')]","['songid', 'title']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc']",0.7142857142857143,1.0
1264,1264,"Show each apartment type code, and the maximum and minimum number of rooms for each type.",Show each [MASK] [MASK] [MASK] and the maximum and minimum number of [MASK] for each [MASK],"['Show', 'each', '[MASK]', '[MASK]', '[MASK]', 'and', 'the', 'maximum', 'and', 'minimum', 'number', 'of', '[MASK]', 'for', 'each', '[MASK]']","SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code","['Apartments', 'apt_type_code', 'room_count']","[('Apartments', '')]","['apt_type_code', 'room_count']","min,group,select,from,max",False,"['group', 'count']",0.3333333333333333,0.5
6165,6165,Please show the date of ceremony of the volumes that last more than 2 weeks on top.,Please show the [MASK] [MASK] [MASK] [MASK] the [MASK] that last more than 2 [MASK] [MASK] top.,"['Please', 'show', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'the', '[MASK]', 'that', 'last', 'more', 'than', '2', '[MASK]', '[MASK]', 'top.']",SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2,"['volume', 'music_festival', 'Volume_ID', 'Weeks_on_Top', 'Date_of_ceremony', 'Volume']","[('volume', 'T2'), ('music_festival', 'T1')]","['Volume_ID', 'Weeks_on_Top', 'Date_of_ceremony', 'Volume']","as,join,from,select,where",True,"['group', 'count', 'having']",0.0,0.0
2753,2753,Who are the lieutenant governor and comptroller from the democratic party?,Who are the [MASK] [MASK] and [MASK] from the [MASK] [MASK],"['Who', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'from', 'the', '[MASK]', '[MASK]']","SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  ""Democratic""","['party', 'Lieutenant_Governor', 'Democratic', 'Comptroller', 'Party']","[('party', '')]","['Lieutenant_Governor', 'Democratic', 'Comptroller', 'Party']","select,from,where",False,"['where', 'as', 'join']",1.0,0.3333333333333333
5534,5534,"Find the number of products with category ""Spices"" and typically sold above 1000.",Find the number of [MASK] with [MASK] [MASK] and [MASK] sold above 1000.,"['Find', 'the', 'number', 'of', '[MASK]', 'with', '[MASK]', '[MASK]', 'and', '[MASK]', 'sold', 'above', '1000.']","SELECT count(*) FROM products WHERE product_category_code  =  ""Spices"" AND typical_buying_price  >  1000","['products', 'Spices', 'product_category_code', 'typical_buying_price']","[('products', '')]","['Spices', 'product_category_code', 'typical_buying_price']","count,and,where,select,from",False,"['as', 'join', 'count', 'where']",0.6666666666666666,0.5
2565,2565,What are the names of counties that do not contain any cities?,What are the [MASK] of [MASK] that do not contain any cities?,"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'that', 'do', 'not', 'contain', 'any', 'cities?']",SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city),"['county_public_safety', 'city', 'Name', 'County_ID']","[('county_public_safety', ''), ('city', '')]","['Name', 'County_ID']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
5269,5269,"What are the names of all the songs whose album is under the label of ""Universal Music Group""?",What are the names of all the [MASK] whose [MASK] is under the [MASK] of [MASK] [MASK] [MASK],"['What', 'are', 'the', 'names', 'of', 'all', 'the', '[MASK]', 'whose', '[MASK]', 'is', 'under', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', '[MASK]']","SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  ""Universal Music Group""","['songs', 'tracklists', 'albums', 'albumid', 'title', 'Universal Music Group', 'label', 'aid', 'songid']","[('songs', 'T3'), ('tracklists', 'T2'), ('albums', 'T1')]","['albumid', 'title', 'Universal Music Group', 'label', 'aid', 'songid']","as,group,join,from,select,where",True,"['as', 'join', 'where']",0.75,1.0
5945,5945,Show the transportation method most people choose to get to tourist attractions.,Show the [MASK] method most people choose [MASK] [MASK] [MASK] [MASK] [MASK],"['Show', 'the', '[MASK]', 'method', 'most', 'people', 'choose', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]']",SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1,"['Tourist_Attractions', 'How_to_Get_There']","[('Tourist_Attractions', '')]",['How_to_Get_There'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
5767,5767,What are the amenities in the dorm that a student who has the last name of Smith lives in?,What are the [MASK] [MASK] the [MASK] that a [MASK] who [MASK] the last [MASK] of Smith [MASK] in?,"['What', 'are', 'the', '[MASK]', '[MASK]', 'the', '[MASK]', 'that', 'a', '[MASK]', 'who', '[MASK]', 'the', 'last', '[MASK]', 'of', 'Smith', '[MASK]', 'in?']",SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith',"['has_amenity', 'student', 'dorm_amenity', 'dorm', 'lives_in', 'amenity_name', 'lname', 'amenid', 'dormid', 'stuid']","[('has_amenity', 'T2'), ('student', 'T5'), ('dorm_amenity', 'T3'), ('dorm', 'T1'), ('lives_in', 'T4')]","['amenity_name', 'lname', 'amenid', 'dormid', 'stuid']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
4450,4450,Find the person who has exactly one friend.,Find the [MASK] who has exactly one [MASK],"['Find', 'the', '[MASK]', 'who', 'has', 'exactly', 'one', '[MASK]']",SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1,"['PersonFriend', 'name']","[('PersonFriend', '')]",['name'],"group,count,having,select,from",False,"['as', 'group', 'join', 'count', 'having']",1.0,0.6
3929,3929,Return the name of each physician and the number of patients he or she treats.,Return the [MASK] of each [MASK] and the number of [MASK] he or she treats.,"['Return', 'the', '[MASK]', 'of', 'each', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'he', 'or', 'she', 'treats.']","SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid","['patient', 'physician', 'employeeid', 'PCP', 'name']","[('patient', 'T2'), ('physician', 'T1')]","['employeeid', 'PCP', 'name']","as,group,join,count,select,from",True,"['as', 'group', 'join', 'count']",1.0,1.0
6441,6441,List all budget type codes and descriptions.,List all [MASK] [MASK] [MASK] and [MASK],"['List', 'all', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]']","SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes","['Ref_budget_codes', 'budget_type_description', 'budget_type_code']","[('Ref_budget_codes', '')]","['budget_type_description', 'budget_type_code']","select,from",False,[],,
6036,6036,What are the ids of all students who are not video game players?,What are the [MASK] of all [MASK] who are not video [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]', 'who', 'are', 'not', 'video', '[MASK]', '[MASK]']",SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games,"['Student', 'Plays_games', 'StuID']","[('Student', ''), ('Plays_games', '')]",['StuID'],"select,except,from",False,[],,
1076,1076,What are the distinct positions of the players from a country whose capital is Dublin?,What are the distinct [MASK] of the [MASK] from a [MASK] whose [MASK] is [MASK],"['What', 'are', 'the', 'distinct', '[MASK]', 'of', 'the', '[MASK]', 'from', 'a', '[MASK]', 'whose', '[MASK]', 'is', '[MASK]']","SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  ""Dublin""","['country', 'match_season', 'Country_id', 'Country', 'Dublin', 'Position', 'Capital']","[('country', 'T1'), ('match_season', 'T2')]","['Country_id', 'Country', 'Dublin', 'Position', 'Capital']","distinct,as,join,where,select,from",True,"['distinct', 'as', 'join']",0.75,1.0
2887,2887,"Find the number of papers published by authors from the institution ""Tokohu University"".",Find the number of [MASK] published by [MASK] from the [MASK] [MASK] [MASK],"['Find', 'the', 'number', 'of', '[MASK]', 'published', 'by', '[MASK]', 'from', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  ""Tokohu University""","['papers', 'inst', 'authorship', 'Tokohu University', 'paperid', 'title', 'name', 'instid']","[('papers', 't1'), ('inst', 't3'), ('authorship', 't2')]","['Tokohu University', 'paperid', 'title', 'name', 'instid']","distinct,as,join,count,where,select,from",True,"['distinct', 'as', 'join', 'where']",0.8,1.0
3270,3270,What is the name of the department with the fewest professors?,What is the [MASK] of the [MASK] with the fewest [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'fewest', '[MASK]']",SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1,"['department', 'professor', 'dept_code', 'dept_name']","[('department', 'T2'), ('professor', 'T1')]","['dept_code', 'dept_name']","as,group,join,limit,count,order,select,from",True,"['asc', 'limit', 'order', 'group', 'count']",0.6666666666666666,0.8
7068,7068,"What type of pet is the youngest animal, and how much does it weigh?","What [MASK] of [MASK] is the youngest animal, and how much does it [MASK]","['What', '[MASK]', 'of', '[MASK]', 'is', 'the', 'youngest', 'animal,', 'and', 'how', 'much', 'does', 'it', '[MASK]']","SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","['pets', 'pettype', 'pet_age', 'weight']","[('pets', '')]","['pettype', 'pet_age', 'weight']","select,limit,order,from",False,"['asc', 'limit', 'order']",1.0,0.6666666666666666
6266,6266,Find the name of the ships that are steered by both a captain with Midshipman rank and a captain with Lieutenant rank.,Find the [MASK] of the [MASK] that are steered by both a [MASK] with [MASK] [MASK] and a [MASK] with Lieutenant [MASK],"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'are', 'steered', 'by', 'both', 'a', '[MASK]', 'with', '[MASK]', '[MASK]', 'and', 'a', '[MASK]', 'with', 'Lieutenant', '[MASK]']",SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant',"['captain', 'ship', 'ship_id', 'rank', 'name']","[('captain', 't2'), ('ship', 't1')]","['ship_id', 'rank', 'name']","intersect,as,join,from,select,where",True,"['where', 'intersect']",0.5,1.0
1227,1227,"Tell me the booking status code for the apartment with number ""Suite 634"".","Tell me the [MASK] [MASK] [MASK] for the [MASK] with [MASK] [MASK] 634"".","['Tell', 'me', 'the', '[MASK]', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', 'with', '[MASK]', '[MASK]', '634"".']","SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  ""Suite 634""","['Apartments', 'Apartment_Bookings', 'Suite 634', 'apt_number', 'booking_status_code', 'apt_id']","[('Apartments', 'T2'), ('Apartment_Bookings', 'T1')]","['Suite 634', 'apt_number', 'booking_status_code', 'apt_id']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
5187,5187,"What are the names of all songs produced by the artist with the first name ""Marianne""?",What are the [MASK] of all [MASK] produced by the artist with the [MASK] [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]', 'produced', 'by', 'the', 'artist', 'with', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  ""Marianne""","['Performance', 'Songs', 'Band', 'Marianne', 'bandmate', 'Title', 'firstname', 'SongId', 'id']","[('Performance', 'T1'), ('Songs', 'T3'), ('Band', 'T2')]","['Marianne', 'bandmate', 'Title', 'firstname', 'SongId', 'id']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
7391,7391,What is the hometown of the youngest teacher?,What is the [MASK] of the youngest [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', 'youngest', '[MASK]']",SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,"['teacher', 'Hometown', 'Age']","[('teacher', '')]","['Hometown', 'Age']","asc,limit,order,select,from",False,"['asc', 'limit', 'order']",1.0,1.0
1151,1151,List the total scores of body builders in ascending order.,List the [MASK] scores of [MASK] [MASK] in ascending order.,"['List', 'the', '[MASK]', 'scores', 'of', '[MASK]', '[MASK]', 'in', 'ascending', 'order.']",SELECT Total FROM body_builder ORDER BY Total ASC,"['body_builder', 'Total']","[('body_builder', '')]",['Total'],"select,asc,order,from",False,"['asc', 'order']",1.0,1.0
3727,3727,What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.,What is the [MASK] of each [MASK] [MASK] and the number of [MASK] taken by it? Order the result by the count of [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'each', '[MASK]', '[MASK]', 'and', 'the', 'number', 'of', '[MASK]', 'taken', 'by', 'it?', 'Order', 'the', 'result', 'by', 'the', 'count', 'of', '[MASK]']","SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)","['camera_lens', 'photos', 'camera_lens_id', 'id', 'name']","[('camera_lens', 'T1'), ('photos', 'T2')]","['camera_lens_id', 'id', 'name']","as,group,join,count,order,select,from",True,"['as', 'group', 'join', 'count']",0.8,1.0
5958,5958,Find the names of the tourist attractions that is either accessible by walk or at address 660 Shea Crescent.,Find the [MASK] of the [MASK] [MASK] that is [MASK] accessible by [MASK] or at [MASK] 660 [MASK] [MASK],"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'that', 'is', '[MASK]', 'accessible', 'by', '[MASK]', 'or', 'at', '[MASK]', '660', '[MASK]', '[MASK]']","SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  ""660 Shea Crescent"" OR T2.How_to_Get_There  =  ""walk""","['Tourist_Attractions', 'Locations', 'walk', 'How_to_Get_There', 'Name', 'Location_ID', '660 Shea Crescent', 'Address']","[('Tourist_Attractions', 'T2'), ('Locations', 'T1')]","['walk', 'How_to_Get_There', 'Name', 'Location_ID', '660 Shea Crescent', 'Address']","as,join,from,or,select,where",True,"['as', 'join', 'or', 'where']",1.0,1.0
4030,4030,Find the last names of students studying in room 111.,Find the [MASK] [MASK] of [MASK] [MASK] in [MASK] 111.,"['Find', 'the', '[MASK]', '[MASK]', 'of', '[MASK]', '[MASK]', 'in', '[MASK]', '111.']",SELECT lastname FROM list WHERE classroom  =  111,"['list', 'classroom', 'lastname']","[('list', '')]","['classroom', 'lastname']","select,from,where",False,['where'],1.0,1.0
3934,3934,Find the number of rooms for different block code?,Find the number of [MASK] for different [MASK] [MASK],"['Find', 'the', 'number', 'of', '[MASK]', 'for', 'different', '[MASK]', '[MASK]']","SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode","['BLOCK', 'room', 'blockfloor', 'blockcode']","[('BLOCK', 'T1'), ('room', 'T2')]","['blockfloor', 'blockcode']","as,group,join,count,and,select,from",True,"['count', 'group']",0.4,1.0
7307,7307,How many documents are using the template with type code 'PPT'?,How many [MASK] are using the [MASK] with [MASK] [MASK] 'PPT'?,"['How', 'many', '[MASK]', 'are', 'using', 'the', '[MASK]', 'with', '[MASK]', '[MASK]', ""'PPT'?""]",SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',"['Documents', 'Templates', 'Template_Type_Code', 'Template_ID']","[('Documents', 'T1'), ('Templates', 'T2')]","['Template_Type_Code', 'Template_ID']","as,join,count,where,select,from",True,"['where', 'distinct', 'count']",0.5,0.6666666666666666
417,417,Show names for all aircraft with at least two flights.,Show [MASK] for all [MASK] with at least two [MASK],"['Show', '[MASK]', 'for', 'all', '[MASK]', 'with', 'at', 'least', 'two', '[MASK]']",SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2,"['Flight', 'Aircraft', 'aid', 'name']","[('Flight', 'T1'), ('Aircraft', 'T2')]","['aid', 'name']","as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'count', 'having']",1.0,1.0
5062,5062,How many different software platforms are there for devices?,How many different [MASK] [MASK] are there for [MASK],"['How', 'many', 'different', '[MASK]', '[MASK]', 'are', 'there', 'for', '[MASK]']",SELECT count(DISTINCT Software_Platform) FROM device,"['device', 'Software_Platform']","[('device', '')]",['Software_Platform'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
1242,1242,"Show the total number of rooms of the apartments in the building with short name ""Columbus Square"".",Show the total number of [MASK] of the [MASK] in the [MASK] with [MASK] [MASK] [MASK] [MASK],"['Show', 'the', 'total', 'number', 'of', '[MASK]', 'of', 'the', '[MASK]', 'in', 'the', '[MASK]', 'with', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  ""Columbus Square""","['Apartment_Buildings', 'Apartments', 'Columbus Square', 'building_id', 'building_short_name', 'room_count']","[('Apartment_Buildings', 'T1'), ('Apartments', 'T2')]","['Columbus Square', 'building_id', 'building_short_name', 'room_count']","as,join,sum,where,select,from",True,"['group', 'count']",0.0,0.0
5666,5666,What are the name and phone of the customer with the most ordered product quantity?,What are the [MASK] and [MASK] of the [MASK] with the most [MASK] product [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'most', '[MASK]', 'product', '[MASK]']","SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1","['customer_orders', 'order_items', 'customers', 'order_quantity', 'customer_name', 'customer_id', 'order_id', 'customer_phone']","[('customer_orders', 'T2'), ('order_items', 'T3'), ('customers', 'T1')]","['order_quantity', 'customer_name', 'customer_id', 'order_id', 'customer_phone']","as,group,join,limit,sum,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",0.8571428571428571,0.8571428571428571
1866,1866,Show teams that have suffered more than three eliminations.,Show [MASK] that have suffered more than three [MASK],"['Show', '[MASK]', 'that', 'have', 'suffered', 'more', 'than', 'three', '[MASK]']",SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3,"['elimination', 'Team']","[('elimination', '')]",['Team'],"group,count,having,select,from",False,"['as', 'group', 'join', 'count', 'having']",1.0,0.6
4253,4253,Give me the name of each club.,Give me the [MASK] of each [MASK],"['Give', 'me', 'the', '[MASK]', 'of', 'each', '[MASK]']",SELECT clubname FROM club,"['club', 'clubname']","[('club', '')]",['clubname'],"select,from",False,[],,
3166,3166,Give me the maximum low temperature and average precipitation at the Amersham station.,Give me the maximum [MASK] [MASK] and average [MASK] at the [MASK] [MASK],"['Give', 'me', 'the', 'maximum', '[MASK]', '[MASK]', 'and', 'average', '[MASK]', 'at', 'the', '[MASK]', '[MASK]']","SELECT max(t1.low_temperature) ,  avg(t1.precipitation) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id WHERE t2.network_name  =  ""Amersham""","['station', 'weekly_weather', 'precipitation', 'station_id', 'id', 'Amersham', 'network_name', 'low_temperature']","[('station', 't2'), ('weekly_weather', 't1')]","['precipitation', 'station_id', 'id', 'Amersham', 'network_name', 'low_temperature']","where,as,join,avg,select,from,max",True,"['avg', 'max']",0.4,1.0
7423,7423,Find the name and age of the visitor who bought the most tickets at once.,Find the [MASK] and [MASK] [MASK] the [MASK] who bought the most [MASK] at once.,"['Find', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'the', '[MASK]', 'who', 'bought', 'the', 'most', '[MASK]', 'at', 'once.']","SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1","['visitor', 'visit', 'num_of_ticket', 'visitor_id', 'name', 'id', 'age']","[('visitor', 't1'), ('visit', 't2')]","['num_of_ticket', 'visitor_id', 'name', 'id', 'age']","as,join,limit,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,0.7142857142857143
3663,3663,List players' first name and last name who have weight greater than 220 or height shorter than 75.,List [MASK] [MASK] [MASK] and [MASK] [MASK] who have [MASK] greater than 220 or [MASK] shorter than 75.,"['List', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'who', 'have', '[MASK]', 'greater', 'than', '220', 'or', '[MASK]', 'shorter', 'than', '75.']","SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75","['player', 'height', 'weight', 'name_first', 'name_last']","[('player', '')]","['height', 'weight', 'name_first', 'name_last']","or,select,from,where",False,"['or', 'where']",1.0,1.0
3715,3715,What are the average prominence of the mountains in country 'Morocco'?,What are the average [MASK] of the [MASK] in [MASK] 'Morocco'?,"['What', 'are', 'the', 'average', '[MASK]', 'of', 'the', '[MASK]', 'in', '[MASK]', ""'Morocco'?""]",SELECT avg(prominence) FROM mountain WHERE country  =  'Morocco',"['mountain', 'country', 'prominence']","[('mountain', '')]","['country', 'prominence']","select,where,from,avg",False,['avg'],0.5,1.0
5858,5858,Show details of all investors if they make any transaction with share count greater than 100.,Show [MASK] of all [MASK] if they make any [MASK] with [MASK] [MASK] greater than 100.,"['Show', '[MASK]', 'of', 'all', '[MASK]', 'if', 'they', 'make', 'any', '[MASK]', 'with', '[MASK]', '[MASK]', 'greater', 'than', '100.']",SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.share_count  >  100,"['INVESTORS', 'TRANSACTIONS', 'Investor_details', 'share_count', 'investor_id']","[('INVESTORS', 'T1'), ('TRANSACTIONS', 'T2')]","['Investor_details', 'share_count', 'investor_id']","as,join,from,select,where",True,"['or', 'where']",0.3333333333333333,0.5
7207,7207,How many flights depart from City Aberdeen?,How many [MASK] [MASK] from [MASK] [MASK],"['How', 'many', '[MASK]', '[MASK]', 'from', '[MASK]', '[MASK]']","SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","['FLIGHTS', 'AIRPORTS', 'AirportCode', 'City', 'SourceAirport', 'Aberdeen']","[('FLIGHTS', 'T1'), ('AIRPORTS', 'T2')]","['AirportCode', 'City', 'SourceAirport', 'Aberdeen']","as,join,count,where,select,from",True,"['as', 'join', 'count', 'and', 'where']",1.0,0.8
5250,5250,How many songs have a shared vocal?,How many [MASK] have a [MASK] [MASK],"['How', 'many', '[MASK]', 'have', 'a', '[MASK]', '[MASK]']","SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  ""shared""","['songs', 'vocals', 'songid', 'shared', 'title', 'TYPE']","[('songs', 'T2'), ('vocals', 'T1')]","['songid', 'shared', 'title', 'TYPE']","distinct,as,join,count,where,select,from",True,"['count', 'where']",0.4,1.0
1278,1278,What is the average attendance of stadiums with capacity percentage higher than 100%?,What is the [MASK] [MASK] of [MASK] with [MASK] [MASK] higher than 100%?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', '[MASK]', 'with', '[MASK]', '[MASK]', 'higher', 'than', '100%?']",SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100,"['stadium', 'capacity_percentage', 'average_attendance']","[('stadium', '')]","['capacity_percentage', 'average_attendance']","select,from,where",False,"['as', 'join', 'where']",1.0,0.3333333333333333
6333,6333,Count the number of cities in the state of Colorado.,[MASK] the number of [MASK] in the [MASK] of [MASK],"['[MASK]', 'the', 'number', 'of', '[MASK]', 'in', 'the', '[MASK]', 'of', '[MASK]']","SELECT count(*) FROM addresses WHERE state_province_county  =  ""Colorado""","['addresses', 'Colorado', 'state_province_county']","[('addresses', '')]","['Colorado', 'state_province_county']","select,count,from,where",False,['count'],0.5,1.0
2637,2637,How many rooms have not had any reservation yet?,How many [MASK] have not had any [MASK] yet?,"['How', 'many', '[MASK]', 'have', 'not', 'had', 'any', '[MASK]', 'yet?']",SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations),"['reservations', 'rooms', 'room', 'roomid']","[('reservations', ''), ('rooms', '')]","['room', 'roomid']","distinct,where,in,count,not,select,from",False,"['where', 'in', 'count', 'not']",0.8,1.0
5522,5522,What are the names and buying prices of all the products?,What are the [MASK] and [MASK] [MASK] of all the [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'all', 'the', '[MASK]']","SELECT product_name ,  typical_buying_price FROM products","['products', 'product_name', 'typical_buying_price']","[('products', '')]","['product_name', 'typical_buying_price']","select,from",False,[],,
4856,4856,What are the resident details containing the substring 'Miss'?,What are the [MASK] [MASK] containing the substring 'Miss'?,"['What', 'are', 'the', '[MASK]', '[MASK]', 'containing', 'the', 'substring', ""'Miss'?""]",SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%',"['Residents', 'other_details']","[('Residents', '')]",['other_details'],"select,like,from,where",False,"['like', 'where']",1.0,1.0
3110,3110,What are the code and description of the most frequent behavior incident type?,What are the [MASK] and [MASK] of the most frequent [MASK] [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', 'most', 'frequent', '[MASK]', '[MASK]', '[MASK]']","SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1","['Ref_Incident_Type', 'Behavior_Incident', 'incident_type_description', 'incident_type_code']","[('Ref_Incident_Type', 'T2'), ('Behavior_Incident', 'T1')]","['incident_type_description', 'incident_type_code']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc']",0.7142857142857143,1.0
4338,4338,List the project details of the projects which did not hire any staff for a researcher role.,List the [MASK] [MASK] of the [MASK] which did not hire any [MASK] for a researcher [MASK],"['List', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'which', 'did', 'not', 'hire', 'any', '[MASK]', 'for', 'a', 'researcher', '[MASK]']",SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' ),"['Projects', 'Project_Staff', 'project_details', 'role_code', 'project_id']","[('Projects', ''), ('Project_Staff', '')]","['project_details', 'role_code', 'project_id']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
884,884,Find the birth dates corresponding to employees who live in the city of Edmonton.,Find the [MASK] [MASK] corresponding to [MASK] who live in the [MASK] of [MASK],"['Find', 'the', '[MASK]', '[MASK]', 'corresponding', 'to', '[MASK]', 'who', 'live', 'in', 'the', '[MASK]', 'of', '[MASK]']","SELECT BirthDate FROM EMPLOYEE WHERE City  =  ""Edmonton""","['EMPLOYEE', 'City', 'Edmonton', 'BirthDate']","[('EMPLOYEE', '')]","['City', 'Edmonton', 'BirthDate']","select,from,where",False,"['as', 'join', 'where', 'distinct']",1.0,0.25
7521,7521,How many degrees does the engineering department offer?,How many [MASK] does the engineering [MASK] offer?,"['How', 'many', '[MASK]', 'does', 'the', 'engineering', '[MASK]', 'offer?']",SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer',"['Departments', 'Degree_Programs', 'department_id', 'department_name']","[('Departments', 'T1'), ('Degree_Programs', 'T2')]","['department_id', 'department_name']","as,join,count,where,select,from",True,"['as', 'join', 'count', 'where']",1.0,1.0
620,620,How many milliseconds long is Fast As a Shark?,How many [MASK] long is [MASK] As a [MASK],"['How', 'many', '[MASK]', 'long', 'is', '[MASK]', 'As', 'a', '[MASK]']","SELECT milliseconds FROM tracks WHERE name = ""Fast As a Shark"";","['tracks', 'milliseconds', 'Fast As a Shark', 'name']","[('tracks', '')]","['milliseconds', 'Fast As a Shark', 'name']","select,as,from,where",False,[],,
6794,6794,Find the name of the activity that has the largest number of student participants.,Find the [MASK] of the [MASK] that has the largest number of [MASK] [MASK],"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'has', 'the', 'largest', 'number', 'of', '[MASK]', '[MASK]']",SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1,"['Activity', 'Participates_in', 'actID', 'activity_name']","[('Activity', 'T1'), ('Participates_in', 'T2')]","['actID', 'activity_name']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc']",0.7142857142857143,1.0
7702,7702,What are the names of all the countries that became independent after 1950?,What are the [MASK] of all the [MASK] that became [MASK] after 1950?,"['What', 'are', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', 'that', 'became', '[MASK]', 'after', '1950?']",SELECT Name FROM country WHERE IndepYear  >  1950,"['country', 'Name', 'IndepYear']","[('country', '')]","['Name', 'IndepYear']","select,from,where",False,['where'],1.0,1.0
2551,2551,"What are the names of cities, as well as the names of the counties they correspond to?","What are the [MASK] of cities, as well as the [MASK] of the [MASK] they correspond to?","['What', 'are', 'the', '[MASK]', 'of', 'cities,', 'as', 'well', 'as', 'the', '[MASK]', 'of', 'the', '[MASK]', 'they', 'correspond', 'to?']","SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID","['county_public_safety', 'city', 'Name', 'County_ID']","[('county_public_safety', 'T2'), ('city', 'T1')]","['Name', 'County_ID']","select,join,from,as",True,"['join', 'as']",1.0,1.0
2970,2970,How many languages are in these films?,How many [MASK] are in these [MASK],"['How', 'many', '[MASK]', 'are', 'in', 'these', '[MASK]']",SELECT count(DISTINCT language_id) FROM film,"['film', 'language_id']","[('film', '')]",['language_id'],"distinct,select,count,from",False,"['count', 'where']",0.5,0.5
2207,2207,"What are the drivers' first, last names and id who had more than 8 pit stops or participated in more than 5 race results?","What are the [MASK] first, last [MASK] and [MASK] who had more than 8 pit [MASK] or [MASK] in more than 5 race [MASK]","['What', 'are', 'the', '[MASK]', 'first,', 'last', '[MASK]', 'and', '[MASK]', 'who', 'had', 'more', 'than', '8', 'pit', '[MASK]', 'or', '[MASK]', 'in', 'more', 'than', '5', 'race', '[MASK]']","SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5","['results', 'drivers', 'pitstops', 'forename', 'driverid', 'surname']","[('results', 'T2'), ('drivers', 'T1'), ('pitstops', 'T2')]","['forename', 'driverid', 'surname']","as,group,union,join,count,having,select,from",True,"['as', 'group', 'join', 'count', 'having']",0.8333333333333334,1.0
3466,3466,What is all the job history info done by employees earning a salary greater than or equal to 12000?,What is all the [MASK] [MASK] info done by [MASK] earning a [MASK] greater than or equal to 12000?,"['What', 'is', 'all', 'the', '[MASK]', '[MASK]', 'info', 'done', 'by', '[MASK]', 'earning', 'a', '[MASK]', 'greater', 'than', 'or', 'equal', 'to', '12000?']",SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000,"['employees', 'job_history', 'salary', 'employee_id']","[('employees', 'T2'), ('job_history', 'T1')]","['salary', 'employee_id']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
7026,7026,Which year has most number of concerts?,Which [MASK] has most number of [MASK],"['Which', '[MASK]', 'has', 'most', 'number', 'of', '[MASK]']",SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,"['concert', 'YEAR']","[('concert', '')]",['YEAR'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
537,537,A list of the top 5 countries by number of invoices. List country name and number of invoices.,A list of the top 5 [MASK] by number of [MASK] List [MASK] name and number of [MASK],"['A', 'list', 'of', 'the', 'top', '5', '[MASK]', 'by', 'number', 'of', '[MASK]', 'List', '[MASK]', 'name', 'and', 'number', 'of', '[MASK]']","SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;","['invoices', 'billing_country']","[('invoices', '')]",['billing_country'],"group,limit,count,order,select,desc,from",False,"['limit', 'order', 'desc']",0.6,1.0
3767,3767,Which program is broadcast most frequently? Give me the program name.,Which [MASK] is [MASK] most frequently? Give me the [MASK] [MASK],"['Which', '[MASK]', 'is', '[MASK]', 'most', 'frequently?', 'Give', 'me', 'the', '[MASK]', '[MASK]']",SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1,"['program', 'broadcast', 'program_id', 'name']","[('program', 't1'), ('broadcast', 't2')]","['program_id', 'name']","as,group,join,limit,count,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,1.0
2288,2288,How many entrepreneurs correspond to each investor?,How many [MASK] correspond to each [MASK],"['How', 'many', '[MASK]', 'correspond', 'to', 'each', '[MASK]']","SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor","['entrepreneur', 'Investor']","[('entrepreneur', '')]",['Investor'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
13,13,List the states where both the secretary of 'Treasury' department and the secretary of 'Homeland Security' were born.,List the [MASK] where both the secretary of 'Treasury' [MASK] and the secretary of 'Homeland Security' were [MASK],"['List', 'the', '[MASK]', 'where', 'both', 'the', 'secretary', 'of', ""'Treasury'"", '[MASK]', 'and', 'the', 'secretary', 'of', ""'Homeland"", ""Security'"", 'were', '[MASK]']",SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Homeland Security',"['department', 'head', 'management', 'head_id', 'born_state', 'department_id', 'name']","[('department', 'T1'), ('head', 'T3'), ('management', 'T2')]","['head_id', 'born_state', 'department_id', 'name']","intersect,as,join,from,select,where",True,"['intersect', 'as', 'join']",0.75,1.0
1681,1681,Show all artist names who didn't have an exhibition in 2004.,Show all [MASK] [MASK] who didn't have an [MASK] in 2004.,"['Show', 'all', '[MASK]', '[MASK]', 'who', ""didn't"", 'have', 'an', '[MASK]', 'in', '2004.']",SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.year  =  2004,"['artist', 'exhibition', 'artist', 'artist_id', 'year', 'name']","[('artist', 'T2'), ('exhibition', 'T1'), ('artist', '')]","['artist_id', 'year', 'name']","as,except,join,where,select,from",True,"['as', 'except', 'join', 'where']",1.0,1.0
6619,6619,"What are the names of the stations which serve both ""Ananthapuri Express"" and ""Guruvayur Express"" trains?",What are the [MASK] of the [MASK] which serve both [MASK] [MASK] and [MASK] [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'which', 'serve', 'both', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', '[MASK]']","SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  ""Ananthapuri Express"" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  ""Guruvayur Express""","['station', 'train', 'train_station', 'train_id', 'Name', 'Ananthapuri Express', 'station_id', 'name', 'Guruvayur Express']","[('station', 'T2'), ('train', 'T3'), ('train_station', 'T1')]","['train_id', 'Name', 'Ananthapuri Express', 'station_id', 'name', 'Guruvayur Express']","intersect,as,join,from,select,where",True,"['intersect', 'as', 'join', 'where']",1.0,1.0
740,740,"What are the different card types, and how many transactions have been made with each?",What are the different [MASK] [MASK] and how many [MASK] have been made with each?,"['What', 'are', 'the', 'different', '[MASK]', '[MASK]', 'and', 'how', 'many', '[MASK]', 'have', 'been', 'made', 'with', 'each?']","SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code","['Financial_transactions', 'Customers_cards', 'card_type_code', 'card_id']","[('Financial_transactions', 'T1'), ('Customers_cards', 'T2')]","['card_type_code', 'card_id']","as,group,join,count,select,from",True,"['count', 'group']",0.5,1.0
5496,5496,Find the distinct last names of all the students who have president votes and whose advisor is not 2192.,Find the distinct last [MASK] of all the [MASK] who have [MASK] [MASK] and whose [MASK] is not [MASK],"['Find', 'the', 'distinct', 'last', '[MASK]', 'of', 'all', 'the', '[MASK]', 'who', 'have', '[MASK]', '[MASK]', 'and', 'whose', '[MASK]', 'is', 'not', '[MASK]']","SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  ""2192""","['VOTING_RECORD', 'STUDENT', 'STUDENT', '2192', 'StuID', 'PRESIDENT_Vote', 'Advisor', 'LName']","[('VOTING_RECORD', 'T2'), ('STUDENT', ''), ('STUDENT', 'T1')]","['2192', 'StuID', 'PRESIDENT_Vote', 'Advisor', 'LName']","distinct,as,except,join,where,select,from",True,"['distinct', 'as', 'join', 'where']",0.8,1.0
2976,2976,Which staff handled least number of payments? List the full name and the id.,Which [MASK] handled least number of [MASK] List the full [MASK] and the id.,"['Which', '[MASK]', 'handled', 'least', 'number', 'of', '[MASK]', 'List', 'the', 'full', '[MASK]', 'and', 'the', 'id.']","SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1","['staff', 'payment', 'staff_id', 'first_name', 'last_name']","[('staff', 'T1'), ('payment', 'T2')]","['staff_id', 'first_name', 'last_name']","asc,as,group,join,limit,count,order,select,from",True,"['asc', 'group', 'limit', 'count', 'order']",0.7142857142857143,1.0
3386,3386,What are the countries that participated in both friendly and tournament type competitions?,What are the [MASK] that [MASK] in both friendly and [MASK] [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'that', '[MASK]', 'in', 'both', 'friendly', 'and', '[MASK]', '[MASK]', '[MASK]']",SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament',"['competition', 'country', 'competition_type']","[('competition', '')]","['country', 'competition_type']","intersect,select,from,where",False,[],,
1385,1385,"What are the names of students and their respective departments, ordered by number of credits from least to greatest?",What are the [MASK] of [MASK] and their respective [MASK] ordered by number of [MASK] from least to greatest?,"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'and', 'their', 'respective', '[MASK]', 'ordered', 'by', 'number', 'of', '[MASK]', 'from', 'least', 'to', 'greatest?']","SELECT name ,  dept_name FROM student ORDER BY tot_cred","['student', 'tot_cred', 'dept_name', 'name']","[('student', '')]","['tot_cred', 'dept_name', 'name']","select,order,from",False,"['order', 'desc']",1.0,0.5
7758,7758,Which languages are spoken by only one country in republic governments?,Which [MASK] are spoken by only one [MASK] in [MASK] [MASK],"['Which', '[MASK]', 'are', 'spoken', 'by', 'only', 'one', '[MASK]', 'in', '[MASK]', '[MASK]']","SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1","['country', 'countrylanguage', 'Language', 'GovernmentForm', 'Republic', 'Code', 'CountryCode']","[('country', 'T1'), ('countrylanguage', 'T2')]","['Language', 'GovernmentForm', 'Republic', 'Code', 'CountryCode']","as,group,join,from,count,having,select,where",True,"['as', 'join', 'count', 'where']",0.6666666666666666,1.0
7488,7488,"What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",What is the [MASK] [MASK] [MASK] [MASK] and [MASK] [MASK] of the [MASK] with the most [MASK] [MASK] [MASK] across all [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'most', '[MASK]', '[MASK]', '[MASK]', 'across', 'all', '[MASK]']","SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","['matches', 'players', 'birth_date', 'country_code', 'winner_rank_points', 'player_id', 'winner_id', 'first_name']","[('matches', 'T2'), ('players', 'T1')]","['birth_date', 'country_code', 'winner_rank_points', 'player_id', 'winner_id', 'first_name']","as,join,limit,order,select,desc,from",True,"['as', 'join', 'limit', 'order', 'desc']",1.0,1.0
2843,2843,Find the name and price of the product that has been ordered the greatest number of times.,Find the [MASK] and [MASK] of the [MASK] that has been [MASK] the greatest number of times.,"['Find', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'that', 'has', 'been', '[MASK]', 'the', 'greatest', 'number', 'of', 'times.']","SELECT t1.product_name ,   t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1","['regular_order_products', 'products', 'product_price', 'product_name', 'product_id']","[('regular_order_products', 't2'), ('products', 't1')]","['product_price', 'product_name', 'product_id']","as,group,join,limit,count,order,select,desc,from",True,"['limit', 'order', 'desc', 'as', 'group', 'join', 'count']",1.0,1.0
5864,5864,What are the lot details of lots associated with transactions with share count smaller than 50?,What are the [MASK] [MASK] of [MASK] associated with [MASK] with [MASK] [MASK] smaller than 50?,"['What', 'are', 'the', '[MASK]', '[MASK]', 'of', '[MASK]', 'associated', 'with', '[MASK]', 'with', '[MASK]', '[MASK]', 'smaller', 'than', '50?']",SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  <  50,"['TRANSACTIONS_LOTS', 'TRANSACTIONS', 'LOTS', 'transaction_id', 'share_count', 'lot_details', 'lot_id']","[('TRANSACTIONS_LOTS', 'T2'), ('TRANSACTIONS', 'T3'), ('LOTS', 'T1')]","['transaction_id', 'share_count', 'lot_details', 'lot_id']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
5792,5792,What is the average price of the products for each category?,What is the average [MASK] of the [MASK] for each [MASK],"['What', 'is', 'the', 'average', '[MASK]', 'of', 'the', '[MASK]', 'for', 'each', '[MASK]']","SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code","['products', 'product_price', 'product_category_code']","[('products', '')]","['product_price', 'product_category_code']","group,select,from,avg",False,"['group', 'avg']",1.0,1.0
7732,7732,How many unique languages are spoken in the world?,How many unique [MASK] are spoken in the world?,"['How', 'many', 'unique', '[MASK]', 'are', 'spoken', 'in', 'the', 'world?']",SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,"['countrylanguage', 'LANGUAGE']","[('countrylanguage', '')]",['LANGUAGE'],"distinct,select,count,from",False,"['as', 'join', 'count', 'where']",0.5,0.25
2403,2403,"What are the support, consider, and oppose rates of each candidate, ordered ascending by their unsure rate?",What are the [MASK] [MASK] and [MASK] [MASK] of each [MASK] ordered ascending by their [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'each', '[MASK]', 'ordered', 'ascending', 'by', 'their', '[MASK]', '[MASK]']","SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate","['candidate', 'unsure_rate', 'Support_rate', 'Oppose_rate', 'Consider_rate']","[('candidate', '')]","['unsure_rate', 'Support_rate', 'Oppose_rate', 'Consider_rate']","select,order,from",False,"['asc', 'order']",1.0,0.5
7202,7202,What are the names of airports in Aberdeen?,What are the [MASK] of [MASK] in [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'in', '[MASK]']","SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""","['AIRPORTS', 'City', 'AirportName', 'Aberdeen']","[('AIRPORTS', '')]","['City', 'AirportName', 'Aberdeen']","select,from,where",False,"['join', 'as']",0.0,0.0
334,334,Which attribute definitions have attribute value 0? Give me the attribute name and attribute ID.,Which [MASK] [MASK] have [MASK] [MASK] 0? Give me the [MASK] [MASK] and [MASK] ID.,"['Which', '[MASK]', '[MASK]', 'have', '[MASK]', '[MASK]', '0?', 'Give', 'me', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'ID.']","SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0","['Attribute_Definitions', 'Catalog_Contents_Additional_Attributes', 'attribute_id', 'attribute_name', 'attribute_value']","[('Attribute_Definitions', 't1'), ('Catalog_Contents_Additional_Attributes', 't2')]","['attribute_id', 'attribute_name', 'attribute_value']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
2736,2736,Show the county name and population of all counties.,Show the [MASK] [MASK] and [MASK] of all [MASK],"['Show', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'all', '[MASK]']","SELECT County_name ,  Population FROM county","['county', 'Population', 'County_name']","[('county', '')]","['Population', 'County_name']","select,from",False,[],,
7544,7544,What is the name of the semester with no students enrolled?,What is the [MASK] of the [MASK] with no [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'no', '[MASK]', '[MASK]']",SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),"['Semesters', 'Student_Enrolment', 'semester_id', 'semester_name']","[('Semesters', ''), ('Student_Enrolment', '')]","['semester_id', 'semester_name']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
4280,4280,"What is the description of the club named ""Tennis Club""?",What is the [MASK] of the [MASK] [MASK] [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT clubdesc FROM club WHERE clubname  =  ""Tennis Club""","['club', 'clubdesc', 'Tennis Club', 'clubname']","[('club', '')]","['clubdesc', 'Tennis Club', 'clubname']","select,from,where",False,['where'],1.0,1.0
4919,4919,What are the names of all the stores in the largest district by population?,What are the [MASK] of all the [MASK] in the largest [MASK] by [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', 'in', 'the', 'largest', '[MASK]', 'by', '[MASK]']",SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1),"['store_district', 'district', 'store', 'city_population', 'store_name', 'district_id', 'store_id']","[('store_district', 't2'), ('district', ''), ('store', 't1')]","['city_population', 'store_name', 'district_id', 'store_id']","as,join,limit,from,order,select,desc,where",True,"['limit', 'order', 'desc']",0.5,1.0
3495,3495,display all the information of the employees whose salary if within the range of smallest salary and 2500.,[MASK] all the information of the [MASK] whose [MASK] if within the range of smallest [MASK] and 2500.,"['[MASK]', 'all', 'the', 'information', 'of', 'the', '[MASK]', 'whose', '[MASK]', 'if', 'within', 'the', 'range', 'of', 'smallest', '[MASK]', 'and', '2500.']",SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500,"['employees', 'salary']","[('employees', '')]",['salary'],"min,and,between,where,select,from",False,"['and', 'between', 'where']",0.75,1.0
2989,2989,What was the date of the earliest payment?,What was the [MASK] of the earliest [MASK],"['What', 'was', 'the', '[MASK]', 'of', 'the', 'earliest', '[MASK]']",SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1,"['payment', 'payment_date']","[('payment', '')]",['payment_date'],"asc,limit,order,select,from",False,"['limit', 'order', 'asc']",1.0,1.0
3397,3397,List all manufacturer names and ids ordered by their opening year.,List all [MASK] [MASK] and [MASK] ordered by their [MASK] [MASK],"['List', 'all', '[MASK]', '[MASK]', 'and', '[MASK]', 'ordered', 'by', 'their', '[MASK]', '[MASK]']","SELECT name ,  manufacturer_id FROM manufacturer ORDER BY open_year","['manufacturer', 'manufacturer_id', 'open_year', 'name']","[('manufacturer', '')]","['manufacturer_id', 'open_year', 'name']","select,order,from",False,"['order', 'asc']",1.0,0.5
3049,3049,What is the name of the customer with the worst credit score?,What is the [MASK] of the [MASK] with the worst [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'worst', '[MASK]', '[MASK]']",SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1,"['customer', 'credit_score', 'cust_name']","[('customer', '')]","['credit_score', 'cust_name']","select,limit,order,from",False,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,0.2857142857142857
2235,2235,List the names of technicians in ascending order of age.,List the [MASK] of [MASK] in ascending order of age.,"['List', 'the', '[MASK]', 'of', '[MASK]', 'in', 'ascending', 'order', 'of', 'age.']",SELECT Name FROM technician ORDER BY Age ASC,"['technician', 'Name', 'Age']","[('technician', '')]","['Name', 'Age']","select,asc,order,from",False,"['asc', 'order']",1.0,1.0
941,941,"What is the product, chromosome and porphyria related to the enzymes which take effect at the location 'Cytosol'?",What is the [MASK] [MASK] and [MASK] related to the [MASK] which take effect at the [MASK] 'Cytosol'?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'related', 'to', 'the', '[MASK]', 'which', 'take', 'effect', 'at', 'the', '[MASK]', ""'Cytosol'?""]","SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'","['enzyme', 'chromosome', 'LOCATION', 'porphyria', 'product']","[('enzyme', '')]","['chromosome', 'LOCATION', 'porphyria', 'product']","select,from,where",False,"['join', 'as']",0.0,0.0
4380,4380,What are the result description of the project whose detail is 'sint'?,What are the result [MASK] of the [MASK] whose [MASK] is 'sint'?,"['What', 'are', 'the', 'result', '[MASK]', 'of', 'the', '[MASK]', 'whose', '[MASK]', 'is', ""'sint'?""]",SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint',"['Project_outcomes', 'Projects', 'Research_outcomes', 'project_details', 'outcome_description', 'project_id', 'outcome_code']","[('Project_outcomes', 'T2'), ('Projects', 'T3'), ('Research_outcomes', 'T1')]","['project_details', 'outcome_description', 'project_id', 'outcome_code']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
7559,7559,Whose permanent address is different from his or her current address? List his or her first name.,Whose [MASK] [MASK] is [MASK] from his or her [MASK] [MASK] List his or her [MASK] [MASK],"['Whose', '[MASK]', '[MASK]', 'is', '[MASK]', 'from', 'his', 'or', 'her', '[MASK]', '[MASK]', 'List', 'his', 'or', 'her', '[MASK]', '[MASK]']",SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,"['Students', 'current_address_id', 'first_name', 'permanent_address_id']","[('Students', '')]","['current_address_id', 'first_name', 'permanent_address_id']","select,from,where",False,"['as', 'join', 'where']",1.0,0.3333333333333333
2947,2947,Count the number of customers who are active.,Count the number of [MASK] who are [MASK],"['Count', 'the', 'number', 'of', '[MASK]', 'who', 'are', '[MASK]']",SELECT count(*) FROM customer WHERE active = '1',"['customer', 'active']","[('customer', '')]",['active'],"select,count,from,where",False,"['distinct', 'count']",0.5,0.5
1184,1184,What is the party of the representative that has the smallest number of votes.,What is the [MASK] of the [MASK] that has the smallest number of [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'has', 'the', 'smallest', 'number', 'of', '[MASK]']",SELECT T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes ASC LIMIT 1,"['representative', 'election', 'Party', 'votes', 'Representative_ID']","[('representative', 'T2'), ('election', 'T1')]","['Party', 'votes', 'Representative_ID']","asc,as,join,limit,order,select,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'asc']",1.0,0.7142857142857143
4261,4261,"Return the last name for the members of the club named ""Hopkins Student Enterprises"".",Return the last [MASK] for the [MASK] [MASK] the [MASK] [MASK] [MASK] [MASK] [MASK],"['Return', 'the', 'last', '[MASK]', 'for', 'the', '[MASK]', '[MASK]', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises""","['student', 'member_of_club', 'club', 'clubname', 'lname', 'clubid', 'Hopkins Student Enterprises', 'stuid']","[('student', 't3'), ('member_of_club', 't2'), ('club', 't1')]","['clubname', 'lname', 'clubid', 'Hopkins Student Enterprises', 'stuid']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
6491,6491,Find the name of the scientist who worked on both a project named 'Matter of Time' and a project named 'A Puzzling Parallax'.,Find the [MASK] of the [MASK] who worked on both a [MASK] [MASK] 'Matter of Time' and a [MASK] [MASK] 'A Puzzling Parallax'.,"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'worked', 'on', 'both', 'a', '[MASK]', '[MASK]', ""'Matter"", 'of', ""Time'"", 'and', 'a', '[MASK]', '[MASK]', ""'A"", 'Puzzling', ""Parallax'.""]",SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'A Puzzling Parallax',"['scientists', 'projects', 'assignedto', 'project', 'name', 'code', 'scientist', 'SSN']","[('scientists', 'T3'), ('projects', 'T2'), ('assignedto', 'T1')]","['project', 'name', 'code', 'scientist', 'SSN']","intersect,as,join,from,select,where",True,"['intersect', 'as', 'join', 'where']",1.0,1.0
6442,6442,What are the type codes and descriptions of each budget type?,What are the [MASK] [MASK] and [MASK] of each [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'each', '[MASK]', '[MASK]']","SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes","['Ref_budget_codes', 'budget_type_description', 'budget_type_code']","[('Ref_budget_codes', '')]","['budget_type_description', 'budget_type_code']","select,from",False,[],,
6679,6679,"What is the maximum, minimum, and average amount of money outsanding for all customers?","What is the maximum, minimum, and average [MASK] of money [MASK] for all [MASK]","['What', 'is', 'the', 'maximum,', 'minimum,', 'and', 'average', '[MASK]', 'of', 'money', '[MASK]', 'for', 'all', '[MASK]']","SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;","['Customers', 'amount_outstanding']","[('Customers', '')]",['amount_outstanding'],"min,avg,select,from,max",False,"['min', 'avg', 'max']",1.0,1.0
2277,2277,What is the weight of the shortest person?,What is the [MASK] of the shortest person?,"['What', 'is', 'the', '[MASK]', 'of', 'the', 'shortest', 'person?']",SELECT Weight FROM people ORDER BY Height ASC LIMIT 1,"['people', 'Weight', 'Height']","[('people', '')]","['Weight', 'Height']","asc,limit,order,select,from",False,"['limit', 'order']",0.6666666666666666,1.0
3931,3931,Which physicians are in charge of more than one patient? Give me their names.,Which [MASK] are in charge of more than one [MASK] Give me their [MASK],"['Which', '[MASK]', 'are', 'in', 'charge', 'of', 'more', 'than', 'one', '[MASK]', 'Give', 'me', 'their', '[MASK]']",SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1,"['patient', 'physician', 'employeeid', 'PCP', 'name']","[('patient', 'T2'), ('physician', 'T1')]","['employeeid', 'PCP', 'name']","as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'count', 'having']",1.0,1.0
1851,1851,"Give the different reigns of wrestlers who are not located in Tokyo, Japan.",Give the different [MASK] of [MASK] who are not [MASK] in [MASK] [MASK],"['Give', 'the', 'different', '[MASK]', 'of', '[MASK]', 'who', 'are', 'not', '[MASK]', 'in', '[MASK]', '[MASK]']","SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != ""Tokyo , Japan""","['wrestler', 'LOCATION', 'Tokyo , Japan', 'Reign']","[('wrestler', '')]","['LOCATION', 'Tokyo , Japan', 'Reign']","distinct,select,from,where",False,['where'],0.5,1.0
5814,5814,How many submissions are there?,How many [MASK] are there?,"['How', 'many', '[MASK]', 'are', 'there?']",SELECT count(*) FROM submission,['submission'],"[('submission', '')]",[],"select,count,from",False,['count'],1.0,1.0
4137,4137,What are the countries of markets and their corresponding years of market estimation?,What are the [MASK] of [MASK] and their corresponding [MASK] of [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', 'and', 'their', 'corresponding', '[MASK]', 'of', '[MASK]', '[MASK]']","SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID","['film_market_estimation', 'market', 'Year', 'Market_ID', 'Country']","[('film_market_estimation', 'T1'), ('market', 'T2')]","['Year', 'Market_ID', 'Country']","select,join,from,as",True,"['join', 'as']",1.0,1.0
7012,7012,List all song names by singers above the average age.,List all [MASK] [MASK] by [MASK] above the average age.,"['List', 'all', '[MASK]', '[MASK]', 'by', '[MASK]', 'above', 'the', 'average', 'age.']",SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),"['singer', 'age', 'song_name']","[('singer', '')]","['age', 'song_name']","select,avg,from,where",False,"['asc', 'order']",0.0,0.0
2796,2796,What are the names of parties that do not have delegates in election?,What are the names of [MASK] that do not have delegates in [MASK],"['What', 'are', 'the', 'names', 'of', '[MASK]', 'that', 'do', 'not', 'have', 'delegates', 'in', '[MASK]']",SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election),"['party', 'election', 'Party', 'Party_ID']","[('party', ''), ('election', '')]","['Party', 'Party_ID']","where,in,not,select,from",False,"['as', 'except', 'join', 'where']",0.3333333333333333,0.25
4875,4875,Which team has the oldest player?,Which [MASK] has the oldest [MASK],"['Which', '[MASK]', 'has', 'the', 'oldest', '[MASK]']",SELECT Team FROM player ORDER BY Age DESC LIMIT 1,"['player', 'Age', 'Team']","[('player', '')]","['Age', 'Team']","limit,order,select,desc,from",False,['max'],0.0,0.0
1886,1886,Show all school names in alphabetical order.,Show all [MASK] [MASK] in alphabetical order.,"['Show', 'all', '[MASK]', '[MASK]', 'in', 'alphabetical', 'order.']",SELECT school_name FROM school ORDER BY school_name,"['school', 'school_name']","[('school', '')]",['school_name'],"select,order,from",False,['order'],1.0,1.0
3659,3659,What are the name and id of the team offering the lowest average salary?,What are the [MASK] and [MASK] of the [MASK] offering the lowest average [MASK],"['What', 'are', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'offering', 'the', 'lowest', 'average', '[MASK]']","SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;","['salary', 'team', 'salary', 'team_id', 'name']","[('salary', 'T2'), ('team', 'T1')]","['salary', 'team_id', 'name']","asc,as,group,join,limit,order,avg,select,from",True,"['group', 'limit', 'order', 'avg', 'as', 'join']",0.8571428571428571,1.0
3615,3615,What is ids of the songs whose resolution is higher than the resolution of any songs with rating lower than 8?,What is [MASK] of the [MASK] whose [MASK] is higher than the [MASK] of any [MASK] with [MASK] lower than 8?,"['What', 'is', '[MASK]', 'of', 'the', '[MASK]', 'whose', '[MASK]', 'is', 'higher', 'than', 'the', '[MASK]', 'of', 'any', '[MASK]', 'with', '[MASK]', 'lower', 'than', '8?']",SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8),"['song', 'f_id', 'resolution', 'rating']","[('song', '')]","['f_id', 'resolution', 'rating']","select,max,from,where",False,"['where', 'as', 'join']",0.5,0.3333333333333333
6590,6590,"What are the grapes, wineries and years for wines with price higher than 100, sorted by year?","What are the [MASK] [MASK] and [MASK] for [MASK] with [MASK] higher than 100, sorted by [MASK]","['What', 'are', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', 'for', '[MASK]', 'with', '[MASK]', 'higher', 'than', '100,', 'sorted', 'by', '[MASK]']","SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR","['WINE', 'Price', 'Grape', 'Winery', 'YEAR']","[('WINE', '')]","['Price', 'Grape', 'Winery', 'YEAR']","select,order,from,where",False,['order'],0.5,1.0
3519,3519,"display those employees who contain a letter z to their first name and also display their last name, city.",[MASK] those [MASK] who contain a letter z to their [MASK] [MASK] and also [MASK] their [MASK] [MASK] [MASK],"['[MASK]', 'those', '[MASK]', 'who', 'contain', 'a', 'letter', 'z', 'to', 'their', '[MASK]', '[MASK]', 'and', 'also', '[MASK]', 'their', '[MASK]', '[MASK]', '[MASK]']","SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'","['departments', 'locations', 'employees', 'city', 'department_id', 'location_id', 'last_name', 'first_name']","[('departments', 'T2'), ('locations', 'T3'), ('employees', 'T1')]","['city', 'department_id', 'location_id', 'last_name', 'first_name']","like,as,join,from,select,where",True,"['like', 'as', 'join', 'where']",1.0,1.0
2397,2397,Return the poll resource associated with the most candidates.,Return the [MASK] [MASK] associated with the most [MASK],"['Return', 'the', '[MASK]', '[MASK]', 'associated', 'with', 'the', 'most', '[MASK]']",SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count(*) DESC LIMIT 1,"['candidate', 'poll_source']","[('candidate', '')]",['poll_source'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
2093,2093,Show the names of pilots and fleet series of the aircrafts they have flied with in ascending order of the rank of the pilot.,Show the [MASK] of [MASK] and [MASK] [MASK] of the [MASK] they have flied with in ascending order of the [MASK] of the [MASK],"['Show', 'the', '[MASK]', 'of', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'they', 'have', 'flied', 'with', 'in', 'ascending', 'order', 'of', 'the', '[MASK]', 'of', 'the', '[MASK]']","SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank","['pilot', 'pilot_record', 'aircraft', 'Pilot_name', 'Aircraft_ID', 'Rank', 'Pilot_ID', 'Fleet_Series']","[('pilot', 'T3'), ('pilot_record', 'T1'), ('aircraft', 'T2')]","['Pilot_name', 'Aircraft_ID', 'Rank', 'Pilot_ID', 'Fleet_Series']","as,join,order,select,from",True,"['join', 'as', 'asc', 'order']",1.0,0.75
7073,7073,Find the average weight for each pet type.,Find the average [MASK] for each [MASK] [MASK],"['Find', 'the', 'average', '[MASK]', 'for', 'each', '[MASK]', '[MASK]']","SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","['pets', 'pettype', 'weight']","[('pets', '')]","['pettype', 'weight']","group,select,from,avg",False,"['group', 'avg']",1.0,1.0
7993,7993,What is the charge amount of the most expensive charge type?,What is the [MASK] [MASK] of the most expensive [MASK] type?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', 'most', 'expensive', '[MASK]', 'type?']",SELECT max(charge_amount) FROM Charges,"['Charges', 'charge_amount']","[('Charges', '')]",['charge_amount'],"select,from,max",False,"['limit', 'order', 'desc']",0.0,0.0
2156,2156,What is the name and date of the race that occurred most recently?,What is the [MASK] and [MASK] of the [MASK] that occurred most recently?,"['What', 'is', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'that', 'occurred', 'most', 'recently?']","SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1","['races', 'date', 'name']","[('races', '')]","['date', 'name']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
3689,3689,"How many games were played in park ""Columbia Park"" in 1907?","How many [MASK] were [MASK] in [MASK] ""Columbia [MASK] in 1907?","['How', 'many', '[MASK]', 'were', '[MASK]', 'in', '[MASK]', '""Columbia', '[MASK]', 'in', '1907?']",SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';,"['home_game', 'park', 'park_name', 'park_id', 'year']","[('home_game', 'T1'), ('park', 'T2')]","['park_name', 'park_id', 'year']","as,join,count,and,where,select,from",True,"['join', 'count', 'where']",0.6,1.0
5781,5781,Return the phone number of the customer who filed the complaint that was raised most recently.,Return the [MASK] [MASK] of the [MASK] who filed the [MASK] that was [MASK] most recently.,"['Return', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'who', 'filed', 'the', '[MASK]', 'that', 'was', '[MASK]', 'most', 'recently.']",SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1,"['customers', 'complaints', 'customer_id', 'phone_number', 'date_complaint_raised']","[('customers', 't1'), ('complaints', 't2')]","['customer_id', 'phone_number', 'date_complaint_raised']","as,join,limit,order,select,desc,from",True,"['limit', 'order', 'desc']",0.6,1.0
29,29,Count the number of different statuses.,Count the number of different [MASK],"['Count', 'the', 'number', 'of', 'different', '[MASK]']",SELECT count(DISTINCT Status) FROM city,"['city', 'Status']","[('city', '')]",['Status'],"distinct,select,count,from",False,"['distinct', 'count']",1.0,1.0
4277,4277,"Find the club which has the largest number of members majoring in ""600"".","Find the [MASK] which has the largest [MASK] [MASK] [MASK] [MASK] in ""600"".","['Find', 'the', '[MASK]', 'which', 'has', 'the', 'largest', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'in', '""600"".']","SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  ""600"" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1","['student', 'member_of_club', 'club', '600', 'clubname', 'clubid', 'major', 'stuid']","[('student', 't3'), ('member_of_club', 't2'), ('club', 't1')]","['600', 'clubname', 'clubid', 'major', 'stuid']","as,group,join,limit,from,count,order,select,desc,where",True,['where'],0.125,1.0
2669,2669,Compute the average number of hosts for parties.,Compute the average [MASK] [MASK] [MASK] for [MASK],"['Compute', 'the', 'average', '[MASK]', '[MASK]', '[MASK]', 'for', '[MASK]']",SELECT avg(Number_of_hosts) FROM party,"['party', 'Number_of_hosts']","[('party', '')]",['Number_of_hosts'],"select,from,avg",False,['avg'],1.0,1.0
3491,3491,display the employee ID and job name for all those jobs in department 80.,[MASK] the [MASK] ID and [MASK] name for all those [MASK] in [MASK] 80.,"['[MASK]', 'the', '[MASK]', 'ID', 'and', '[MASK]', 'name', 'for', 'all', 'those', '[MASK]', 'in', '[MASK]', '80.']","SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80","['jobs', 'employees', 'job_title', 'employee_id', 'department_id', 'job_id']","[('jobs', 'T2'), ('employees', 'T1')]","['job_title', 'employee_id', 'department_id', 'job_id']","as,join,from,select,where",True,"['as', 'join']",0.6666666666666666,1.0
4730,4730,Return the name and job title of the staff with the latest date assigned.,Return the [MASK] and [MASK] [MASK] of the [MASK] with the latest [MASK] [MASK],"['Return', 'the', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', 'latest', '[MASK]', '[MASK]']","SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1","['staff', 'staff_department_assignments', 'staff_name', 'staff_id', 'job_title_code', 'date_assigned_to']","[('staff', 'T1'), ('staff_department_assignments', 'T2')]","['staff_name', 'staff_id', 'job_title_code', 'date_assigned_to']","as,join,limit,order,select,desc,from",True,"['limit', 'order', 'desc', 'as', 'join', 'where']",1.0,0.8333333333333334
4200,4200,What is the id for the employee called Ebba?,What is the [MASK] for the [MASK] called [MASK],"['What', 'is', 'the', '[MASK]', 'for', 'the', '[MASK]', 'called', '[MASK]']","SELECT employee_ID FROM Employees WHERE employee_name  =  ""Ebba""","['Employees', 'employee_ID', 'Ebba', 'employee_name']","[('Employees', '')]","['employee_ID', 'Ebba', 'employee_name']","select,from,where",False,"['as', 'join', 'where']",1.0,0.3333333333333333
4156,4156,What is the title of the film that has the highest high market estimation.,What is the [MASK] of the [MASK] that has the [MASK] [MASK] [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'has', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]']",SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1,"['film', 'film_market_estimation', 'Film_ID', 'high_estimate', 'title']","[('film', 'T1'), ('film_market_estimation', 'T2')]","['Film_ID', 'high_estimate', 'title']","as,join,limit,order,select,desc,from",True,['where'],0.0,0.0
6802,6802,Which students participate in both Canoeing and Kayaking as their activities? Tell me their student ids.,Which [MASK] [MASK] [MASK] both Canoeing and Kayaking as their [MASK] Tell me their [MASK] ids.,"['Which', '[MASK]', '[MASK]', '[MASK]', 'both', 'Canoeing', 'and', 'Kayaking', 'as', 'their', '[MASK]', 'Tell', 'me', 'their', '[MASK]', 'ids.']",SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking',"['participates_in', 'activity', 'actid', 'activity_name', 'stuid']","[('participates_in', 'T1'), ('activity', 'T2')]","['actid', 'activity_name', 'stuid']","intersect,as,join,from,select,where",True,"['intersect', 'as', 'join', 'where']",1.0,1.0
1107,1107,"Return the names of countries that have players that play the Forward position, as well as players who play the Defender position.",Return the [MASK] of [MASK] that have [MASK] that [MASK] the [MASK] [MASK] as well as [MASK] who [MASK] the [MASK] [MASK],"['Return', 'the', '[MASK]', 'of', '[MASK]', 'that', 'have', '[MASK]', 'that', '[MASK]', 'the', '[MASK]', '[MASK]', 'as', 'well', 'as', '[MASK]', 'who', '[MASK]', 'the', '[MASK]', '[MASK]']","SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  ""Forward"" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  ""Defender""","['country', 'match_season', 'Country_name', 'Country_id', 'Country', 'Defender', 'Position', 'Forward']","[('country', 'T1'), ('match_season', 'T2')]","['Country_name', 'Country_id', 'Country', 'Defender', 'Position', 'Forward']","intersect,as,join,from,select,where",True,"['where', 'as', 'join']",0.75,1.0
490,490,How many students are there for each major?,How many [MASK] are there for each [MASK],"['How', 'many', '[MASK]', 'are', 'there', 'for', 'each', '[MASK]']","SELECT major ,  count(*) FROM Student GROUP BY major","['Student', 'major']","[('Student', '')]",['major'],"select,count,from,group",False,"['group', 'count']",1.0,1.0
315,315,What are the entry names of catalog with the attribute possessed by most entries.,What are the [MASK] [MASK] of [MASK] with the [MASK] possessed by most [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'of', '[MASK]', 'with', 'the', '[MASK]', 'possessed', 'by', 'most', '[MASK]']",SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1),"['Catalog_Contents', 'Catalog_Contents_Additional_Attributes', 'Catalog_Contents_Additional_Attributes', 'catalog_entry_id', 'catalog_entry_name', 'attribute_value']","[('Catalog_Contents', 't1'), ('Catalog_Contents_Additional_Attributes', 't2'), ('Catalog_Contents_Additional_Attributes', '')]","['catalog_entry_id', 'catalog_entry_name', 'attribute_value']","as,group,join,limit,from,count,order,select,desc,where",True,"['group', 'limit', 'count', 'order', 'desc']",0.625,1.0
1474,1474,List in alphabetic order the names of all distinct instructors.,List in alphabetic order the [MASK] of all distinct [MASK],"['List', 'in', 'alphabetic', 'order', 'the', '[MASK]', 'of', 'all', 'distinct', '[MASK]']",SELECT DISTINCT name FROM  instructor ORDER BY name,"['instructor', 'name']","[('instructor', '')]",['name'],"distinct,select,order,from",False,"['distinct', 'order']",1.0,1.0
6128,6128,Find the name of the customer who made an order most recently.,Find the [MASK] of the [MASK] who made an [MASK] most recently.,"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'made', 'an', '[MASK]', 'most', 'recently.']",SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1,"['customers', 'customer_orders', 'customer_id', 'order_date', 'customer_name']","[('customers', 't1'), ('customer_orders', 't2')]","['customer_id', 'order_date', 'customer_name']","as,join,limit,order,select,desc,from",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc']",1.0,0.7142857142857143
381,381,How many flights do we have?,How many [MASK] do we have?,"['How', 'many', '[MASK]', 'do', 'we', 'have?']",SELECT count(*) FROM Flight,['Flight'],"[('Flight', '')]",[],"select,count,from",False,['count'],1.0,1.0
4518,4518,"Give the section titles of the document with the name ""David CV"".","Give the [MASK] [MASK] of the [MASK] with the [MASK] [MASK] CV"".","['Give', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'with', 'the', '[MASK]', '[MASK]', 'CV"".']","SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  ""David CV""","['document_sections', 'documents', 'David CV', 'document_code', 'document_name', 'section_title']","[('document_sections', 't2'), ('documents', 't1')]","['David CV', 'document_code', 'document_name', 'section_title']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
7664,7664,"What are the names of poker players, ordered ascending by the number of final tables they have made?",What are the [MASK] of [MASK] [MASK] ordered ascending by the number of [MASK] [MASK] they have [MASK],"['What', 'are', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', 'ordered', 'ascending', 'by', 'the', 'number', 'of', '[MASK]', '[MASK]', 'they', 'have', '[MASK]']",SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,"['poker_player', 'people', 'Name', 'Final_Table_Made', 'People_ID']","[('poker_player', 'T2'), ('people', 'T1')]","['Name', 'Final_Table_Made', 'People_ID']","as,join,order,select,from",True,"['asc', 'order']",0.3333333333333333,0.5
7968,7968,How many professionals have performed any treatment to dogs?,How many [MASK] have performed any [MASK] to dogs?,"['How', 'many', '[MASK]', 'have', 'performed', 'any', '[MASK]', 'to', 'dogs?']",SELECT count(DISTINCT professional_id) FROM Treatments,"['Treatments', 'professional_id']","[('Treatments', '')]",['professional_id'],"distinct,select,count,from",False,['count'],0.5,1.0
3811,3811,"What are the names of the courses taught by the tutor whose personal name is ""Julio""?",What are the [MASK] of the [MASK] taught by the [MASK] whose [MASK] [MASK] is [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'taught', 'by', 'the', '[MASK]', 'whose', '[MASK]', '[MASK]', 'is', '[MASK]']","SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  ""Julio""","['Course_Authors_and_Tutors', 'Courses', 'personal_name', 'author_id', 'Julio', 'course_name']","[('Course_Authors_and_Tutors', 'T1'), ('Courses', 'T2')]","['personal_name', 'author_id', 'Julio', 'course_name']","as,join,from,select,where",True,"['as', 'join', 'and', 'where']",1.0,0.75
3595,3595,Return the names of singers who are from UK and released an English song.,Return the [MASK] of singers who are from UK and released an [MASK] [MASK],"['Return', 'the', '[MASK]', 'of', 'singers', 'who', 'are', 'from', 'UK', 'and', 'released', 'an', '[MASK]', '[MASK]']","SELECT artist_name FROM artist WHERE country  =  ""UK"" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""english""","['song', 'artist', 'artist', 'english', 'country', 'languages', 'UK', 'artist_name']","[('song', 'T2'), ('artist', ''), ('artist', 'T1')]","['english', 'country', 'languages', 'UK', 'artist_name']","intersect,as,join,where,select,from",True,['where'],0.25,1.0
445,445,Show all allergies and their types.,Show all [MASK] and their [MASK],"['Show', 'all', '[MASK]', 'and', 'their', '[MASK]']","SELECT allergy ,  allergytype FROM Allergy_type","['Allergy_type', 'allergytype', 'allergy']","[('Allergy_type', '')]","['allergytype', 'allergy']","select,from",False,"['count', 'group']",,
4759,4759,Return the name and gender of the staff who was assigned in 2016.,Return the [MASK] and [MASK] of the [MASK] who was [MASK] in [MASK],"['Return', 'the', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'who', 'was', '[MASK]', 'in', '[MASK]']","SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE ""2016%""","['staff', 'staff_department_assignments', '2016%', 'staff_id', 'date_assigned_from', 'staff_name', 'staff_gender']","[('staff', 'T1'), ('staff_department_assignments', 'T2')]","['2016%', 'staff_id', 'date_assigned_from', 'staff_name', 'staff_gender']","like,as,join,from,select,where",True,['where'],0.25,1.0
5120,5120,"Which city is the address of the store named ""FJA Filming"" located in?","Which [MASK] is the [MASK] of the [MASK] [MASK] ""FJA [MASK] located in?","['Which', '[MASK]', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', '""FJA', '[MASK]', 'located', 'in?']","SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  ""FJA Filming""","['Addresses', 'Stores', 'FJA Filming', 'City_Town', 'Store_Name', 'Address_ID']","[('Addresses', 'T1'), ('Stores', 'T2')]","['FJA Filming', 'City_Town', 'Store_Name', 'Address_ID']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
2827,2827,What is the gender of the student Linda Smith?,What is the gender of the [MASK] [MASK] [MASK],"['What', 'is', 'the', 'gender', 'of', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT Sex FROM Student WHERE Fname = ""Linda"" AND Lname = ""Smith"";","['Student', 'Lname', 'Smith', 'Fname', 'Sex', 'Linda']","[('Student', '')]","['Lname', 'Smith', 'Fname', 'Sex', 'Linda']","select,and,from,where",False,"['where', 'count']",0.5,0.5
4072,4072,How many teachers does the student named CHRISSY NABOZNY have?,How many [MASK] does the [MASK] [MASK] [MASK] [MASK] have?,"['How', 'many', '[MASK]', 'does', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'have?']","SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""CHRISSY"" AND T1.lastname  =  ""NABOZNY""","['list', 'teachers', 'firstname', 'classroom', 'lastname', 'NABOZNY', 'CHRISSY']","[('list', 'T1'), ('teachers', 'T2')]","['firstname', 'classroom', 'lastname', 'NABOZNY', 'CHRISSY']","as,join,count,and,where,select,from",True,"['as', 'join', 'count', 'where']",0.8,1.0
7673,7673,What are different nationalities of people and the corresponding number of people from each nation?,What are different [MASK] of [MASK] and the corresponding number of [MASK] from each [MASK],"['What', 'are', 'different', '[MASK]', 'of', '[MASK]', 'and', 'the', 'corresponding', 'number', 'of', '[MASK]', 'from', 'each', '[MASK]']","SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","['people', 'Nationality']","[('people', '')]",['Nationality'],"select,count,from,group",False,"['count', 'group']",1.0,1.0
626,626,What is the name of all tracks in the album named Balls to the Wall?,What is the [MASK] of all [MASK] in the [MASK] [MASK] [MASK] to the [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'all', '[MASK]', 'in', 'the', '[MASK]', '[MASK]', '[MASK]', 'to', 'the', '[MASK]']","SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = ""Balls to the Wall"";","['tracks', 'albums', 'title', 'name', 'genre_id', 'id', 'Balls to the Wall']","[('tracks', 'T2'), ('albums', 'T1')]","['title', 'name', 'genre_id', 'id', 'Balls to the Wall']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
5577,5577,How many products have their color described as 'white' or have a characteristic with the name 'hot'?,How many [MASK] have their [MASK] [MASK] as [MASK] or have a [MASK] with the [MASK] 'hot'?,"['How', 'many', '[MASK]', 'have', 'their', '[MASK]', '[MASK]', 'as', '[MASK]', 'or', 'have', 'a', '[MASK]', 'with', 'the', '[MASK]', ""'hot'?""]","SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  ""white"" OR t3.characteristic_name  =  ""hot""","['CHARACTERISTICS', 'products', 'product_characteristics', 'ref_colors', 'white', 'characteristic_name', 'hot', 'characteristic_id', 'color_code', 'product_id', 'color_description']","[('CHARACTERISTICS', 't3'), ('products', 't1'), ('product_characteristics', 't2'), ('ref_colors', 't4')]","['white', 'characteristic_name', 'hot', 'characteristic_id', 'color_code', 'product_id', 'color_description']","as,join,count,where,or,select,from",True,"['as', 'join', 'count', 'where']",0.8,1.0
5608,5608,Find the country that has the most stadiums.,Find the [MASK] that has the most [MASK],"['Find', 'the', '[MASK]', 'that', 'has', 'the', 'most', '[MASK]']",SELECT country FROM stadium GROUP BY country ORDER BY count(*) DESC LIMIT 1,"['stadium', 'country']","[('stadium', '')]",['country'],"group,limit,count,order,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",1.0,1.0
1112,1112,List the names of climbers in descending order of points.,List the [MASK] of [MASK] in descending order of [MASK],"['List', 'the', '[MASK]', 'of', '[MASK]', 'in', 'descending', 'order', 'of', '[MASK]']",SELECT Name FROM climber ORDER BY Points DESC,"['climber', 'Name', 'Points']","[('climber', '')]","['Name', 'Points']","select,order,desc,from",False,"['order', 'desc']",1.0,1.0
5603,5603,List all the event names by year from the most recent to the oldest.,List all the [MASK] [MASK] by [MASK] from the most recent to the oldest.,"['List', 'all', 'the', '[MASK]', '[MASK]', 'by', '[MASK]', 'from', 'the', 'most', 'recent', 'to', 'the', 'oldest.']",SELECT name FROM event ORDER BY YEAR DESC,"['event', 'YEAR', 'name']","[('event', '')]","['YEAR', 'name']","select,order,desc,from",False,"['order', 'desc']",1.0,1.0
1484,1484,Find the total number of instructors who teach a course in the Spring 2010 semester.,Find the total number of instructors who [MASK] a [MASK] in the Spring 2010 [MASK],"['Find', 'the', 'total', 'number', 'of', 'instructors', 'who', '[MASK]', 'a', '[MASK]', 'in', 'the', 'Spring', '2010', '[MASK]']",SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010,"['teaches', 'semester', 'ID', 'YEAR']","[('teaches', '')]","['semester', 'ID', 'YEAR']","distinct,count,and,where,select,from",False,"['distinct', 'count', 'and', 'where']",1.0,1.0
7245,7245,"What are flight numbers of Airline ""United Airlines""?",What are [MASK] numbers of [MASK] [MASK] [MASK],"['What', 'are', '[MASK]', 'numbers', 'of', '[MASK]', '[MASK]', '[MASK]']","SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""","['FLIGHTS', 'AIRLINES', 'United Airlines', 'Airline', 'FlightNo', 'uid']","[('FLIGHTS', 'T1'), ('AIRLINES', 'T2')]","['United Airlines', 'Airline', 'FlightNo', 'uid']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
4364,4364,Which document type is described with the prefix 'Initial'?,Which [MASK] [MASK] is [MASK] with the prefix 'Initial'?,"['Which', '[MASK]', '[MASK]', 'is', '[MASK]', 'with', 'the', 'prefix', ""'Initial'?""]",SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%',"['Document_Types', 'document_description', 'document_type_code']","[('Document_Types', '')]","['document_description', 'document_type_code']","select,like,from,where",False,['where'],0.5,1.0
2977,2977,Give the full name and staff id of the staff who has handled the fewest payments.,Give the full [MASK] and [MASK] [MASK] of the [MASK] who has handled the fewest [MASK],"['Give', 'the', 'full', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'who', 'has', 'handled', 'the', 'fewest', '[MASK]']","SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1","['staff', 'payment', 'staff_id', 'first_name', 'last_name']","[('staff', 'T1'), ('payment', 'T2')]","['staff_id', 'first_name', 'last_name']","asc,as,group,join,limit,count,order,select,from",True,"['as', 'group', 'join', 'limit', 'count', 'order']",0.8571428571428571,1.0
3195,3195,Find the number of departments in each school.,Find the number of [MASK] in each [MASK],"['Find', 'the', 'number', 'of', '[MASK]', 'in', 'each', '[MASK]']","SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code","['department', 'school_code', 'dept_name']","[('department', '')]","['school_code', 'dept_name']","distinct,group,count,select,from",False,"['count', 'group']",0.6666666666666666,1.0
5417,5417,"What are the card numbers, names, and hometowns of every member ordered by descending level?",What are the [MASK] [MASK] [MASK] and [MASK] of every [MASK] ordered by descending [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'every', '[MASK]', 'ordered', 'by', 'descending', '[MASK]']","SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC","['member', 'card_number', 'LEVEL', 'hometown', 'name']","[('member', '')]","['card_number', 'LEVEL', 'hometown', 'name']","select,order,desc,from",False,"['order', 'desc', 'as', 'join']",1.0,0.5
6001,6001,How many students play sports?,How many [MASK] [MASK] [MASK],"['How', 'many', '[MASK]', '[MASK]', '[MASK]']",SELECT count(DISTINCT StuID) FROM Sportsinfo,"['Sportsinfo', 'StuID']","[('Sportsinfo', '')]",['StuID'],"distinct,select,count,from",False,"['as', 'join', 'count', 'where']",0.5,0.25
5215,5215,"How many different instruments does the musician with the last name ""Heilo"" use?",How many different [MASK] does the musician with the [MASK] [MASK] [MASK] use?,"['How', 'many', 'different', '[MASK]', 'does', 'the', 'musician', 'with', 'the', '[MASK]', '[MASK]', '[MASK]', 'use?']","SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo""","['Band', 'instruments', 'Heilo', 'lastname', 'id', 'bandmateid', 'instrument']","[('Band', 'T2'), ('instruments', 'T1')]","['Heilo', 'lastname', 'id', 'bandmateid', 'instrument']","distinct,as,join,count,where,select,from",True,"['distinct', 'count']",0.4,1.0
3805,3805,"What are the addresses of the course authors who teach either ""operating system"" or ""data structure"" course.",What are the [MASK] of the [MASK] [MASK] who teach either [MASK] [MASK] or [MASK] [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'who', 'teach', 'either', '[MASK]', '[MASK]', 'or', '[MASK]', '[MASK]', '[MASK]']","SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  ""operating system"" OR T2.course_name  =  ""data structure""","['Course_Authors_and_Tutors', 'Courses', 'operating system', 'course_name', 'author_id', 'address_line_1', 'data structure']","[('Course_Authors_and_Tutors', 'T1'), ('Courses', 'T2')]","['operating system', 'course_name', 'author_id', 'address_line_1', 'data structure']","as,join,from,or,select,where",True,"['as', 'join', 'and', 'where']",0.75,0.75
11,11,How many departments are led by heads who are not mentioned?,How many [MASK] are led by heads who are not [MASK],"['How', 'many', '[MASK]', 'are', 'led', 'by', 'heads', 'who', 'are', 'not', '[MASK]']",SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);,"['department', 'management', 'department_id']","[('department', ''), ('management', '')]",['department_id'],"where,in,count,not,select,from",False,"['where', 'in', 'count', 'not']",1.0,1.0
4210,4210,Show the role code with the least employees.,Show the [MASK] [MASK] with the least [MASK],"['Show', 'the', '[MASK]', '[MASK]', 'with', 'the', 'least', '[MASK]']",SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1,"['Employees', 'role_code']","[('Employees', '')]",['role_code'],"asc,group,limit,count,order,select,from",False,"['asc', 'as', 'group', 'join', 'limit', 'count', 'order']",1.0,0.7142857142857143
843,843,What is the average unit price of tracks that belong to Jazz genre?,What is the average [MASK] [MASK] of [MASK] that belong to [MASK] [MASK],"['What', 'is', 'the', 'average', '[MASK]', '[MASK]', 'of', '[MASK]', 'that', 'belong', 'to', '[MASK]', '[MASK]']","SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Jazz""","['GENRE', 'TRACK', 'Name', 'Jazz', 'UnitPrice', 'GenreId']","[('GENRE', 'T1'), ('TRACK', 'T2')]","['Name', 'Jazz', 'UnitPrice', 'GenreId']","where,as,join,avg,select,from",True,"['where', 'avg']",0.5,1.0
1452,1452,Find the name of students who didn't take any course from Biology department.,Find the [MASK] of [MASK] who didn't [MASK] any [MASK] from Biology [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', 'who', ""didn't"", '[MASK]', 'any', '[MASK]', 'from', 'Biology', '[MASK]']",SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology'),"['course', 'takes', 'student', 'course_id', 'dept_name', 'id', 'name']","[('course', 'T2'), ('takes', 'T1'), ('student', '')]","['course_id', 'dept_name', 'id', 'name']","where,as,in,join,not,select,from",True,"['where', 'in', 'not']",0.6,1.0
7425,7425,What is the total ticket expense of the visitors whose membership level is 1?,What is the [MASK] ticket expense [MASK] the [MASK] whose [MASK] [MASK] is 1?,"['What', 'is', 'the', '[MASK]', 'ticket', 'expense', '[MASK]', 'the', '[MASK]', 'whose', '[MASK]', '[MASK]', 'is', '1?']",SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1,"['visitor', 'visit', 'Level_of_membership', 'visitor_id', 'id', 'Total_spent']","[('visitor', 't1'), ('visit', 't2')]","['Level_of_membership', 'visitor_id', 'id', 'Total_spent']","as,join,sum,where,select,from",True,"['join', 'where']",0.5,1.0
5851,5851,"Show all dates of transactions whose type code is ""SALE"".",Show all [MASK] [MASK] [MASK] whose [MASK] [MASK] is [MASK],"['Show', 'all', '[MASK]', '[MASK]', '[MASK]', 'whose', '[MASK]', '[MASK]', 'is', '[MASK]']","SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code  =  ""SALE""","['TRANSACTIONS', 'transaction_type_code', 'SALE', 'date_of_transaction']","[('TRANSACTIONS', '')]","['transaction_type_code', 'SALE', 'date_of_transaction']","select,from,where",False,['where'],1.0,1.0
1973,1973,What are the daily hire costs for the products with substring 'Book' in its name?,What are the [MASK] [MASK] [MASK] [MASK] the [MASK] with substring 'Book' in its [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'the', '[MASK]', 'with', 'substring', ""'Book'"", 'in', 'its', '[MASK]']",SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '%Book%',"['Products_for_hire', 'product_name', 'daily_hire_cost']","[('Products_for_hire', '')]","['product_name', 'daily_hire_cost']","select,like,from,where",False,"['like', 'where']",1.0,1.0
1788,1788,What is the checking balance of the account whose owner’s name contains the substring ‘ee’?,What is the [MASK] [MASK] of the [MASK] whose owner’s [MASK] contains the substring ‘ee’?,"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'whose', 'owner’s', '[MASK]', 'contains', 'the', 'substring', '‘ee’?']",SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%',"['checking', 'accounts', 'custid', 'balance', 'name']","[('checking', 'T2'), ('accounts', 'T1')]","['custid', 'balance', 'name']","like,as,join,from,select,where",True,"['like', 'where']",0.5,1.0
2400,2400,Find the id of the candidate who got the lowest oppose rate.,Find the [MASK] of the [MASK] who got the lowest [MASK] [MASK],"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'got', 'the', 'lowest', '[MASK]', '[MASK]']",SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1,"['candidate', 'oppose_rate', 'Candidate_ID']","[('candidate', '')]","['oppose_rate', 'Candidate_ID']","select,limit,order,from",False,"['limit', 'order']",1.0,1.0
2700,2700,"List name, dates active, and number of deaths for all storms with at least 1 death.",List [MASK] [MASK] [MASK] and [MASK] of [MASK] for all [MASK] with at least 1 [MASK],"['List', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', '[MASK]', 'for', 'all', '[MASK]', 'with', 'at', 'least', '1', '[MASK]']","SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1","['storm', 'number_deaths', 'dates_active', 'name']","[('storm', '')]","['number_deaths', 'dates_active', 'name']","select,from,where",False,[],,
773,773,What are the names for tracks without a race in class 'GT'.,What are the [MASK] for [MASK] without a [MASK] in [MASK] 'GT'.,"['What', 'are', 'the', '[MASK]', 'for', '[MASK]', 'without', 'a', '[MASK]', 'in', '[MASK]', ""'GT'.""]",SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT',"['race', 'track', 'track', 'track_id', 'class', 'name']","[('race', 'T1'), ('track', 'T2'), ('track', '')]","['track_id', 'class', 'name']","as,except,join,where,select,from",True,"['where', 'in', 'not']",0.25,0.3333333333333333
6075,6075,"Find the detail of products whose detail contains the word ""Latte"" or the word ""Americano""",Find the [MASK] of [MASK] whose [MASK] contains the word [MASK] or the word [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', 'contains', 'the', 'word', '[MASK]', 'or', 'the', 'word', '[MASK]']","SELECT product_details FROM products WHERE product_details LIKE ""%Latte%"" OR product_details LIKE ""%Americano%""","['products', '%Latte%', '%Americano%', 'product_details']","[('products', '')]","['%Latte%', '%Americano%', 'product_details']","like,where,or,select,from",False,"['like', 'where']",0.6666666666666666,1.0
4786,4786,What are the distinct names of products purchased by at least two different customers?,What are the distinct [MASK] of [MASK] purchased by at least two different [MASK],"['What', 'are', 'the', 'distinct', '[MASK]', 'of', '[MASK]', 'purchased', 'by', 'at', 'least', 'two', 'different', '[MASK]']",SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2,"['customer_orders', 'products', 'order_items', 'customer_id', 'product_id', 'product_name', 'order_id']","[('customer_orders', 'T1'), ('products', 'T3'), ('order_items', 'T2')]","['customer_id', 'product_id', 'product_name', 'order_id']","distinct,as,group,join,count,having,select,from",True,"['as', 'group', 'join', 'count', 'having']",0.8333333333333334,1.0
6042,6042,What are the ids of all students and number of hours played?,What are the [MASK] of all [MASK] and number of [MASK] [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'all', '[MASK]', 'and', 'number', 'of', '[MASK]', '[MASK]']","SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid","['Plays_games', 'Stuid', 'hours_played']","[('Plays_games', '')]","['Stuid', 'hours_played']","select,sum,from,group",False,"['count', 'group']",0.5,0.5
790,790,Find the number of members living in each address.,Find the [MASK] of [MASK] living in each [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', 'living', 'in', 'each', '[MASK]']","SELECT count(*) ,  address FROM member GROUP BY address","['member', 'address']","[('member', '')]",['address'],"select,count,from,group",False,"['distinct', 'as', 'join', 'where']",0.0,0.0
6675,6675,What is the status code with the least number of customers?,What is the [MASK] [MASK] with the least number of [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'with', 'the', 'least', 'number', 'of', '[MASK]']",SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;,"['Customers', 'customer_status_code']","[('Customers', '')]",['customer_status_code'],"asc,group,limit,count,order,select,from",False,"['asc', 'group', 'limit', 'count', 'order']",1.0,1.0
2915,2915,"Which authors have last name ""Ueno""? List their first names.",Which [MASK] have last [MASK] [MASK] List their first [MASK],"['Which', '[MASK]', 'have', 'last', '[MASK]', '[MASK]', 'List', 'their', 'first', '[MASK]']","SELECT fname FROM authors WHERE lname  =  ""Ueno""","['authors', 'fname', 'Ueno', 'lname']","[('authors', '')]","['fname', 'Ueno', 'lname']","select,from,where",False,"['join', 'where']",1.0,0.5
4265,4265,"How many people have membership in the club ""Pen and Paper Gaming""?","How many people have [MASK] in the [MASK] ""Pen and [MASK] [MASK]","['How', 'many', 'people', 'have', '[MASK]', 'in', 'the', '[MASK]', '""Pen', 'and', '[MASK]', '[MASK]']","SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Pen and Paper Gaming""","['student', 'member_of_club', 'club', 'clubid', 'clubname', 'Pen and Paper Gaming', 'stuid']","[('student', 't3'), ('member_of_club', 't2'), ('club', 't1')]","['clubid', 'clubname', 'Pen and Paper Gaming', 'stuid']","as,join,count,and,where,select,from",True,"['count', 'distinct']",0.2,0.5
6383,6383,which countries have more than 2 airports?,which [MASK] have more than 2 [MASK],"['which', '[MASK]', 'have', 'more', 'than', '2', '[MASK]']",SELECT country FROM airport GROUP BY country HAVING count(*)  >  2,"['airport', 'country']","[('airport', '')]",['country'],"group,count,having,select,from",False,"['group', 'count', 'having']",1.0,1.0
3349,3349,How many clubs have total medals less than 10?,How many [MASK] have [MASK] medals less than 10?,"['How', 'many', '[MASK]', 'have', '[MASK]', 'medals', 'less', 'than', '10?']",SELECT count(*) FROM club_rank WHERE Total  <  10,"['club_rank', 'Total']","[('club_rank', '')]",['Total'],"select,count,from,where",False,['avg'],0.0,0.0
5280,5280,How many companies were created by Andy?,How many companies were created by Andy?,"['How', 'many', 'companies', 'were', 'created', 'by', 'Andy?']",SELECT count(*) FROM manufacturers WHERE founder  =  'Andy',"['manufacturers', 'founder']","[('manufacturers', '')]",['founder'],"select,count,from,where",False,['count'],0.5,1.0
2121,2121,"List the document ids of documents with the status done and type Paper, which not shipped by the shipping agent named USPS.",List the [MASK] [MASK] of [MASK] with the [MASK] [MASK] and [MASK] [MASK] which not [MASK] by the [MASK] [MASK] [MASK] [MASK],"['List', 'the', '[MASK]', '[MASK]', 'of', '[MASK]', 'with', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'which', 'not', '[MASK]', 'by', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT document_id FROM Documents WHERE document_status_code  =  ""done"" AND document_type_code = ""Paper"" EXCEPT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = ""USPS"";","['Documents', 'Ref_Shipping_Agents', 'document_type_code', 'document_status_code', 'shipping_agent_name', 'shipping_agent_code', 'Paper', 'document_id', 'USPS', 'done']","[('Documents', ''), ('Ref_Shipping_Agents', '')]","['document_type_code', 'document_status_code', 'shipping_agent_name', 'shipping_agent_code', 'Paper', 'document_id', 'USPS', 'done']","except,join,and,where,select,from",True,['where'],0.25,1.0
1553,1553,"Show the id, the account name, and other account details for all accounts by the customer with first name 'Meaghan'.","Show the id, the [MASK] [MASK] and [MASK] [MASK] [MASK] for all [MASK] by the [MASK] with [MASK] [MASK] 'Meaghan'.","['Show', 'the', 'id,', 'the', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', '[MASK]', 'for', 'all', '[MASK]', 'by', 'the', '[MASK]', 'with', '[MASK]', '[MASK]', ""'Meaghan'.""]","SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'","['Accounts', 'Customers', 'other_account_details', 'account_id', 'customer_first_name', 'account_name', 'date_account_opened', 'customer_id']","[('Accounts', 'T1'), ('Customers', 'T2')]","['other_account_details', 'account_id', 'customer_first_name', 'account_name', 'date_account_opened', 'customer_id']","as,join,from,select,where",True,[],,
3134,3134,"For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",For all the [MASK] of different [MASK] what are all the [MASK] of the [MASK] [MASK] [MASK] [MASK] them? List the [MASK] of the [MASK] and the [MASK] [MASK],"['For', 'all', 'the', '[MASK]', 'of', 'different', '[MASK]', 'what', 'are', 'all', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]', 'them?', 'List', 'the', '[MASK]', 'of', 'the', '[MASK]', 'and', 'the', '[MASK]', '[MASK]']","SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id","['Skills_Required_To_Fix', 'Part_Faults', 'Skills', 'part_fault_id', 'fault_short_name', 'skill_description', 'skill_id']","[('Skills_Required_To_Fix', 'T2'), ('Part_Faults', 'T1'), ('Skills', 'T3')]","['part_fault_id', 'fault_short_name', 'skill_description', 'skill_id']","select,join,from,as",True,"['join', 'as']",1.0,1.0
6905,6905,Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01.,Give me the [MASK] of [MASK] who have [MASK] [MASK] between [MASK] and [MASK],"['Give', 'me', 'the', '[MASK]', 'of', '[MASK]', 'who', 'have', '[MASK]', '[MASK]', 'between', '[MASK]', 'and', '[MASK]']","SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= ""2009-01-01"" AND T2.date_order_placed <= ""2010-01-01""","['orders', 'customers', 'customer_name', '2009-01-01', 'customer_id', 'date_order_placed', '2010-01-01']","[('orders', 'T2'), ('customers', 'T1')]","['customer_name', '2009-01-01', 'customer_id', 'date_order_placed', '2010-01-01']","as,join,from,and,select,where",True,"['as', 'join', 'and', 'where']",1.0,1.0
7660,7660,Return the names of all the poker players.,Return the [MASK] of all the [MASK] [MASK],"['Return', 'the', '[MASK]', 'of', 'all', 'the', '[MASK]', '[MASK]']",SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID,"['poker_player', 'people', 'Name', 'People_ID']","[('poker_player', 'T2'), ('people', 'T1')]","['Name', 'People_ID']","select,join,from,as",True,[],,
6884,6884,What is the name of the airport that is the destination of the most number of routes that start in China?,What is the [MASK] of the [MASK] that is the destination of the most number of [MASK] that start in China?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'is', 'the', 'destination', 'of', 'the', 'most', 'number', 'of', '[MASK]', 'that', 'start', 'in', 'China?']",SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1,"['airports', 'routes', 'dst_apid', 'country', 'apid', 'name']","[('airports', 'T1'), ('routes', 'T2')]","['dst_apid', 'country', 'apid', 'name']","as,group,join,limit,from,count,order,select,desc,where",True,"['as', 'group', 'join', 'limit', 'count', 'order', 'desc', 'where']",1.0,1.0
4846,4846,"What is the maximum number that a certain service is provided? List the service id, details and number.","What is the maximum number that a certain [MASK] is provided? List the [MASK] id, [MASK] and number.","['What', 'is', 'the', 'maximum', 'number', 'that', 'a', 'certain', '[MASK]', 'is', 'provided?', 'List', 'the', '[MASK]', 'id,', '[MASK]', 'and', 'number.']","SELECT T1.service_id ,  T1.service_details ,  count(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id  =  T2.service_id GROUP BY T1.service_id ORDER BY count(*) DESC LIMIT 1","['Residents_Services', 'Services', 'service_details', 'service_id']","[('Residents_Services', 'T2'), ('Services', 'T1')]","['service_details', 'service_id']","as,group,join,limit,count,order,select,desc,from",True,"['group', 'limit', 'order', 'desc', 'count']",0.7142857142857143,1.0
6885,6885,What is the id of the most recent order?,What is the [MASK] of the most recent [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', 'most', 'recent', '[MASK]']",SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1,"['orders', 'date_order_placed', 'order_id']","[('orders', '')]","['date_order_placed', 'order_id']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
2878,2878,"What are the last names of the author of the paper titled ""Binders Unbound""?",What are the last [MASK] of the [MASK] of the [MASK] [MASK] [MASK] [MASK],"['What', 'are', 'the', 'last', '[MASK]', 'of', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  ""Binders Unbound""","['papers', 'authors', 'authorship', 'paperid', 'title', 'authid', 'Binders Unbound', 'lname']","[('papers', 't3'), ('authors', 't1'), ('authorship', 't2')]","['paperid', 'title', 'authid', 'Binders Unbound', 'lname']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
1819,1819,"What are the names, checking balances, and savings balances of customers, ordered by the total of checking and savings balances descending?",What are the [MASK] [MASK] [MASK] and [MASK] [MASK] of [MASK] ordered by the total of [MASK] and [MASK] [MASK] descending?,"['What', 'are', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', '[MASK]', 'of', '[MASK]', 'ordered', 'by', 'the', 'total', 'of', '[MASK]', 'and', '[MASK]', '[MASK]', 'descending?']","SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC","['checking', 'savings', 'accounts', 'custid', 'balance', 'name']","[('checking', 'T2'), ('savings', 'T3'), ('accounts', 'T1')]","['custid', 'balance', 'name']","as,join,order,select,desc,from",True,"['order', 'desc']",0.5,1.0
6191,6191,Show the famous titles of the artists with both volumes that lasted more than 2 weeks on top and volumes that lasted less than 2 weeks on top.,Show the [MASK] [MASK] of the [MASK] with both [MASK] that lasted more than 2 [MASK] [MASK] [MASK] and [MASK] that lasted less than 2 [MASK] [MASK] top.,"['Show', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'with', 'both', '[MASK]', 'that', 'lasted', 'more', 'than', '2', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'that', 'lasted', 'less', 'than', '2', '[MASK]', '[MASK]', 'top.']",SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  <  2,"['volume', 'artist', 'Artist_ID', 'Famous_Title', 'Weeks_on_Top']","[('volume', 'T2'), ('artist', 'T1')]","['Artist_ID', 'Famous_Title', 'Weeks_on_Top']","intersect,as,join,from,select,where",True,"['as', 'join', 'where']",0.75,1.0
2810,2810,Show the nations that have both journalists with more than 10 years of working and journalists with less than 3 years of working.,Show the [MASK] that have both [MASK] with more than 10 [MASK] of [MASK] and [MASK] with less than 3 [MASK] of [MASK],"['Show', 'the', '[MASK]', 'that', 'have', 'both', '[MASK]', 'with', 'more', 'than', '10', '[MASK]', 'of', '[MASK]', 'and', '[MASK]', 'with', 'less', 'than', '3', '[MASK]', 'of', '[MASK]']",SELECT Nationality FROM journalist WHERE Years_working  >  10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working  <  3,"['journalist', 'Years_working', 'Nationality']","[('journalist', '')]","['Years_working', 'Nationality']","intersect,select,from,where",False,"['intersect', 'where']",1.0,1.0
591,591,What is the address of employee Nancy Edwards?,What is the [MASK] of [MASK] [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'of', '[MASK]', '[MASK]', '[MASK]']","SELECT address FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards"";","['employees', 'address', 'Nancy', 'last_name', 'Edwards', 'first_name']","[('employees', '')]","['address', 'Nancy', 'last_name', 'Edwards', 'first_name']","select,and,from,where",False,['where'],0.5,1.0
4903,4903,What is the maximum page size for everything that has more than 3 products listed?,What is the maximum [MASK] [MASK] for everything that has more than 3 [MASK] listed?,"['What', 'is', 'the', 'maximum', '[MASK]', '[MASK]', 'for', 'everything', 'that', 'has', 'more', 'than', '3', '[MASK]', 'listed?']",SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3,"['product', 'max_page_size']","[('product', '')]",['max_page_size'],"group,count,having,select,from",False,['max'],0.0,0.0
5179,5179,"What are the different stage positions for all musicians whose first name is ""Solveig""?",What are the different [MASK] [MASK] for all musicians whose [MASK] [MASK] is [MASK],"['What', 'are', 'the', 'different', '[MASK]', '[MASK]', 'for', 'all', 'musicians', 'whose', '[MASK]', '[MASK]', 'is', '[MASK]']","SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  ""Solveig""","['Performance', 'Band', 'Solveig', 'bandmate', 'stageposition', 'Firstname', 'id']","[('Performance', 'T1'), ('Band', 'T2')]","['Solveig', 'bandmate', 'stageposition', 'Firstname', 'id']","distinct,as,join,where,select,from",True,[],,
6649,6649,What is the zip code of the hosue of the employee named Janessa Sawayn?,What is the [MASK] [MASK] of the hosue of the [MASK] [MASK] [MASK] [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', 'hosue', 'of', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";","['Staff', 'Addresses', 'Janessa', 'address_id', 'zip_postcode', 'last_name', 'staff_address_id', 'Sawayn', 'first_name']","[('Staff', 'T2'), ('Addresses', 'T1')]","['Janessa', 'address_id', 'zip_postcode', 'last_name', 'staff_address_id', 'Sawayn', 'first_name']","as,join,from,and,select,where",True,['where'],0.25,1.0
1044,1044,Find the accreditation level that more than 3 phones use.,Find the [MASK] [MASK] that more than 3 [MASK] use.,"['Find', 'the', '[MASK]', '[MASK]', 'that', 'more', 'than', '3', '[MASK]', 'use.']",SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count(*)  >  3,"['phone', 'Accreditation_level']","[('phone', '')]",['Accreditation_level'],"group,count,having,select,from",False,"['group', 'count']",0.6666666666666666,1.0
4040,4040,Find the grade studying in room 105.,Find the [MASK] [MASK] in [MASK] 105.,"['Find', 'the', '[MASK]', '[MASK]', 'in', '[MASK]', '105.']",SELECT DISTINCT grade FROM list WHERE classroom  =  105,"['list', 'classroom', 'grade']","[('list', '')]","['classroom', 'grade']","distinct,select,from,where",False,['where'],0.5,1.0
5544,5544,"What is the color description of the product with name ""catnip""?",What is the [MASK] [MASK] of the [MASK] with [MASK] [MASK],"['What', 'is', 'the', '[MASK]', '[MASK]', 'of', 'the', '[MASK]', 'with', '[MASK]', '[MASK]']","SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  ""catnip""","['ref_colors', 'products', 'color_code', 'product_name', 'color_description', 'catnip']","[('ref_colors', 't2'), ('products', 't1')]","['color_code', 'product_name', 'color_description', 'catnip']","as,join,from,select,where",True,['where'],0.3333333333333333,1.0
4748,4748,What is the code of the product type with an average price higher than the average price of all products?,What is the [MASK] of the [MASK] [MASK] with an average [MASK] higher than the average [MASK] of all [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', '[MASK]', 'with', 'an', 'average', '[MASK]', 'higher', 'than', 'the', 'average', '[MASK]', 'of', 'all', '[MASK]']",SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products),"['products', 'product_price', 'product_type_code']","[('products', '')]","['product_price', 'product_type_code']","group,having,avg,select,from",False,"['avg', 'where']",0.3333333333333333,0.5
6336,6336,"Find the name of organizations whose names contain ""Party"".",Find the [MASK] of [MASK] whose [MASK] contain [MASK],"['Find', 'the', '[MASK]', 'of', '[MASK]', 'whose', '[MASK]', 'contain', '[MASK]']","SELECT organization_name FROM organizations WHERE organization_name LIKE ""%Party%""","['organizations', '%Party%', 'organization_name']","[('organizations', '')]","['%Party%', 'organization_name']","select,like,from,where",False,"['like', 'where']",1.0,1.0
5762,5762,Find the first and last name of students who are living in the dorms that have amenity TV Lounge.,Find the first and last [MASK] of [MASK] who are living [MASK] the [MASK] that have [MASK] TV Lounge.,"['Find', 'the', 'first', 'and', 'last', '[MASK]', 'of', '[MASK]', 'who', 'are', 'living', '[MASK]', 'the', '[MASK]', 'that', 'have', '[MASK]', 'TV', 'Lounge.']","SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')","['student', 'lives_in', 'has_amenity', 'dorm_amenity', 'amenity_name', 'lname', 'fname', 'dormid', 'amenid', 'stuid']","[('student', 'T1'), ('lives_in', 'T2'), ('has_amenity', 'T3'), ('dorm_amenity', 'T4')]","['amenity_name', 'lname', 'fname', 'dormid', 'amenid', 'stuid']","as,in,join,from,select,where",True,"['as', 'in', 'join', 'not', 'where']",1.0,0.8
5335,5335,How many products have prices of at least 180?,How many [MASK] have [MASK] of at least 180?,"['How', 'many', '[MASK]', 'have', '[MASK]', 'of', 'at', 'least', '180?']",SELECT count(*) FROM products WHERE price >= 180,"['products', 'price']","[('products', '')]",['price'],"select,count,from,where",False,"['count', 'where']",1.0,1.0
244,244,What is the duration of the oldest actor?,What is the [MASK] of the oldest [MASK],"['What', 'is', 'the', '[MASK]', 'of', 'the', 'oldest', '[MASK]']",SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1,"['actor', 'Duration', 'Age']","[('actor', '')]","['Duration', 'Age']","limit,order,select,desc,from",False,"['limit', 'order', 'desc']",1.0,1.0
1387,1387,"Show all titles and their instructors' names for courses in 2008, in alphabetical order by title.","Show all [MASK] and their [MASK] [MASK] for [MASK] in 2008, in alphabetical order by [MASK]","['Show', 'all', '[MASK]', 'and', 'their', '[MASK]', '[MASK]', 'for', '[MASK]', 'in', '2008,', 'in', 'alphabetical', 'order', 'by', '[MASK]']","SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title","['instructor', 'teaches', 'course', 'title', 'course_id', 'YEAR', 'name', 'id']","[('instructor', 'T3'), ('teaches', 'T2'), ('course', 'T1')]","['title', 'course_id', 'YEAR', 'name', 'id']","as,join,from,order,select,where",True,['order'],0.25,1.0
2022,2022,What are the headquarters without companies that are in the banking industry?,What are the [MASK] without [MASK] that are in the banking [MASK],"['What', 'are', 'the', '[MASK]', 'without', '[MASK]', 'that', 'are', 'in', 'the', 'banking', '[MASK]']",SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  'Banking',"['company', 'main_industry', 'headquarters']","[('company', '')]","['main_industry', 'headquarters']","select,except,from,where",False,"['except', 'where']",1.0,1.0
59,59,What are the ids of the students who registered for some courses but had the least number of courses for all students?,What are the [MASK] of the [MASK] who [MASK] for some [MASK] but had the least number of [MASK] for all [MASK],"['What', 'are', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', '[MASK]', 'for', 'some', '[MASK]', 'but', 'had', 'the', 'least', 'number', 'of', '[MASK]', 'for', 'all', '[MASK]']",SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1,"['student_course_registrations', 'student_id']","[('student_course_registrations', '')]",['student_id'],"group,limit,count,order,select,from",False,"['group', 'limit', 'count', 'order']",1.0,1.0
5341,5341,"What are the average prices of products, grouped by manufacturer code?",What are the average [MASK] of [MASK] grouped by [MASK] code?,"['What', 'are', 'the', 'average', '[MASK]', 'of', '[MASK]', 'grouped', 'by', '[MASK]', 'code?']","SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer","['Products', 'Price', 'Manufacturer']","[('Products', '')]","['Price', 'Manufacturer']","group,select,from,avg",False,"['group', 'avg']",1.0,1.0
176,176,"What is the date, average temperature and mean humidity for the days with the 3 largest maximum gust speeds?",What is the [MASK] average [MASK] and [MASK] [MASK] for the days with the 3 largest maximum [MASK] [MASK],"['What', 'is', 'the', '[MASK]', 'average', '[MASK]', 'and', '[MASK]', '[MASK]', 'for', 'the', 'days', 'with', 'the', '3', 'largest', 'maximum', '[MASK]', '[MASK]']","SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3","['weather', 'mean_temperature_f', 'date', 'max_gust_speed_mph', 'mean_humidity']","[('weather', '')]","['mean_temperature_f', 'date', 'max_gust_speed_mph', 'mean_humidity']","limit,order,select,desc,from",False,"['avg', 'max']",0.0,0.0
449,449,What is the type of allergy Cat?,What is the [MASK] of [MASK] Cat?,"['What', 'is', 'the', '[MASK]', 'of', '[MASK]', 'Cat?']","SELECT allergytype FROM Allergy_type WHERE allergy  =  ""Cat""","['Allergy_type', 'Cat', 'allergytype', 'allergy']","[('Allergy_type', '')]","['Cat', 'allergytype', 'allergy']","select,from,where",False,['where'],1.0,1.0
4081,4081,"For each grade, return the grade number, the number of classrooms used for the grade, and the total number of students enrolled in the grade.","For each [MASK] return the [MASK] number, the number of [MASK] used for the [MASK] and the total number of [MASK] enrolled in the [MASK]","['For', 'each', '[MASK]', 'return', 'the', '[MASK]', 'number,', 'the', 'number', 'of', '[MASK]', 'used', 'for', 'the', '[MASK]', 'and', 'the', 'total', 'number', 'of', '[MASK]', 'enrolled', 'in', 'the', '[MASK]']","SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade","['list', 'classroom', 'grade']","[('list', '')]","['classroom', 'grade']","distinct,group,count,select,from",False,"['as', 'group', 'join', 'count']",0.6666666666666666,0.5
55,55,"What are the census rankings of cities that do not have the status ""Village""?",What are the [MASK] [MASK] of [MASK] that do not have the [MASK] [MASK],"['What', 'are', 'the', '[MASK]', '[MASK]', 'of', '[MASK]', 'that', 'do', 'not', 'have', 'the', '[MASK]', '[MASK]']","SELECT Census_Ranking FROM city WHERE Status !=  ""Village""","['city', 'Census_Ranking', 'Status', 'Village']","[('city', '')]","['Census_Ranking', 'Status', 'Village']","select,from,where",False,"['where', 'in', 'not']",1.0,0.3333333333333333
7971,7971,"Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",Find the [MASK] [MASK] [MASK] and [MASK] of the [MASK] living in a [MASK] that contains the substring 'West'.,"['Find', 'the', '[MASK]', '[MASK]', '[MASK]', 'and', '[MASK]', 'of', 'the', '[MASK]', 'living', 'in', 'a', '[MASK]', 'that', 'contains', 'the', 'substring', ""'West'.""]","SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","['professionals', 'city', 'role_code', 'street', 'state']","[('professionals', '')]","['city', 'role_code', 'street', 'state']","select,like,from,where",False,"['like', 'where']",1.0,1.0
7422,7422,What is the name of the museum that had no visitor yet?,What is the [MASK] of the [MASK] that had no [MASK] yet?,"['What', 'is', 'the', '[MASK]', 'of', 'the', '[MASK]', 'that', 'had', 'no', '[MASK]', 'yet?']",SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit),"['museum', 'visit', 'Museum_ID', 'museum_id', 'name']","[('museum', ''), ('visit', '')]","['Museum_ID', 'museum_id', 'name']","where,in,not,select,from",False,"['where', 'in', 'not']",1.0,1.0
7063,7063,Find the id of students who do not have a cat pet.,Find the [MASK] of [MASK] who do not have a cat pet.,"['Find', 'the', '[MASK]', 'of', '[MASK]', 'who', 'do', 'not', 'have', 'a', 'cat', 'pet.']",SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',"['student', 'has_pet', 'pets', 'student', 'pettype', 'petid', 'stuid']","[('student', 'T1'), ('has_pet', 'T2'), ('pets', 'T3'), ('student', '')]","['pettype', 'petid', 'stuid']","as,except,join,where,select,from",True,"['where', 'as', 'in', 'join', 'not']",0.75,0.6
3457,3457,display job ID for those jobs that were done by two or more for more than 300 days.,[MASK] [MASK] ID for those [MASK] that were done by two or more for more than 300 days.,"['[MASK]', '[MASK]', 'ID', 'for', 'those', '[MASK]', 'that', 'were', 'done', 'by', 'two', 'or', 'more', 'for', 'more', 'than', '300', 'days.']",SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2,"['job_history', 'end_date', 'start_date', 'job_id']","[('job_history', '')]","['end_date', 'start_date', 'job_id']","group,count,having,where,select,from",False,"['group', 'count', 'having']",0.75,1.0
6068,6068,Find the name of the customers who use the most frequently used payment method.,Find the [MASK] of the [MASK] who use the most frequently used [MASK] [MASK],"['Find', 'the', '[MASK]', 'of', 'the', '[MASK]', 'who', 'use', 'the', 'most', 'frequently', 'used', '[MASK]', '[MASK]']",SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1),"['customers', 'payment_method', 'customer_name']","[('customers', '')]","['payment_method', 'customer_name']","group,limit,count,order,where,select,desc,from",False,"['group', 'limit', 'count', 'order', 'desc']",0.8333333333333334,1.0
7365,7365,"Show all paragraph texts for the document ""Customer reviews"".",Show all [MASK] [MASK] for the [MASK] [MASK] [MASK],"['Show', 'all', '[MASK]', '[MASK]', 'for', 'the', '[MASK]', '[MASK]', '[MASK]']","SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""","['Paragraphs', 'Documents', 'Customer reviews', 'document_id', 'document_name', 'paragraph_text']","[('Paragraphs', 'T1'), ('Documents', 'T2')]","['Customer reviews', 'document_id', 'document_name', 'paragraph_text']","as,join,from,select,where",True,['distinct'],0.0,0.0
5188,5188,"Who performed the song named ""Badlands""? Show the first name and the last name.",Who [MASK] the [MASK] [MASK] [MASK] Show the [MASK] [MASK] and the [MASK] [MASK],"['Who', '[MASK]', 'the', '[MASK]', '[MASK]', '[MASK]', 'Show', 'the', '[MASK]', '[MASK]', 'and', 'the', '[MASK]', '[MASK]']","SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Badlands""","['Performance', 'Songs', 'Band', 'Badlands', 'bandmate', 'Title', 'firstname', 'lastname', 'SongId', 'id']","[('Performance', 'T1'), ('Songs', 'T3'), ('Band', 'T2')]","['Badlands', 'bandmate', 'Title', 'firstname', 'lastname', 'SongId', 'id']","as,join,from,select,where",True,"['as', 'join', 'where']",1.0,1.0
7890,7890,Show the names of all of the high schooler Kyle's friends.,Show the [MASK] of all of the [MASK] [MASK] [MASK] [MASK],"['Show', 'the', '[MASK]', 'of', 'all', 'of', 'the', '[MASK]', '[MASK]', '[MASK]', '[MASK]']","SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""","['Friend', 'Highschooler', 'Highschooler', 'Kyle', 'name', 'student_id', 'id', 'friend_id']","[('Friend', 'T1'), ('Highschooler', 'T2'), ('Highschooler', 'T3')]","['Kyle', 'name', 'student_id', 'id', 'friend_id']","as,join,from,select,where",True,[],,
1768,1768,List the distinct hometowns that are not associated with any gymnast.,List the distinct [MASK] that are not associated with any [MASK],"['List', 'the', 'distinct', '[MASK]', 'that', 'are', 'not', 'associated', 'with', 'any', '[MASK]']",SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID,"['people', 'gymnast', 'people', 'Hometown', 'Gymnast_ID', 'People_ID']","[('people', 'T2'), ('gymnast', 'T1'), ('people', '')]","['Hometown', 'Gymnast_ID', 'People_ID']","distinct,as,except,join,select,from",True,"['where', 'in', 'not']",0.0,0.0
1737,1737,Count the number of gymnasts.,Count the number of [MASK],"['Count', 'the', 'number', 'of', '[MASK]']",SELECT count(*) FROM gymnast,['gymnast'],"[('gymnast', '')]",[],"select,count,from",False,['count'],1.0,1.0
3240,3240,Which department offers the most credits all together?,Which [MASK] offers the most [MASK] all together?,"['Which', '[MASK]', 'offers', 'the', 'most', '[MASK]', 'all', 'together?']",SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1,"['CLASS', 'course', 'department', 'dept_code', 'crs_credit', 'crs_code', 'dept_name']","[('CLASS', 'T2'), ('course', 'T1'), ('department', 'T3')]","['dept_code', 'crs_credit', 'crs_code', 'dept_name']","as,group,join,limit,sum,order,select,desc,from",True,"['group', 'limit', 'count', 'order', 'desc']",0.5714285714285714,0.8
5305,5305,What is the total revenue of companies with revenue greater than the lowest revenue of any manufacturer in Austin?,What is the total [MASK] of companies with [MASK] greater than the lowest [MASK] of any [MASK] in Austin?,"['What', 'is', 'the', 'total', '[MASK]', 'of', 'companies', 'with', '[MASK]', 'greater', 'than', 'the', 'lowest', '[MASK]', 'of', 'any', '[MASK]', 'in', 'Austin?']",SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin'),"['manufacturers', 'revenue', 'headquarter']","[('manufacturers', '')]","['revenue', 'headquarter']","min,sum,where,select,from",False,"['min', 'where', 'sum']",1.0,1.0
7203,7203,How many flights depart from 'APG'?,How many [MASK] [MASK] from 'APG'?,"['How', 'many', '[MASK]', '[MASK]', 'from', ""'APG'?""]","SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  ""APG""","['FLIGHTS', 'APG', 'SourceAirport']","[('FLIGHTS', '')]","['APG', 'SourceAirport']","select,count,from,where",False,['where'],0.5,1.0
4737,4737,Return ids of all the products that are supplied by supplier id 2 and are more expensive than the average price of all products.,Return [MASK] of all the [MASK] that are [MASK] by [MASK] [MASK] 2 and are more expensive than the average [MASK] of all [MASK],"['Return', '[MASK]', 'of', 'all', 'the', '[MASK]', 'that', 'are', '[MASK]', 'by', '[MASK]', '[MASK]', '2', 'and', 'are', 'more', 'expensive', 'than', 'the', 'average', '[MASK]', 'of', 'all', '[MASK]']",SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products),"['product_suppliers', 'products', 'products', 'product_id', 'product_price', 'supplier_id']","[('product_suppliers', 'T1'), ('products', ''), ('products', 'T2')]","['product_id', 'product_price', 'supplier_id']","as,join,from,and,avg,select,where",True,"['limit', 'order', 'desc']",0.0,0.0
